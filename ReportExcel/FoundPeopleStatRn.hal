external procedure XmlXlsxWorkBegin(string,string);
external procedure CreateSheetsXLSX(integer,array string,string,integer,boolean);
external procedure EndSheet(integer,string,integer);
external procedure SetSheetsCols(integer,array val,array integer,string);
external procedure BeginSheetData(integer,string);
external procedure EndSheetData(integer,string);
external procedure BeginRow(integer,string,integer,integer,val);
external procedure EndRow(integer,string,var integer);
external procedure StringCell(integer,string,var integer,integer,integer,string,var array string,var integer,var integer);
external procedure NumericCell(integer,string,var integer,integer,integer,val);
external procedure EmptyCell(integer,string,var integer,integer,integer,integer);
external procedure MergeCells(integer,string,array string,integer);
external procedure FillSharedStrings(string,array string,integer,integer);
external procedure ConvertToXLSX(string);

procedure ArraysCollect(record RcVc RepSpec, var array string ArtArrayWithoutGroups, var array string ProjArray, var array string ArtArrayWithGroups, var boolean PrjFoundf, var vector boolean isMotherProjVect)
BEGIN
	record ITVc ITr;
	record INVc INr;
	record PRVc PRr;
	integer i,j,k,kw,kwo;
	boolean TrHs,testf,foundf;
	string 100 tstr;
	
	kw = 0;
	if RepSpec.flags[5] == 1 then begin
		ITr.Code = 4000;
		if (readfirstmain(ITr,1,true)) begin
			ArtArrayWithGroups[kw] = ITr.Code;
			kw = kw + 1;
			resetloop(INr);
			INr.Group = ITr.Code;
			TrHs = true;
			while(loopkey("Group",INr,1,TrHs)) begin
				testf = true;
				if (INr.Group!=ITr.Code) then begin testf = false; TrHs = false; end;
				if (blank(INr.Objects)) then begin testf = false; end;
				
				if (testf) then begin
					tstr = INr.Objects;
					foundf = false;
					for (i=0;i<ArtArrayWithoutGroups.length;i=i+1) begin
						if (ArtArrayWithoutGroups[i]==tstr) then begin
							foundf = true;
						end;
					end; 
					if (!foundf) then begin
						ArtArrayWithoutGroups[kwo] = INr.Objects;
						kwo = kwo + 1;
						ArtArrayWithGroups[kw] = INr.Objects;
						kw = kw + 1;
					end;
				end;
			end;
		end;
	end else begin
		while(loopmain(ITr,1,true)) begin
			ArtArrayWithGroups[kw] = ITr.Code;
			kw = kw + 1;
			resetloop(INr);
			INr.Group = ITr.Code;
			TrHs = true;
			while(loopkey("Group",INr,1,TrHs)) begin
				testf = true;
				if (INr.Group!=ITr.Code) then begin testf = false; TrHs = false; end;
				if (blank(INr.Objects)) then begin testf = false; end;
				
				if (testf) then begin
					tstr = INr.Objects;
					foundf = false;
					for (i=0;i<ArtArrayWithoutGroups.length;i=i+1) begin
						if (ArtArrayWithoutGroups[i]==tstr) then begin
							foundf = true;
						end;
					end; 
					if (!foundf) then begin
						ArtArrayWithoutGroups[kwo] = INr.Objects;
						kwo = kwo + 1;
						ArtArrayWithGroups[kw] = INr.Objects;
						kw = kw + 1;
					end;
				end;
			end;
		end;
	end;
	k = 0;
	while(loopmain(PRr,1,true)) begin
		if ((GetYear(PRr.StartDate) & "" == RepSpec.f2) or (GetYear(PRr.EndDate) & "" == RepSpec.f2)) then begin
			ProjArray[k] = PRr.Code;
			if blank(PRr.MotherCode) or (PRr.MotherCode == "") then begin
				isMotherProjVect[ProjArray[k]] = true;
			end else begin
				isMotherProjVect[ProjArray[k]] = false;
			end;
			k = k + 1;
		end;
	end;
	if (k==0) then begin
		PrjFoundf = false;
	end;
	for (j=0;j<ProjArray.length-1;j=j+1) begin
		for (i=0;i<ProjArray.length-1;i=i+1) begin
			if (ProjArray[i] > ProjArray[i+1]) then begin
				tstr = ProjArray[i+1];
				ProjArray[i+1] = ProjArray[i];
				ProjArray[i] = tstr;
			end;
		end;
	end;
	RETURN;
END;

procedure DataCollect(array string ArtArrayWithoutGroups, var array string ArtSuppl, array string ProjArray, record RcVc RepSpec,
					var vector val Quart1Vect, var vector val Quart2Vect,
					var vector val Quart3Vect, var vector val Quart4Vect,
					var vector val TOTALVect)
BEGIN
	record PRVc PRr,PR2r;
	record TBBUVc TBBUr;
	record ITVc ITr;
	record TRVc TRr;
	record MainVc Mainr;
	record ObjVc Objr;
	row TBBUVc TBBUrw;
	row TRVc TRrw;
	integer i,k,j,mtrw,PAi,ASi;
	boolean TrHs,testf,kTestf;
	string 20 group;
	vector boolean SupplInArr;
	
	ASi = 0;
	ArtSuppl[ASi] = "";
	ASi = ASi + 1;
	Objr.Code = RepSpec.ObjStr;
	readfirstmain(Objr,1,true);
	for (PAi=0;PAi<ProjArray.length;PAi=PAi+1) begin 
		PRr.Code = ProjArray[PAi];
		if (ReadFirstMain(PRr,1,true)) then begin
			if ((GetYear(PRr.StartDate) & "" == RepSpec.f2) or (GetYear(PRr.EndDate) & "" == RepSpec.f2)) then begin
				TBBUr.PRCode = PRr.Code;
				if (readfirstmain(TBBUr,1,true)) then begin
					mtrw = matrowcnt(TBBUr);
					k = 0;
					for (i=0;i<mtrw;i=i+1) begin
						matrowget(TBBUr,i,TBBUrw);
						if (RepSpec.flags[6] == 1) then begin
							TBBUrw.VECode = "";
						end;
						if(TBBUrw.stp==18) then begin
							k = TBBUrw.ItemType;
						end;
						kTestf = false;
						if ((RepSpec.flags[1] == 1) and (k == 1)) then begin
							kTestf = true;
						end;
						if ((RepSpec.flags[2] == 1) and (k == 2)) then begin
							kTestf = true;
						end;
						if ((RepSpec.flags[3] == 1) and (k == 3)) then begin
							kTestf = true;
						end;
						if ((RepSpec.flags[4] == 1) and (k == 4)) then begin
							kTestf = true;
						end;
						if ((RepSpec.flags[1] == 1) and ((k!= 1) and (k!= 2) and (k!= 3) and (k!= 4))) then begin
							kTestf = true;
						end;
						if (kTestf and (TBBUrw.stp==1 and TBBUrw.Sum!=0 and nonblank(TBBUrw.ArtCode) and TBBUrw.ExtraObj==RepSpec.f1 and (setinset(RepSpec.ObjStr,TBBUrw.Objects) or blank(RepSpec.ObjStr) or Objr.OTCode=="LOCAT"))) then begin
							if nonblank(TBBUrw.VECode) and !SupplInArr[TBBUrw.VECode] then begin
								SupplInArr[TBBUrw.VECode] = true;
								ArtSuppl[ASi] = TBBUrw.VECode;
								ASi = ASi + 1;
							end;
							for (j=0;j<ArtArrayWithoutGroups.length;j=j+1) begin
								if (setinset(ArtArrayWithoutGroups[j],TBBUrw.Objects)) then begin
									ITr.Code = ArtArrayWithoutGroups[j];
									ReadLastMain(ITr,1,false);
									group = ITr.Code;
									switch (k) begin
										case 1:
											Quart1Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":" & ProjArray[PAi]] = Quart1Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":" & ProjArray[PAi]] + TBBUrw.Sum;
											Quart1Vect["TOTAL:" & ProjArray[PAi]] = Quart1Vect["TOTAL:" & ProjArray[PAi]] + TBBUrw.Sum;
											Quart1Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":TOTAL"] = Quart1Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":TOTAL"] + TBBUrw.Sum;
											Quart1Vect["TOTAL:TOTAL"] = Quart1Vect["TOTAL:TOTAL"] + TBBUrw.Sum;
											Quart1Vect[group & ":" & ProjArray[PAi]] = Quart1Vect[group & ":" & ProjArray[PAi]] + TBBUrw.Sum;
											Quart1Vect[group & ":TOTAL"] = Quart1Vect[group & ":TOTAL"] + TBBUrw.Sum;
										case 2:
											Quart2Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":" & ProjArray[PAi]] = Quart2Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":" & ProjArray[PAi]] + TBBUrw.Sum;
											Quart2Vect["TOTAL:" & ProjArray[PAi]] = Quart2Vect["TOTAL:" & ProjArray[PAi]] + TBBUrw.Sum;
											Quart2Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":TOTAL"] = Quart2Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":TOTAL"] + TBBUrw.Sum;
											Quart2Vect["TOTAL:TOTAL"] = Quart2Vect["TOTAL:TOTAL"] + TBBUrw.Sum;
											Quart2Vect[group & ":" & ProjArray[PAi]] = Quart2Vect[group & ":" & ProjArray[PAi]] + TBBUrw.Sum;
											Quart2Vect[group & ":TOTAL"] = Quart2Vect[group & ":TOTAL"] + TBBUrw.Sum;
										case 3:
											Quart3Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":" & ProjArray[PAi]] = Quart3Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":" & ProjArray[PAi]] + TBBUrw.Sum;
											Quart3Vect["TOTAL:" & ProjArray[PAi]] = Quart3Vect["TOTAL:" & ProjArray[PAi]] + TBBUrw.Sum;
											Quart3Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":TOTAL"] = Quart3Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":TOTAL"] + TBBUrw.Sum;
											Quart3Vect["TOTAL:TOTAL"] = Quart3Vect["TOTAL:TOTAL"] + TBBUrw.Sum;
											Quart3Vect[group & ":" & ProjArray[PAi]] = Quart3Vect[group & ":" & ProjArray[PAi]] + TBBUrw.Sum;
											Quart3Vect[group & ":TOTAL"] = Quart3Vect[group & ":TOTAL"] + TBBUrw.Sum;
										case 4:
											Quart4Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":" & ProjArray[PAi]] = Quart4Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":" & ProjArray[PAi]] + TBBUrw.Sum;
											Quart4Vect["TOTAL:" & ProjArray[PAi]] = Quart4Vect["TOTAL:" & ProjArray[PAi]] + TBBUrw.Sum;
											Quart4Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":TOTAL"] = Quart4Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":TOTAL"] + TBBUrw.Sum;
											Quart4Vect["TOTAL:TOTAL"] = Quart4Vect["TOTAL:TOTAL"] + TBBUrw.Sum;
											Quart4Vect[group & ":" & ProjArray[PAi]] = Quart4Vect[group & ":" & ProjArray[PAi]] + TBBUrw.Sum;
											Quart4Vect[group & ":TOTAL"] = Quart4Vect[group & ":TOTAL"] + TBBUrw.Sum;
										otherwise
											Quart1Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":" & ProjArray[PAi]] = Quart1Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":" & ProjArray[PAi]] + TBBUrw.Sum;
											Quart1Vect["TOTAL:" & ProjArray[PAi]] = Quart1Vect["TOTAL:" & ProjArray[PAi]] + TBBUrw.Sum;
											Quart1Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":TOTAL"] = Quart1Vect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":TOTAL"] + TBBUrw.Sum;
											Quart1Vect["TOTAL:TOTAL"] = Quart1Vect["TOTAL:TOTAL"] + TBBUrw.Sum;
											Quart1Vect[group & ":" & ProjArray[PAi]] = Quart1Vect[group & ":" & ProjArray[PAi]] + TBBUrw.Sum;
											Quart1Vect[group & ":TOTAL"] = Quart1Vect[group & ":TOTAL"] + TBBUrw.Sum;
									end;
									TOTALVect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":" & ProjArray[PAi]] = TOTALVect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":" & ProjArray[PAi]] + TBBUrw.Sum;
									TOTALVect["TOTAL:" & ProjArray[PAi]] = TOTALVect["TOTAL:" & ProjArray[PAi]] + TBBUrw.Sum;
									TOTALVect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":TOTAL"] = TOTALVect[ArtArrayWithoutGroups[j] & ":" & TBBUrw.VECode & ":TOTAL"] + TBBUrw.Sum;
									TOTALVect["TOTAL:TOTAL"] = TOTALVect["TOTAL:TOTAL"] + TBBUrw.Sum;
									TOTALVect[group & ":" & ProjArray[PAi]] = TOTALVect[group & ":" & ProjArray[PAi]] + TBBUrw.Sum;
									TOTALVect[group & ":TOTAL"] = TOTALVect[group & ":TOTAL"] + TBBUrw.Sum;
								end;
							end; 
						end;
					end; 
				end;
			end;
		end;
	end;

	RETURN;
END;

global
procedure FoundPeopleStatRn(record RcVc RepSpec,var area areatofile, var boolean PrjFoundf)
BEGIN
//RepSpec.f1 - Foundation
//RepSpec.ObjStr - Location
	record BaseCurBlock BCb;
	record ITVc ITr;
	record ObjVc Objr;
	array string 10 ArtArrayWithoutGroups,ProjArray,ArtArrayWithGroups,ArtSuppl;
	vector val Quart1Vect,Quart2Vect,Quart3Vect,Quart4Vect,TOTALVect,PrjTotVect;
	vector boolean isMotherProjVect;
	integer i,j,k,quartCount;
	string 10 group,nextgroup;
	val sum,sum1,sum2;
	string 100 tstr;
	integer suppCount1,suppCount2;
	boolean firstprintf,firstprint2f;
	array integer quartToPrint;
	
	array string 10 sheetNames;
	array val sheetColls;
	array integer sheetCollsOutLvl;
	array string 21 mergeCell;
	string 255 fileToSave;
	integer qtyOfSheets,sheetnum,rownum,colnum,style,qtyOfEmpStr,
			style1,style2,style3,style4,style5,style6,style7,style8,style9,style10,style11,style12,style13;
	array string 100 SharedStrings;
	integer numOfUniqueSharedStrings,numOfSharedStrings,qtyMergeCell;
	string 16 reportName;
	
	
	ArraysCollect(RepSpec,ArtArrayWithoutGroups,ProjArray,ArtArrayWithGroups,PrjFoundf,isMotherProjVect);
	if (PrjFoundf) then begin
		DataCollect(ArtArrayWithoutGroups,ArtSuppl,ProjArray,RepSpec,Quart1Vect,Quart2Vect,Quart3Vect,Quart4Vect,TOTALVect);

		reportName = "FoundPeopleStatRn";
		if(windowsmode==1)then begin
			fileToSave = "tmpxlsx.xlsx";
		end else begin
			fileToSave = "/tmpxlsx.xlsx";
		end;
		deletefolder(Left(fileToSave,(len(fileToSave) - 5)));
		BlockLoad(BCb);
		sheetNames[0] = RepSpec.f1;
		if nonblank(RepSpec.ObjStr) then begin
			sheetNames[0] = sheetNames[0] & "-" & RepSpec.ObjStr;
		end;
		sheetNames[0] = sheetNames[0] & "-Projects-TOT";
		qtyOfSheets = 1;
		quartCount = RepSpec.flags[1] + RepSpec.flags[2] + RepSpec.flags[3] + RepSpec.flags[4];
		if (RepSpec.flags[4]==1) then begin
			i = 4;
		end;
		if (RepSpec.flags[3]==1) then begin
			i = 3;
		end;
		if (RepSpec.flags[2]==1) then begin
			i = 2;
		end;
		if (RepSpec.flags[1]==1) then begin
			i = 1;
		end;
		quartToPrint[0] = i;
		i = 0;
		for (i=1;i<quartCount;i=i+1) begin
			quartToPrint[i] = quartToPrint[0] + i;
		end;		
		
		colnum = 0;
		sheetColls[colnum] = 5.28515625;
		colnum = colnum + 1;
		sheetColls[colnum] = 5.28515625;
		colnum = colnum + 1;
		sheetColls[colnum] = 37.42578125;
		colnum = colnum + 1;
		if (RepSpec.flags[6] == 0) then begin
			sheetColls[colnum] = 5.28515625;
			colnum = colnum + 1;
		end;
		sheetColls[colnum] = 13.42578125;
		colnum = colnum + 1;
		if (RepSpec.flags[6] == 0) then begin
			sheetColls[colnum] = 5.28515625;
			colnum = colnum + 1;
			sheetColls[colnum] = 0.85546875;
			colnum = colnum + 1;
		end;
		for (i=0;i<ProjArray.length + 1;i=i+1) begin
			sheetColls[colnum] = 13.140625;
			colnum = colnum + 1;
		end;
		if quartCount > 1 then begin
			sheetColls[colnum] = 2;
			colnum = colnum + 1;
			for (i=0;i<ProjArray.length + 1;i=i+1) begin
				sheetColls[colnum] = 13.140625;
				colnum = colnum + 1;
			end;
		end;
		colnum = 0;
		numOfUniqueSharedStrings = 0;
		numOfSharedStrings = 0;
		sheetnum = 1;
		qtyMergeCell = 0;
		XmlXlsxWorkBegin(fileToSave,reportName);
		CreateSheetsXLSX(qtyOfSheets,sheetNames,fileToSave,0,false);
		SetSheetsCols(sheetnum,sheetColls,sheetCollsOutLvl,fileToSave);
		BeginSheetData(sheetnum,fileToSave);
			rownum = 1;
			colnum = 1;
			BeginRow(sheetnum,fileToSave,rownum,0,blankval);
				style = 1;
				StringCell(sheetnum,fileToSave,colnum,rownum,style,"Project",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
			EndRow(sheetnum,fileToSave,rownum);
			BeginRow(sheetnum,fileToSave,rownum,0,6);
			EndRow(sheetnum,fileToSave,rownum);
			colnum = 1;
			BeginRow(sheetnum,fileToSave,rownum,0,blankval);
				style = 5;
				StringCell(sheetnum,fileToSave,colnum,rownum,style,"Period",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
				style = 6;
				qtyOfEmpStr = 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				StringCell(sheetnum,fileToSave,colnum,rownum,style,": " & RepSpec.sStartDate & " - " & RepSpec.sEndDate,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
			EndRow(sheetnum,fileToSave,rownum);
			BeginRow(sheetnum,fileToSave,rownum,0,6);
			EndRow(sheetnum,fileToSave,rownum);
			colnum = 1;
			BeginRow(sheetnum,fileToSave,rownum,0,blankval);
				style = 7;
				StringCell(sheetnum,fileToSave,colnum,rownum,style,"Currency",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
				style = 8;
				qtyOfEmpStr = 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				StringCell(sheetnum,fileToSave,colnum,rownum,style,": " & BCb.BaseCur1,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
				style = 7;
			EndRow(sheetnum,fileToSave,rownum);
			BeginRow(sheetnum,fileToSave,rownum,0,6);
			EndRow(sheetnum,fileToSave,rownum);
			colnum = 4;
			BeginRow(sheetnum,fileToSave,rownum,0,30);
				if (RepSpec.flags[6] == 0) then begin
					style = 9;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 10;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 11;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
				colnum = colnum + 1;
				tstr = RepSpec.f1 & " - Total";
				if (RepSpec.flags[1]==1) then begin
					tstr = tstr & "(Q1-";
				end else begin
					if (RepSpec.flags[2]==1) then begin
						tstr = tstr & "(Q2-";
					end else begin
						if (RepSpec.flags[3]==1) then begin
							tstr = tstr & "(Q3-";
						end else begin
							if (RepSpec.flags[4]==1) then begin
								tstr = tstr & "(Q4-";
							end;
						end;
					end;
				end;
				if (RepSpec.flags[4]==1) then begin
					tstr = tstr & "Q4)";
				end else begin
					if (RepSpec.flags[3]==1) then begin
						tstr = tstr & "Q3)";
					end else begin
						if (RepSpec.flags[2]==1) then begin
							tstr = tstr & "Q2)";
						end else begin
							if (RepSpec.flags[1]==1) then begin
								tstr = tstr & "Q1)";
							end;
						end;
					end;
				end;
				style = 75;
				StringCell(sheetnum,fileToSave,colnum,rownum,style,tstr,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
				style = 76;
				qtyOfEmpStr = ProjArray.length - 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				style = 77;
				qtyOfEmpStr = 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
			EndRow(sheetnum,fileToSave,rownum);
			colnum = 4;
			BeginRow(sheetnum,fileToSave,rownum,0,blankval);
				if (RepSpec.flags[6] == 0) then begin
					style = 13;
					StringCell(sheetnum,fileToSave,colnum,rownum,style,"H.No.",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					style = 19;
					StringCell(sheetnum,fileToSave,colnum,rownum,style,"Name",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					style = 14;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
				colnum = colnum + 1;
				for (i=0;i<ProjArray.length;i=i+1) begin
					if isMotherProjVect[ProjArray[i]] then begin
						if (i == 0) then begin
							style = 21;
						end else begin
							if (i == (ProjArray.length - 1)) then begin
								style = 25;
							end else begin
								style = 22;
							end;
						end;
					end else begin
						if (i == (ProjArray.length - 1)) then begin
							if mod(StringToInt(right(ProjArray[i],1)),2) == 1 then begin
								style = 82;
							end else begin
								style = 81;
							end;
						end else begin
							if mod(StringToInt(right(ProjArray[i],1)),2) == 1 then begin
								style = 24;
							end else begin
								style = 23;
							end;
						end;
					end;
					StringCell(sheetnum,fileToSave,colnum,rownum,style,ProjArray[i],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
				end;
				style = 83;
				StringCell(sheetnum,fileToSave,colnum,rownum,style,"Grand",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
			EndRow(sheetnum,fileToSave,rownum);
			colnum = 4;
			BeginRow(sheetnum,fileToSave,rownum,0,4);
				if (RepSpec.flags[6] == 0) then begin
					style = 17;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 12;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 16;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
				colnum = colnum + 1;
				style = 26;
				qtyOfEmpStr = 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				style = 27;
				qtyOfEmpStr = ProjArray.length - 2;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				style = 28;
				qtyOfEmpStr = 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				style = 85;
				qtyOfEmpStr = 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
			EndRow(sheetnum,fileToSave,rownum);
			colnum = 4;
			BeginRow(sheetnum,fileToSave,rownum,0,blankval);
				if (RepSpec.flags[6] == 0) then begin
					style = 17;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 12;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 16;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
				colnum = colnum + 1;
				style = 29;
				qtyOfEmpStr = 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				style = 30;
				qtyOfEmpStr = ProjArray.length - 2;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				style = 31;
				qtyOfEmpStr = 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				style = 84;
				StringCell(sheetnum,fileToSave,colnum,rownum,style,"Total",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
			EndRow(sheetnum,fileToSave,rownum);
			colnum = 4;
			BeginRow(sheetnum,fileToSave,rownum,0,blankval);
				if (RepSpec.flags[6] == 0) then begin
					style = 17;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 12;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 16;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
			EndRow(sheetnum,fileToSave,rownum);
			for (i=0;i<ArtArrayWithGroups.length;i=i+1) begin
				ITr.Code = ArtArrayWithGroups[i+1];
				ReadLastMain(ITr,1,false);
				nextgroup = ITr.Code;
				ITr.Code = ArtArrayWithGroups[i];
				ReadLastMain(ITr,1,false);
				group = ITr.Code;
				if ArtArrayWithGroups[i]==group then begin
					colnum = 1;
					BeginRow(sheetnum,fileToSave,rownum,0,blankval);
						style = 2;
						StringCell(sheetnum,fileToSave,colnum,rownum,style,group,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
						StringCell(sheetnum,fileToSave,colnum,rownum,style,ITr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
						colnum = colnum + 1;
						if (RepSpec.flags[6] == 0) then begin
							style = 17;
							qtyOfEmpStr = 1;
							EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
							style = 12;
							qtyOfEmpStr = 1;
							EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
							style = 16;
							qtyOfEmpStr = 1;
							EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						end;
						colnum = colnum + 1;
						for (j=0;j<ProjArray.length;j=j+1) begin
							style = 32;
							NumericCell(sheetnum,fileToSave,colnum,rownum,style,TOTALVect[group & ":" & ProjArray[j]]);
						end;
						style = 37;
						NumericCell(sheetnum,fileToSave,colnum,rownum,style,TOTALVect[group & ":TOTAL"]);
					EndRow(sheetnum,fileToSave,rownum);
				end else begin
					if ArtArrayWithGroups[i+1]==nextgroup then begin
						colnum = 4;
						BeginRow(sheetnum,fileToSave,rownum,0,10);
							if (RepSpec.flags[6] == 0) then begin
								style = 17;
								qtyOfEmpStr = 1;
								EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
								style = 12;
								qtyOfEmpStr = 1;
								EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
								style = 16;
								qtyOfEmpStr = 1;
								EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
							end;
							colnum = colnum + 1;
							style = 86;
							qtyOfEmpStr = ProjArray.length + 1;
							EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						EndRow(sheetnum,fileToSave,rownum);
					end;
					firstprintf = true;
					for (k=0;k<ArtSuppl.length;k=k+1) begin
						if (TOTALVect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"] != blankval) and (TOTALVect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"] != 0) then begin
							colnum = 1;
							BeginRow(sheetnum,fileToSave,rownum,0,blankval);
								style = 4;
								if (Right(ArtArrayWithGroups[i],1)=="0") or (Right(ArtArrayWithGroups[i],2)=="99") then begin
									StringCell(sheetnum,fileToSave,colnum,rownum,style,ArtArrayWithGroups[i],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
									colnum = colnum + 1;
								end else begin
									colnum = colnum + 1;
									StringCell(sheetnum,fileToSave,colnum,rownum,style,ArtArrayWithGroups[i],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
								end;
								Objr.Code = ArtArrayWithGroups[i];
								readfirstmain(Objr,1,true);
								StringCell(sheetnum,fileToSave,colnum,rownum,style,Objr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
								if (RepSpec.flags[6] == 0) then begin
									if nonblank(ArtSuppl[k]) then begin
										style = 17;
										StringCell(sheetnum,fileToSave,colnum,rownum,style,ArtSuppl[k],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
										Objr.Code = ArtSuppl[k];
										readfirstmain(Objr,1,true);
										style = 12;
										StringCell(sheetnum,fileToSave,colnum,rownum,style,Objr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
									end else begin
										style = 17;
										qtyOfEmpStr = 1;
										EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
										style = 12;
										qtyOfEmpStr = 1;
										EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
									end;
									style = 16;
									qtyOfEmpStr = 1;
									EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
								end;
								colnum = colnum + 1;
								if firstprintf then begin
									firstprintf = false;
									for (j=0;j<ProjArray.length;j=j+1) begin
										style = 34;
										NumericCell(sheetnum,fileToSave,colnum,rownum,style,TOTALVect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
									end;
									style = 38;
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,TOTALVect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
								end else begin
									for (j=0;j<ProjArray.length;j=j+1) begin
										style = 35;
										NumericCell(sheetnum,fileToSave,colnum,rownum,style,TOTALVect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
									end;
									style = 39;
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,TOTALVect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
								end;
							EndRow(sheetnum,fileToSave,rownum);
						end;
					end;
				end;
			end;
			colnum = 4;
			BeginRow(sheetnum,fileToSave,rownum,0,10);
				if (RepSpec.flags[6] == 0) then begin
					style = 87;
					qtyOfEmpStr = 3;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
				colnum = colnum + 1;
				style = 86;
				qtyOfEmpStr = ProjArray.length + 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
			EndRow(sheetnum,fileToSave,rownum);
			colnum = 2;
			BeginRow(sheetnum,fileToSave,rownum,0,blankval);
				style = 2;
				StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOTAL COST:",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
				if (RepSpec.flags[6] == 0) then begin
					colnum = colnum + 5;
				end else begin
					colnum = colnum + 2;
				end;
				for (j=0;j<ProjArray.length;j=j+1) begin
					style = 32;
					NumericCell(sheetnum,fileToSave,colnum,rownum,style,TOTALVect["TOTAL:" & ProjArray[j]]);
				end;
				style = 33;
				NumericCell(sheetnum,fileToSave,colnum,rownum,style,TOTALVect["TOTAL:TOTAL"]);
			EndRow(sheetnum,fileToSave,rownum);
			if (RepSpec.flags[6] == 0) then begin
				BeginRow(sheetnum,fileToSave,rownum,0,10);
				EndRow(sheetnum,fileToSave,rownum);
				colnum = 2;
				BeginRow(sheetnum,fileToSave,rownum,0,blankval);
					style = 2;
					StringCell(sheetnum,fileToSave,colnum,rownum,style,"People Tot Number:",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					if (RepSpec.flags[6] == 0) then begin
						colnum = colnum + 5;
					end else begin
						colnum = colnum + 2;
					end;
					style = 41;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 42;
					qtyOfEmpStr = ProjArray.length - 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 43;
					NumericCell(sheetnum,fileToSave,colnum,rownum,style,ArtSuppl.length - 1);
				EndRow(sheetnum,fileToSave,rownum);
				if (RepSpec.flags[6] == 0) then begin
					colnum = 8;
				end else begin
					colnum = 5;
				end;
				BeginRow(sheetnum,fileToSave,rownum,0,2.5);
					style = 44;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 45;
					qtyOfEmpStr = ProjArray.length - 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 46;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				EndRow(sheetnum,fileToSave,rownum);
			end;
			rownum = rownum + 1;
			if (RepSpec.flags[6] == 0) then begin
				colnum = 8;
			end else begin
				colnum = 5;
			end;
			BeginRow(sheetnum,fileToSave,rownum,0,6);
				style = 3;
				if quartCount > 1 then begin
					qtyOfEmpStr = (ProjArray.length + 1)*2 + 1;
				end else begin
					qtyOfEmpStr = ProjArray.length + 1;
				end;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
			EndRow(sheetnum,fileToSave,rownum);
			rownum = rownum + 1;
			colnum = 4;
			BeginRow(sheetnum,fileToSave,rownum,0,30);
				if (RepSpec.flags[6] == 0) then begin
					style = 9;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 10;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 11;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
				colnum = colnum + 1;
				tstr = RepSpec.f1 & " - Budget";
				style = 78;
				StringCell(sheetnum,fileToSave,colnum,rownum,style,tstr,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
				style = 79;
				qtyOfEmpStr = ProjArray.length - 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				style = 80;
				qtyOfEmpStr = 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				if quartCount > 1 then begin
					colnum = colnum + 1;
					style = 78;
					StringCell(sheetnum,fileToSave,colnum,rownum,style,tstr,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					style = 79;
					qtyOfEmpStr = ProjArray.length - 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 80;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
			EndRow(sheetnum,fileToSave,rownum);
			colnum = 4;
			BeginRow(sheetnum,fileToSave,rownum,0,blankval);
				if (RepSpec.flags[6] == 0) then begin
					style = 13;
					StringCell(sheetnum,fileToSave,colnum,rownum,style,"H.No.",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					style = 19;
					StringCell(sheetnum,fileToSave,colnum,rownum,style,"Name",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					style = 14;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
				colnum = colnum + 1;
				for (i=0;i<ProjArray.length;i=i+1) begin
					if isMotherProjVect[ProjArray[i]] then begin
						if (i == 0) then begin
							style = 21;
						end else begin
							style = 22;
						end;
					end else begin
						if mod(StringToInt(right(ProjArray[i],1)),2) == 1 then begin
							style = 24;
						end else begin
							style = 23;
						end;
					end;
					StringCell(sheetnum,fileToSave,colnum,rownum,style,ProjArray[i],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
				end;
				style = 48;
				qtyOfEmpStr = 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				if quartCount > 1 then begin
					colnum = colnum + 1;
					for (i=0;i<ProjArray.length;i=i+1) begin
						if isMotherProjVect[ProjArray[i]] then begin
							if (i == 0) then begin
								style = 21;
							end else begin
								style = 22;
							end;
						end else begin
							if mod(StringToInt(right(ProjArray[i],1)),2) == 1 then begin
								style = 24;
							end else begin
								style = 23;
							end;
						end;
						StringCell(sheetnum,fileToSave,colnum,rownum,style,ProjArray[i],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					end;
					style = 48;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
			EndRow(sheetnum,fileToSave,rownum);
			colnum = 4;
			BeginRow(sheetnum,fileToSave,rownum,0,4);
				if (RepSpec.flags[6] == 0) then begin
					style = 17;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 12;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 16;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
				colnum = colnum + 1;
				style = 49;
				qtyOfEmpStr = 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				style = 50;
				qtyOfEmpStr = ProjArray.length - 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				style = 51;
				qtyOfEmpStr = 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				if quartCount > 1 then begin
					colnum = colnum + 1;
					style = 49;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 50;
					qtyOfEmpStr = ProjArray.length - 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 51;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
			EndRow(sheetnum,fileToSave,rownum);
			colnum = 4;
			BeginRow(sheetnum,fileToSave,rownum,0,blankval);
				if (RepSpec.flags[6] == 0) then begin
					style = 17;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 12;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 16;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
				colnum = colnum + 1;
				switch quartToPrint[0] begin
					case 1:
						tstr = "QI";
					case 2:
						tstr = "QII";
					case 3:
						tstr = "QIII";
					case 4:
						tstr = "QIV";
				end;
				style = 52;
				StringCell(sheetnum,fileToSave,colnum,rownum,style,tstr,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
				style = 53;
				for (i=0;i<(ProjArray.length - 1);i=i+1) begin
					StringCell(sheetnum,fileToSave,colnum,rownum,style,tstr,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
				end;
				style = 54;
				StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOT",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
				if quartCount > 1 then begin
					colnum = colnum + 1;
					switch quartToPrint[1] begin
						case 1:
							tstr = "QI";
						case 2:
							tstr = "QII";
						case 3:
							tstr = "QIII";
						case 4:
							tstr = "QIV";
					end;
					style = 52;
					StringCell(sheetnum,fileToSave,colnum,rownum,style,tstr,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					style = 53;
					for (i=0;i<(ProjArray.length - 1);i=i+1) begin
						StringCell(sheetnum,fileToSave,colnum,rownum,style,tstr,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					end;
					style = 54;
					StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOT",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
				end;
			EndRow(sheetnum,fileToSave,rownum);
			colnum = 4;
			BeginRow(sheetnum,fileToSave,rownum,0,10);
				if (RepSpec.flags[6] == 0) then begin
					style = 17;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 12;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 16;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
			EndRow(sheetnum,fileToSave,rownum);
			suppCount1 = 0;
			suppCount2 = 0;
			for (i=0;i<ArtArrayWithGroups.length;i=i+1) begin
				ITr.Code = ArtArrayWithGroups[i+1];
				ReadLastMain(ITr,1,false);
				nextgroup = ITr.Code;
				ITr.Code = ArtArrayWithGroups[i];
				ReadLastMain(ITr,1,false);
				group = ITr.Code;
				if ArtArrayWithGroups[i]==group then begin
					colnum = 1;
					BeginRow(sheetnum,fileToSave,rownum,0,blankval);
						style = 2;
						StringCell(sheetnum,fileToSave,colnum,rownum,style,group,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
						StringCell(sheetnum,fileToSave,colnum,rownum,style,ITr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
						colnum = colnum + 1;
						if (RepSpec.flags[6] == 0) then begin
							style = 17;
							qtyOfEmpStr = 1;
							EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
							style = 12;
							qtyOfEmpStr = 1;
							EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
							style = 16;
							qtyOfEmpStr = 1;
							EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						end;
						colnum = colnum + 1;
						for (j=0;j<ProjArray.length;j=j+1) begin
							if isMotherProjVect[ProjArray[j]] then begin
								style = 66;
							end else begin
								if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
									style = 69;
								end else begin
									style = 71;
								end;
							end;
							switch quartToPrint[0] begin
								case 1:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[group & ":" & ProjArray[j]]);
								case 2:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[group & ":" & ProjArray[j]]);
								case 3:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[group & ":" & ProjArray[j]]);
								case 4:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[group & ":" & ProjArray[j]]);
							end;
						end;
						style = 73;
						switch quartToPrint[0] begin
							case 1:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[group & ":TOTAL"]);
							case 2:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[group & ":TOTAL"]);
							case 3:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[group & ":TOTAL"]);
							case 4:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[group & ":TOTAL"]);
						end;
						if quartCount > 1 then begin
							colnum = colnum + 1;
							for (j=0;j<ProjArray.length;j=j+1) begin
									if isMotherProjVect[ProjArray[j]] then begin
									style = 66;
								end else begin
									if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
										style = 69;
									end else begin
										style = 71;
									end;
								end;
								switch quartToPrint[1] begin
									case 1:
										NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[group & ":" & ProjArray[j]]);
									case 2:
										NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[group & ":" & ProjArray[j]]);
									case 3:
										NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[group & ":" & ProjArray[j]]);
									case 4:
										NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[group & ":" & ProjArray[j]]);
								end;
							end;
							style = 73;
							switch quartToPrint[1] begin
								case 1:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[group & ":TOTAL"]);
								case 2:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[group & ":TOTAL"]);
								case 3:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[group & ":TOTAL"]);
								case 4:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[group & ":TOTAL"]);
							end;
						end;
					EndRow(sheetnum,fileToSave,rownum);
				end else begin
					if ArtArrayWithGroups[i+1]==nextgroup then begin
						colnum = 4;
						BeginRow(sheetnum,fileToSave,rownum,0,10);
							if (RepSpec.flags[6] == 0) then begin
								style = 17;
								qtyOfEmpStr = 1;
								EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
								style = 12;
								qtyOfEmpStr = 1;
								EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
								style = 16;
								qtyOfEmpStr = 1;
								EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
							end;
							colnum = colnum + 1;
							style = 86;
							qtyOfEmpStr = ProjArray.length + 1;
							EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
							if quartCount > 1 then begin
								colnum = colnum + 1;
								style = 86;
								qtyOfEmpStr = ProjArray.length + 1;
								EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
							end;
						EndRow(sheetnum,fileToSave,rownum);
					end;
					firstprintf = true;
					firstprint2f = true;
					for (k=0;k<ArtSuppl.length;k=k+1) begin
						sum = 0;
						sum1 = 0;
						sum2 = 0;
						switch quartToPrint[0] begin
							case 1:
								sum = sum + Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"] + Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
								sum1 = sum1 + Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
								sum2 = sum2 + Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
							case 2:
								sum = sum + Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"] + Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
								sum1 = sum1 + Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
								sum2 = sum2 + Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
							case 3:
								sum = sum + Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"] + Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
								sum1 = sum1 + Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
								sum2 = sum2 + Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
							case 4:
								sum = sum + Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
								sum1 = sum1 + Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
								sum2 = 0;
						end;
						if (sum != 0) then begin
							colnum = 1;
							BeginRow(sheetnum,fileToSave,rownum,0,blankval);
								style = 4;
								if (Right(ArtArrayWithGroups[i],1) == "0") or (Right(ArtArrayWithGroups[i],2) == "99") then begin
									StringCell(sheetnum,fileToSave,colnum,rownum,style,ArtArrayWithGroups[i],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
									colnum = colnum + 1;
								end else begin
									colnum = colnum + 1;
									StringCell(sheetnum,fileToSave,colnum,rownum,style,ArtArrayWithGroups[i],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
								end;
								Objr.Code = ArtArrayWithGroups[i];
								readfirstmain(Objr,1,true);
								StringCell(sheetnum,fileToSave,colnum,rownum,style,Objr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
								if (RepSpec.flags[6] == 0) then begin
									if nonblank(ArtSuppl[k]) then begin
										style = 17;
										StringCell(sheetnum,fileToSave,colnum,rownum,style,ArtSuppl[k],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
										Objr.Code = ArtSuppl[k];
										if sum1 != 0 then begin
											suppCount1 = suppCount1 + 1;
										end;
										if sum2 != 0 then begin
											suppCount2 = suppCount2 + 1;
										end;
										readfirstmain(Objr,1,true);
										style = 12;
										StringCell(sheetnum,fileToSave,colnum,rownum,style,Objr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
									end else begin
										style = 17;
										qtyOfEmpStr = 1;
										EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
										style = 12;
										qtyOfEmpStr = 1;
										EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
									end;
									style = 16;
									qtyOfEmpStr = 1;
									EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
								end;
								colnum = colnum + 1;
								if firstprintf then begin
									firstprintf = false;
									for (j=0;j<ProjArray.length;j=j+1) begin
										if isMotherProjVect[ProjArray[j]] then begin
											if (j == 0) then begin
												style = 65;
											end else begin
												style = 67;
											end;
										end else begin
											if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
												style = 68;
											end else begin
												style = 70;
											end;
										end;
										switch quartToPrint[0] begin
											case 1:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
											case 2:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
											case 3:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
											case 4:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
										end;
									end;
									style = 72;
									switch quartToPrint[0] begin
										case 1:
											NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
										case 2:
											NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
										case 3:
											NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
										case 4:
											NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
									end;
								end else begin
									for (j=0;j<ProjArray.length;j=j+1) begin
										if isMotherProjVect[ProjArray[j]] then begin
											if (j == 0) then begin
												style = 58;
											end else begin
												style = 55;
											end;
										end else begin
											if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
												style = 56;
											end else begin
												style = 57;
											end;
										end;
										switch quartToPrint[0] begin
											case 1:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
											case 2:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
											case 3:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
											case 4:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
										end;
									end;
									style = 59;
									switch quartToPrint[0] begin
										case 1:
											NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
										case 2:
											NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
										case 3:
											NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
										case 4:
											NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
									end;
								end;
								if quartCount > 1 then begin
									colnum = colnum + 1;
									if firstprint2f then begin
										firstprint2f = false;
										for (j=0;j<ProjArray.length;j=j+1) begin
											if isMotherProjVect[ProjArray[j]] then begin
												if (j == 0) then begin
													style = 65;
												end else begin
													style = 67;
												end;
											end else begin
												if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
													style = 68;
												end else begin
													style = 70;
												end;
											end;
											switch quartToPrint[1] begin
												case 1:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
												case 2:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
												case 3:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
												case 4:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
											end;
										end;
										style = 72;
										switch quartToPrint[1] begin
											case 1:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
											case 2:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
											case 3:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
											case 4:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
										end;
									end else begin
										for (j=0;j<ProjArray.length;j=j+1) begin
											if isMotherProjVect[ProjArray[j]] then begin
												if (j == 0) then begin
													style = 58;
												end else begin
													style = 55;
												end;
											end else begin
												if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
													style = 56;
												end else begin
													style = 57;
												end;
											end;
											switch quartToPrint[1] begin
												case 1:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
												case 2:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
												case 3:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
												case 4:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
											end;
										end;
										style = 59;
										switch quartToPrint[1] begin
											case 1:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
											case 2:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
											case 3:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
											case 4:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
										end;
									end;
								end;
							EndRow(sheetnum,fileToSave,rownum);
						end;
					end;
				end;
			end;
			colnum = 4;
			BeginRow(sheetnum,fileToSave,rownum,0,10);
				if (RepSpec.flags[6] == 0) then begin
					style = 87;
					qtyOfEmpStr = 3;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
				colnum = colnum + 1;
				style = 86;
				qtyOfEmpStr = ProjArray.length + 1;
				EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				if quartCount > 1 then begin
					colnum = colnum + 1;
					style = 86;
					qtyOfEmpStr = ProjArray.length + 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				end;
			EndRow(sheetnum,fileToSave,rownum);
			colnum = 2;
			BeginRow(sheetnum,fileToSave,rownum,0,blankval);
				style = 2;
				StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOTAL COST:",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
				if (RepSpec.flags[6] == 0) then begin
					colnum = colnum + 5;
				end else begin
					colnum = colnum + 2;
				end;
				for (j=0;j<ProjArray.length;j=j+1) begin
					if isMotherProjVect[ProjArray[j]] then begin
						style = 74;
					end else begin
						if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
							style = 69;
						end else begin
							style = 71;
						end;
					end;
					switch quartToPrint[0] begin
						case 1:
							NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect["TOTAL:" & ProjArray[j]]);
						case 2:
							NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect["TOTAL:" & ProjArray[j]]);
						case 3:
							NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect["TOTAL:" & ProjArray[j]]);
						case 4:
							NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect["TOTAL:" & ProjArray[j]]);
					end;
				end;
				style = 73;
				switch quartToPrint[0] begin
					case 1:
						NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect["TOTAL:TOTAL"]);
					case 2:
						NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect["TOTAL:TOTAL"]);
					case 3:
						NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect["TOTAL:TOTAL"]);
					case 4:
						NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect["TOTAL:TOTAL"]);
				end;
				colnum = colnum + 1;
				if quartCount > 1 then begin
					for (j=0;j<ProjArray.length;j=j+1) begin
						if isMotherProjVect[ProjArray[j]] then begin
							style = 74;
						end else begin
							if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
								style = 69;
							end else begin
								style = 71;
							end;
						end;
						switch quartToPrint[1] begin
							case 1:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect["TOTAL:" & ProjArray[j]]);
							case 2:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect["TOTAL:" & ProjArray[j]]);
							case 3:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect["TOTAL:" & ProjArray[j]]);
							case 4:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect["TOTAL:" & ProjArray[j]]);
						end;
					end;
					style = 73;
					switch quartToPrint[1] begin
						case 1:
							NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect["TOTAL:TOTAL"]);
						case 2:
							NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect["TOTAL:TOTAL"]);
						case 3:
							NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect["TOTAL:TOTAL"]);
						case 4:
							NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect["TOTAL:TOTAL"]);
					end;
				end;
			EndRow(sheetnum,fileToSave,rownum);
			if (RepSpec.flags[6] == 0) then begin
				BeginRow(sheetnum,fileToSave,rownum,0,10);
				EndRow(sheetnum,fileToSave,rownum);
				colnum = 2;
				BeginRow(sheetnum,fileToSave,rownum,0,blankval);
					style = 2;
					StringCell(sheetnum,fileToSave,colnum,rownum,style,"People Tot Number:",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					if (RepSpec.flags[6] == 0) then begin
						colnum = colnum + 5;
					end else begin
						colnum = colnum + 2;
					end;
					style = 41;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 42;
					qtyOfEmpStr = ProjArray.length - 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 43;
					NumericCell(sheetnum,fileToSave,colnum,rownum,style,suppCount1);
					if quartCount > 1 then begin
						colnum = colnum + 1;
						style = 41;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 42;
						qtyOfEmpStr = ProjArray.length - 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 43;
						NumericCell(sheetnum,fileToSave,colnum,rownum,style,suppCount2);
					end;
				EndRow(sheetnum,fileToSave,rownum);
				if (RepSpec.flags[6] == 0) then begin
					colnum = 8;
				end else begin
					colnum = 5;
				end;
				BeginRow(sheetnum,fileToSave,rownum,0,2.5);
					style = 44;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 45;
					qtyOfEmpStr = ProjArray.length - 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 46;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					if quartCount > 1 then begin
						colnum = colnum + 1;
						style = 44;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 45;
						qtyOfEmpStr = ProjArray.length - 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 46;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					end;
				EndRow(sheetnum,fileToSave,rownum);
			end;
			if quartCount > 2 then begin
				rownum = rownum + 1;
				if (RepSpec.flags[6] == 0) then begin
					colnum = 8;
				end else begin
					colnum = 5;
				end;
				BeginRow(sheetnum,fileToSave,rownum,0,6);
					style = 3;
					if quartCount > 3 then begin
						qtyOfEmpStr = (ProjArray.length + 1)*2 + 1;
					end else begin
						qtyOfEmpStr = ProjArray.length + 1;
					end;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
				EndRow(sheetnum,fileToSave,rownum);
				rownum = rownum + 1;
				colnum = 4;
				BeginRow(sheetnum,fileToSave,rownum,0,30);
					style = 9;
					if (RepSpec.flags[6] == 0) then begin
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 10;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 11;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					end;
					colnum = colnum + 1;
					tstr = RepSpec.f1 & " - Budget";
					style = 78;
					StringCell(sheetnum,fileToSave,colnum,rownum,style,tstr,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					style = 79;
					qtyOfEmpStr = ProjArray.length - 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 80;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					if quartCount > 3 then begin
						colnum = colnum + 1;
						style = 78;
						StringCell(sheetnum,fileToSave,colnum,rownum,style,tstr,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
						style = 79;
						qtyOfEmpStr = ProjArray.length - 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 80;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					end;
				EndRow(sheetnum,fileToSave,rownum);
				colnum = 4;
				BeginRow(sheetnum,fileToSave,rownum,0,blankval);
					if (RepSpec.flags[6] == 0) then begin
						style = 13;
						StringCell(sheetnum,fileToSave,colnum,rownum,style,"H.No.",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
						style = 19;
						StringCell(sheetnum,fileToSave,colnum,rownum,style,"Name",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
						style = 14;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					end;
					colnum = colnum + 1;
					for (i=0;i<ProjArray.length;i=i+1) begin
						if isMotherProjVect[ProjArray[i]] then begin
							if (i == 0) then begin
								style = 21;
							end else begin
								style = 22;
							end;
						end else begin
							if mod(StringToInt(right(ProjArray[i],1)),2) == 1 then begin
								style = 24;
							end else begin
								style = 23;
							end;
						end;
						StringCell(sheetnum,fileToSave,colnum,rownum,style,ProjArray[i],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					end;
					style = 48;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					if quartCount > 3 then begin
						colnum = colnum + 1;
						for (i=0;i<ProjArray.length;i=i+1) begin
							if isMotherProjVect[ProjArray[i]] then begin
								if (i == 0) then begin
									style = 21;
								end else begin
									style = 22;
								end;
							end else begin
								if mod(StringToInt(right(ProjArray[i],1)),2) == 1 then begin
									style = 24;
								end else begin
									style = 23;
								end;
							end;
							StringCell(sheetnum,fileToSave,colnum,rownum,style,ProjArray[i],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
						end;
						style = 48;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					end;
				EndRow(sheetnum,fileToSave,rownum);
				colnum = 4;
				BeginRow(sheetnum,fileToSave,rownum,0,4);
					style = 17;
					if (RepSpec.flags[6] == 0) then begin
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 12;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 16;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					end;
					colnum = colnum + 1;
					style = 49;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 50;
					qtyOfEmpStr = ProjArray.length - 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					style = 51;
					qtyOfEmpStr = 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					if quartCount > 3 then begin
						colnum = colnum + 1;
						style = 49;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 50;
						qtyOfEmpStr = ProjArray.length - 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 51;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					end;
				EndRow(sheetnum,fileToSave,rownum);
				colnum = 4;
				BeginRow(sheetnum,fileToSave,rownum,0,blankval);
					if (RepSpec.flags[6] == 0) then begin
						style = 17;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 12;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 16;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					end;
					colnum = colnum + 1;
					switch quartToPrint[2] begin
						case 1:
							tstr = "QI";
						case 2:
							tstr = "QII";
						case 3:
							tstr = "QIII";
						case 4:
							tstr = "QIV";
					end;
					style = 52;
					StringCell(sheetnum,fileToSave,colnum,rownum,style,tstr,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					style = 53;
					for (i=0;i<(ProjArray.length - 1);i=i+1) begin
						StringCell(sheetnum,fileToSave,colnum,rownum,style,tstr,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					end;
					style = 54;
					StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOT",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					if quartCount > 3 then begin
						colnum = colnum + 1;
						switch quartToPrint[3] begin
							case 1:
								tstr = "QI";
							case 2:
								tstr = "QII";
							case 3:
								tstr = "QIII";
							case 4:
								tstr = "QIV";
						end;
						style = 52;
						StringCell(sheetnum,fileToSave,colnum,rownum,style,tstr,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
						style = 53;
						for (i=0;i<(ProjArray.length - 1);i=i+1) begin
							StringCell(sheetnum,fileToSave,colnum,rownum,style,tstr,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
						end;
						style = 54;
						StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOT",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					end;
				EndRow(sheetnum,fileToSave,rownum);
				colnum = 4;
				BeginRow(sheetnum,fileToSave,rownum,0,10);
					if (RepSpec.flags[6] == 0) then begin
						style = 17;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 12;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 16;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					end;
				EndRow(sheetnum,fileToSave,rownum);
				suppCount1 = 0;
				suppCount2 = 0;
				for (i=0;i<ArtArrayWithGroups.length;i=i+1) begin
					ITr.Code = ArtArrayWithGroups[i+1];
					ReadLastMain(ITr,1,false);
					nextgroup = ITr.Code;
					ITr.Code = ArtArrayWithGroups[i];
					ReadLastMain(ITr,1,false);
					group = ITr.Code;
					if ArtArrayWithGroups[i]==group then begin
						colnum = 1;
						BeginRow(sheetnum,fileToSave,rownum,0,blankval);
							style = 2;
							StringCell(sheetnum,fileToSave,colnum,rownum,style,group,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
							StringCell(sheetnum,fileToSave,colnum,rownum,style,ITr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
							colnum = colnum + 1;
							if (RepSpec.flags[6] == 0) then begin
								style = 17;
								qtyOfEmpStr = 1;
								EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
								style = 12;
								qtyOfEmpStr = 1;
								EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
								style = 16;
								qtyOfEmpStr = 1;
								EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
							end;
							colnum = colnum + 1;
							for (j=0;j<ProjArray.length;j=j+1) begin
								if isMotherProjVect[ProjArray[j]] then begin
									style = 66;
								end else begin
									if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
										style = 69;
									end else begin
										style = 71;
									end;
								end;
								switch quartToPrint[2] begin
									case 1:
										NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[group & ":" & ProjArray[j]]);
									case 2:
										NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[group & ":" & ProjArray[j]]);
									case 3:
										NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[group & ":" & ProjArray[j]]);
									case 4:
										NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[group & ":" & ProjArray[j]]);
								end;
							end;
							style = 73;
							switch quartToPrint[2] begin
								case 1:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[group & ":TOTAL"]);
								case 2:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[group & ":TOTAL"]);
								case 3:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[group & ":TOTAL"]);
								case 4:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[group & ":TOTAL"]);
							end;
							if quartCount > 3 then begin
								colnum = colnum + 1;
								for (j=0;j<ProjArray.length;j=j+1) begin
										if isMotherProjVect[ProjArray[j]] then begin
										style = 66;
									end else begin
										if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
											style = 69;
										end else begin
											style = 71;
										end;
									end;
									switch quartToPrint[3] begin
										case 1:
											NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[group & ":" & ProjArray[j]]);
										case 2:
											NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[group & ":" & ProjArray[j]]);
										case 3:
											NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[group & ":" & ProjArray[j]]);
										case 4:
											NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[group & ":" & ProjArray[j]]);
									end;
								end;
								style = 73;
								switch quartToPrint[3] begin
									case 1:
										NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[group & ":TOTAL"]);
									case 2:
										NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[group & ":TOTAL"]);
									case 3:
										NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[group & ":TOTAL"]);
									case 4:
										NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[group & ":TOTAL"]);
								end;
							end;
						EndRow(sheetnum,fileToSave,rownum);
					end else begin
						if ArtArrayWithGroups[i+1]==nextgroup then begin
							colnum = 4;
							BeginRow(sheetnum,fileToSave,rownum,0,10);
								if (RepSpec.flags[6] == 0) then begin
									style = 17;
									qtyOfEmpStr = 1;
									EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
									style = 12;
									qtyOfEmpStr = 1;
									EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
									style = 16;
									qtyOfEmpStr = 1;
									EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
								end;
								colnum = colnum + 1;
								style = 86;
								qtyOfEmpStr = ProjArray.length + 1;
								EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
								if quartCount > 3 then begin
									colnum = colnum + 1;
									style = 86;
									qtyOfEmpStr = ProjArray.length + 1;
									EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
								end;
							EndRow(sheetnum,fileToSave,rownum);
						end;
						firstprintf = true;
						firstprint2f = true;
						for (k=0;k<ArtSuppl.length;k=k+1) begin
							sum = 0;
							switch quartToPrint[2] begin
								case 2:
									sum = sum + Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"] + Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
									sum1 = sum1 + Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
									sum2 = sum2 + Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
								case 3:
									sum = sum + Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"] + Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
									sum1 = sum1 + Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
									sum2 = sum2 + Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
								case 4:
									sum = sum + Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
									sum1 = sum1 + Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"];
									sum2 = 0;
							end;
							if (sum != 0) then begin
								colnum = 1;
								BeginRow(sheetnum,fileToSave,rownum,0,blankval);
									style = 4;
									if (Right(ArtArrayWithGroups[i],1) == "0") or (Right(ArtArrayWithGroups[i],2) == "99") then begin
										StringCell(sheetnum,fileToSave,colnum,rownum,style,ArtArrayWithGroups[i],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
										colnum = colnum + 1;
									end else begin
										colnum = colnum + 1;
										StringCell(sheetnum,fileToSave,colnum,rownum,style,ArtArrayWithGroups[i],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
									end;
									Objr.Code = ArtArrayWithGroups[i];
									readfirstmain(Objr,1,true);
									StringCell(sheetnum,fileToSave,colnum,rownum,style,Objr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
									if (RepSpec.flags[6] == 0) then begin
										if nonblank(ArtSuppl[k]) then begin
											style = 17;
											StringCell(sheetnum,fileToSave,colnum,rownum,style,ArtSuppl[k],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
											Objr.Code = ArtSuppl[k];
											if sum1 != 0 then begin
												suppCount1 = suppCount1 + 1;
											end;
											if sum2 != 0 then begin
												suppCount2 = suppCount2 + 1;
											end;
											readfirstmain(Objr,1,true);
											style = 12;
											StringCell(sheetnum,fileToSave,colnum,rownum,style,Objr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
										end else begin
											style = 17;
											qtyOfEmpStr = 1;
											EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
											style = 12;
											qtyOfEmpStr = 1;
											EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
										end;
										style = 16;
										qtyOfEmpStr = 1;
										EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
									end;
									colnum = colnum + 1;
									if firstprintf then begin
										firstprintf = false;
										for (j=0;j<ProjArray.length;j=j+1) begin
											if isMotherProjVect[ProjArray[j]] then begin
												if (j == 0) then begin
													style = 65;
												end else begin
													style = 67;
												end;
											end else begin
												if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
													style = 68;
												end else begin
													style = 70;
												end;
											end;
											switch quartToPrint[2] begin
												case 1:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
												case 2:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
												case 3:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
												case 4:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
											end;
										end;
										style = 72;
										switch quartToPrint[2] begin
											case 1:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
											case 2:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
											case 3:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
											case 4:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
										end;
									end else begin
										for (j=0;j<ProjArray.length;j=j+1) begin
											if isMotherProjVect[ProjArray[j]] then begin
												if (j == 0) then begin
													style = 58;
												end else begin
													style = 55;
												end;
											end else begin
												if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
													style = 56;
												end else begin
													style = 57;
												end;
											end;
											switch quartToPrint[2] begin
												case 1:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
												case 2:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
												case 3:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
												case 4:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
											end;
										end;
										style = 59;
										switch quartToPrint[2] begin
											case 1:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
											case 2:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
											case 3:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
											case 4:
												NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
										end;
									end;
									if quartCount > 3 then begin
										colnum = colnum + 1;
										if firstprint2f then begin
											firstprint2f = false;
											for (j=0;j<ProjArray.length;j=j+1) begin
												if isMotherProjVect[ProjArray[j]] then begin
													if (j == 0) then begin
														style = 65;
													end else begin
														style = 67;
													end;
												end else begin
													if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
														style = 68;
													end else begin
														style = 70;
													end;
												end;
												switch quartToPrint[3] begin
													case 1:
														NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
													case 2:
														NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
													case 3:
														NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
													case 4:
														NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
												end;
											end;
											style = 72;
											switch quartToPrint[3] begin
												case 1:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
												case 2:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
												case 3:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
												case 4:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
											end;
										end else begin
											for (j=0;j<ProjArray.length;j=j+1) begin
												if isMotherProjVect[ProjArray[j]] then begin
													if (j == 0) then begin
														style = 58;
													end else begin
														style = 55;
													end;
												end else begin
													if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
														style = 56;
													end else begin
														style = 57;
													end;
												end;
												switch quartToPrint[3] begin
													case 1:
														NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
													case 2:
														NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
													case 3:
														NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
													case 4:
														NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":" & ProjArray[j]]);
												end;
											end;
											style = 59;
											switch quartToPrint[3] begin
												case 1:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
												case 2:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
												case 3:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
												case 4:
													NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect[ArtArrayWithGroups[i] & ":" & ArtSuppl[k] & ":TOTAL"]);
											end;
										end;
									end;
								EndRow(sheetnum,fileToSave,rownum);
							end;
						end;
					end;
				end;
				colnum = 4;
				BeginRow(sheetnum,fileToSave,rownum,0,10);
					if (RepSpec.flags[6] == 0) then begin
						style = 87;
						qtyOfEmpStr = 3;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					end;
					colnum = colnum + 1;
					style = 86;
					qtyOfEmpStr = ProjArray.length + 1;
					EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					if quartCount > 3 then begin
						colnum = colnum + 1;
						style = 86;
						qtyOfEmpStr = ProjArray.length + 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
					end;
				EndRow(sheetnum,fileToSave,rownum);
				colnum = 2;
				BeginRow(sheetnum,fileToSave,rownum,0,blankval);
					style = 2;
					StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOTAL COST:",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
					if (RepSpec.flags[6] == 0) then begin
						colnum = colnum + 5;
					end else begin
						colnum = colnum + 2;
					end;
					for (j=0;j<ProjArray.length;j=j+1) begin
						if isMotherProjVect[ProjArray[j]] then begin
							style = 74;
						end else begin
							if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
								style = 69;
							end else begin
								style = 71;
							end;
						end;
						switch quartToPrint[2] begin
							case 1:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect["TOTAL:" & ProjArray[j]]);
							case 2:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect["TOTAL:" & ProjArray[j]]);
							case 3:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect["TOTAL:" & ProjArray[j]]);
							case 4:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect["TOTAL:" & ProjArray[j]]);
						end;
					end;
					style = 73;
					switch quartToPrint[2] begin
						case 1:
							NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect["TOTAL:TOTAL"]);
						case 2:
							NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect["TOTAL:TOTAL"]);
						case 3:
							NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect["TOTAL:TOTAL"]);
						case 4:
							NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect["TOTAL:TOTAL"]);
					end;
					colnum = colnum + 1;
					if quartCount > 3 then begin
						for (j=0;j<ProjArray.length;j=j+1) begin
							if isMotherProjVect[ProjArray[j]] then begin
								style = 74;
							end else begin
								if mod(StringToInt(right(ProjArray[j],1)),2) == 1 then begin
									style = 69;
								end else begin
									style = 71;
								end;
							end;
							switch quartToPrint[3] begin
								case 1:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect["TOTAL:" & ProjArray[j]]);
								case 2:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect["TOTAL:" & ProjArray[j]]);
								case 3:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect["TOTAL:" & ProjArray[j]]);
								case 4:
									NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect["TOTAL:" & ProjArray[j]]);
							end;
						end;
						style = 73;
						switch quartToPrint[3] begin
							case 1:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart1Vect["TOTAL:TOTAL"]);
							case 2:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart2Vect["TOTAL:TOTAL"]);
							case 3:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart3Vect["TOTAL:TOTAL"]);
							case 4:
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,Quart4Vect["TOTAL:TOTAL"]);
						end;
					end;
				EndRow(sheetnum,fileToSave,rownum);
				if (RepSpec.flags[6] == 0) then begin
					BeginRow(sheetnum,fileToSave,rownum,0,10);
					EndRow(sheetnum,fileToSave,rownum);
					colnum = 2;
					BeginRow(sheetnum,fileToSave,rownum,0,blankval);
						style = 2;
						StringCell(sheetnum,fileToSave,colnum,rownum,style,"People Tot Number:",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
						if (RepSpec.flags[6] == 0) then begin
							colnum = colnum + 5;
						end else begin
							colnum = colnum + 2;
						end;
						style = 41;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 42;
						qtyOfEmpStr = ProjArray.length - 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 43;
						NumericCell(sheetnum,fileToSave,colnum,rownum,style,suppCount1);
						if quartCount > 3 then begin
							colnum = colnum + 1;
							style = 41;
							qtyOfEmpStr = 1;
							EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
							style = 42;
							qtyOfEmpStr = ProjArray.length - 1;
							EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
							style = 43;
							NumericCell(sheetnum,fileToSave,colnum,rownum,style,suppCount2);
						end;
					EndRow(sheetnum,fileToSave,rownum);
					if (RepSpec.flags[6] == 0) then begin
						colnum = 8;
					end else begin
						colnum = 5;
					end;
					BeginRow(sheetnum,fileToSave,rownum,0,2.5);
						style = 44;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 45;
						qtyOfEmpStr = ProjArray.length - 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						style = 46;
						qtyOfEmpStr = 1;
						EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						if quartCount > 3 then begin
							colnum = colnum + 1;
							style = 44;
							qtyOfEmpStr = 1;
							EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
							style = 45;
							qtyOfEmpStr = ProjArray.length - 1;
							EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
							style = 46;
							qtyOfEmpStr = 1;
							EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						end;
					EndRow(sheetnum,fileToSave,rownum);
				end;
			end;
			
		EndSheetData(sheetnum,fileToSave);
		MergeCells(sheetnum,fileToSave,mergeCell,qtyMergeCell);
		EndSheet(sheetnum,fileToSave,0);
		FillSharedStrings(fileToSave,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
		ConvertToXLSX(fileToSave);
		
		MilliSleep(2000);
		addfiletoarea(fileToSave,areatofile,false);
		delete_file(fileToSave);
	end;
	RETURN;
END;