external procedure XmlXlsxWorkBegin(string,string);
external procedure CreateSheetsXLSX(integer,array string,string,integer,boolean);
external procedure EndSheet(integer,string,integer);
external procedure SetSheetsCols(integer,array val,array integer,string);
external procedure BeginSheetData(integer,string);
external procedure EndSheetData(integer,string);
external procedure BeginRow(integer,string,integer,integer,val);
external procedure EndRow(integer,string,var integer);
external procedure StringCell(integer,string,var integer,integer,integer,string,var array string,var integer,var integer);
external procedure NumericCell(integer,string,var integer,integer,integer,val);
external procedure EmptyCell(integer,string,var integer,integer,integer,integer);
external procedure MergeCells(integer,string,array string,integer);
external procedure FillSharedStrings(string,array string,integer,integer,array string);
external procedure ConvertToXLSX(string);
external function string 10 GetStringCellNum(integer,integer);
external function string 255 StrReplace(string,string,string);
external function integer GetQuartal(date);
external procedure GetObjs(string,string,var string);
external function string 4 QuartalIntToStr(integer);
external procedure ExtractObjWithSeparator(string,string,Boolean,var Integer,var string);
external function string 50 TimeToString(time,string,boolean);
external function string 255 MonthName(Date);
external function val AbsoluteVal(val);
external procedure GetFullCurncyRate(var string,Date,var val,var val,var val,var val,var val);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external function Boolean GetPMRow(string,var row PMBlock);
external function roundmode SetRoundModeD(Integer);

procedure ArraysCollect(record RcVc RepSpec, var array string ArtArrayWithoutGroups, var array string ProjArray, var vector string ProjNamesVect, var array string ArtArrayWithGroups, var boolean PrjFoundf, var vector boolean isMotherProjVect)
BEGIN
	record ITVc ITr;
	record INVc INr;
	record PRVc PRr,PR2r;
	integer i,j,k,kw,kwo,oldcomp;
	boolean TrHs,testf,foundf;
	string 100 tstr;
	
	kw = 0;
	resetloop(ITr);
	while(loopmain(ITr,1,true)) begin
    testf = true;
    if ((RepSpec.f2=="2016" and right(ITr.Code,3)!="_16") or
        (RepSpec.f2=="2017" and right(ITr.Code,3)!="_17") or
        (RepSpec.f2=="2018" and right(ITr.Code,3)!="_18")) then begin testf = false; end;
    if (testf) then begin
      ArtArrayWithGroups[kw] = ITr.Code;
      kw = kw + 1;
      resetloop(INr);
      INr.Group = ITr.Code;
      TrHs = true;
      while(loopkey("Group",INr,1,TrHs)) begin
        testf = true;
        if (INr.Group!=ITr.Code) then begin testf = false; TrHs = false; end;
        if (blank(INr.Objects)) then begin testf = false; end;
        if ((RepSpec.f2=="2016" and right(INr.Objects,3)!="_16") or
            (RepSpec.f2=="2017" and right(INr.Objects,3)!="_17") or
            (RepSpec.f2=="2018" and right(INr.Objects,3)!="_18")) then begin testf = false; end;
        if (testf) then begin
          tstr = INr.Objects;
          foundf = false;
          for (i=0;i<ArtArrayWithoutGroups.length;i=i+1) begin
            if (ArtArrayWithoutGroups[i]==tstr) then begin
              foundf = true;
            end;
          end; 
          if (!foundf) then begin
            ArtArrayWithoutGroups[kwo] = INr.Objects;
            kwo = kwo + 1;
            ArtArrayWithGroups[kw] = INr.Objects;
            kw = kw + 1;
          end;
        end;
      end;
    end;
	end;
  oldcomp = currentcompany;
  switch (RepSpec.f2) begin
    case "2017":
      SetCompany(2,false);
    case "2018":
      SetCompany(1,false);
  end;
	k = 0;
  resetloop(PRr);
	while(loopmain(PRr,1,true)) begin
    if (RepSpec.flags[6]==0) then begin
      switch (PRr.Code) begin
        case "2016.998":
          goto L1;
        case "2017.998":
          goto L1;
        case "2018.998":
          goto L1;
      end;
    end;
    if (RepSpec.flags[8]==0) then begin
      switch (PRr.Code) begin
        case "2016.013":
          goto L1;
        case "2017.013":
          goto L1;
        case "2018.013":
          goto L1;
      end;
    end;
    if (RepSpec.flags[8]==0) then begin
      switch (PRr.Code) begin
        case "2016.014":
          goto L1;
        case "2017.014":
          goto L1;
        case "2018.014":
          goto L1;
      end;
    end;
		if ((GetYear(PRr.StartDate) & "" == RepSpec.f2) or (GetYear(PRr.EndDate) & "" == RepSpec.f2)) and ((nonblank(RepSpec.f1) and (RepSpec.f1 == PRr.Code)) or blank(RepSpec.f1)) then begin
			ProjArray[k] = PRr.Code;
			ProjNamesVect[PRr.Code] = PRr.Name;
			k = k + 1;
			if blank(PRr.MotherCode) or (PRr.MotherCode == "") then begin
				isMotherProjVect[PRr.Code] = true;
        if nonblank(RepSpec.f1) then begin
          resetloop(PR2r);
          while(loopmain(PR2r,1,true)) begin
            if (PR2r.MotherCode==RepSpec.f1) then begin
              ProjArray[k] = PR2r.Code;
              ProjNamesVect[PR2r.Code] = PR2r.Name;
              isMotherProjVect[PR2r.Code] = false;
              k = k + 1;
            end;
          end;
        end;
			end else begin
				isMotherProjVect[PRr.Code] = false;
			end;
		end;
L1:end;
  resetcompany(oldcomp);
	if (k==0) then begin
		PrjFoundf = false;
	end;
	for (j=0;j<ProjArray.length-1;j=j+1) begin
		for (i=0;i<ProjArray.length-1;i=i+1) begin
			if (ProjArray[i] > ProjArray[i+1]) then begin
				tstr = ProjArray[i+1];
				ProjArray[i+1] = ProjArray[i];
				ProjArray[i] = tstr;
			end;
		end;
	end;
	RETURN;
END;

procedure FillVect(string kf, string art, string ext, string prj, string group, string prjm, string comp, val v,
                    record RcVc RepSpec, var vector val vect)
begin
  string 5 tstr;
  
  vect[kf & art & ":" & ext & ";" & prj] = vect[kf & art & ":" & ext & ";" & prj] + v;
  vect[kf & art & ":" & ext & ";T"]      = vect[kf & art & ":" & ext & ";T"] + v;
  vect[kf & art &             ";" & prj] = vect[kf & art &             ";" & prj] + v;
  vect[kf & group &           ";" & prj] = vect[kf & group &           ";" & prj] + v;
  vect[kf                  & "T;" & prj] = vect[kf                  & "T;" & prj] + v;
  vect[kf & art &             ";T"]      = vect[kf & art &             ";T"] + v;
  vect[kf & group &           ";T"]      = vect[kf & group &           ";T"] + v;
  vect[kf                  & "T;T"]      = vect[kf                  & "T;T"] + v;
  if nonblank (prjm) and (prjm!="") then begin
    vect[kf & art & ":" & ext & ";" & prjm] = vect[kf & art & ":" & ext & ";" & prjm] + v;
    vect[kf & art &             ";" & prjm] = vect[kf & art &             ";" & prjm] + v;
    vect[kf & group &           ";" & prjm] = vect[kf & group &           ";" & prjm] + v;
    vect[kf                  & "T;" & prjm] = vect[kf                  & "T;" & prjm] + v;
  end;
  if (RepSpec.f2=="2016") then begin
    switch (prj) begin
      case "2016.004":
        tstr = "sT2";
      case "2016.007":
        tstr = "sT2";
      case "2016.998":
        tstr = "sT1";
      otherwise
        tstr = "sT3";
    end;
    vect[kf & art & ":" & ext & ";" & tstr] = vect[kf & art & ":" & ext & ";" & tstr] + v;
    vect[kf & art &             ";" & tstr] = vect[kf & art &             ";" & tstr] + v;
    vect[kf & group &           ";" & tstr] = vect[kf & group &           ";" & tstr] + v;
    vect[kf                  & "T;" & tstr] = vect[kf                  & "T;" & tstr] + v;
  end;
  if (RepSpec.f2=="2017") then begin
    switch (prj) begin
      case "2017.998":
        tstr = "sT1";
      otherwise
        tstr = "sT3";
    end;
    vect[kf & art & ":" & ext & ";" & tstr] = vect[kf & art & ":" & ext & ";" & tstr] + v;
    vect[kf & art &             ";" & tstr] = vect[kf & art &             ";" & tstr] + v;
    vect[kf & group &           ";" & tstr] = vect[kf & group &           ";" & tstr] + v;
    vect[kf                  & "T;" & tstr] = vect[kf                  & "T;" & tstr] + v;
  end;
  if (RepSpec.f2=="2018") then begin
    switch (prj) begin
      case "2018.998":
        tstr = "sT1";
      otherwise
        tstr = "sT3";
    end;
    vect[kf & art & ":" & ext & ";" & tstr] = vect[kf & art & ":" & ext & ";" & tstr] + v;
    vect[kf & art &             ";" & tstr] = vect[kf & art &             ";" & tstr] + v;
    vect[kf & group &           ";" & tstr] = vect[kf & group &           ";" & tstr] + v;
    vect[kf                  & "T;" & tstr] = vect[kf                  & "T;" & tstr] + v;
  end;
  
  if nonblank(comp) and (RepSpec.flags[29]==1) then begin
    vect[kf & art & ":" & ext & ";" & prj & ";" & comp] = vect[kf & art & ":" & ext & ";" & prj & ";" & comp] + v;
    vect[kf & art & ":" & ext & ";T" & ";" & comp]      = vect[kf & art & ":" & ext & ";T" & ";" & comp] + v;
    vect[kf & art &             ";" & prj & ";" & comp] = vect[kf & art &             ";" & prj & ";" & comp] + v;
    vect[kf & group &           ";" & prj & ";" & comp] = vect[kf & group &           ";" & prj & ";" & comp] + v;
    vect[kf                  & "T;" & prj & ";" & comp] = vect[kf                  & "T;" & prj & ";" & comp] + v;
    vect[kf & art &             ";T" & ";" & comp]      = vect[kf & art &             ";T" & ";" & comp] + v;
    vect[kf & group &           ";T" & ";" & comp]      = vect[kf & group &           ";T" & ";" & comp] + v;
    vect[kf                  & "T;T" & ";" & comp]      = vect[kf                  & "T;T" & ";" & comp] + v;
    if nonblank (prjm) and (prjm!="") then begin
      vect[kf & art & ":" & ext & ";" & prjm & ";" & comp] = vect[kf & art & ":" & ext & ";" & prjm & ";" & comp] + v;
      vect[kf & art &             ";" & prjm & ";" & comp] = vect[kf & art &             ";" & prjm & ";" & comp] + v;
      vect[kf & group &           ";" & prjm & ";" & comp] = vect[kf & group &           ";" & prjm & ";" & comp] + v;
      vect[kf                  & "T;" & prjm & ";" & comp] = vect[kf                  & "T;" & prjm & ";" & comp] + v;
    end;
    if (RepSpec.f2=="2016") then begin
      switch (prj) begin
        case "2016.004":
          tstr = "sT2";
        case "2016.007":
          tstr = "sT2";
        case "2016.998":
          tstr = "sT1";
        otherwise
          tstr = "sT3";
      end;
      vect[kf & art & ":" & ext & ";" & tstr & ";" & comp] = vect[kf & art & ":" & ext & ";" & tstr & ";" & comp] + v;
      vect[kf & art &             ";" & tstr & ";" & comp] = vect[kf & art &             ";" & tstr & ";" & comp] + v;
      vect[kf & group &           ";" & tstr & ";" & comp] = vect[kf & group &           ";" & tstr & ";" & comp] + v;
      vect[kf                  & "T;" & tstr & ";" & comp] = vect[kf                  & "T;" & tstr & ";" & comp] + v;
    end;
    if (RepSpec.f2=="2017") then begin
      switch (prj) begin
        case "2017.998":
          tstr = "sT1";
        otherwise
          tstr = "sT3";
      end;
      vect[kf & art & ":" & ext & ";" & tstr & ";" & comp] = vect[kf & art & ":" & ext & ";" & tstr & ";" & comp] + v;
      vect[kf & art &             ";" & tstr & ";" & comp] = vect[kf & art &             ";" & tstr & ";" & comp] + v;
      vect[kf & group &           ";" & tstr & ";" & comp] = vect[kf & group &           ";" & tstr & ";" & comp] + v;
      vect[kf                  & "T;" & tstr & ";" & comp] = vect[kf                  & "T;" & tstr & ";" & comp] + v;
    end;
    if (RepSpec.f2=="2018") then begin
      switch (prj) begin
        case "2018.998":
          tstr = "sT1";
        otherwise
          tstr = "sT3";
      end;
      vect[kf & art & ":" & ext & ";" & tstr & ";" & comp] = vect[kf & art & ":" & ext & ";" & tstr & ";" & comp] + v;
      vect[kf & art &             ";" & tstr & ";" & comp] = vect[kf & art &             ";" & tstr & ";" & comp] + v;
      vect[kf & group &           ";" & tstr & ";" & comp] = vect[kf & group &           ";" & tstr & ";" & comp] + v;
      vect[kf                  & "T;" & tstr & ";" & comp] = vect[kf                  & "T;" & tstr & ";" & comp] + v;
    end;
  end;
  
  return;
end;

procedure DataCollect(array string ArtArrayWithoutGroups, array string ExtArr,var array string ProjArray,var array string ProjArray2, record RcVc RepSpec,
					var vector val QuartVect,var array string CompArray,var vector string CompNamesVect,array string SuppArr)
BEGIN
	record CompaniesBlock CBb;
  record PRVc PRr,PR2r;
	record TBBUVc TBBUr;
	record INVc INr;
	record TRVc TRr;
	record MainVc Mainr;
	record ObjVc Objr;
	row CompaniesBlock CBrw;
  row TBBUVc TBBUrw;
	row TRVc TRrw;
	integer i,j,k,l,mtrw,PAi,EAi,oldcomp,CBbmtrw,compi,CAi,SAi;
	boolean TrHs,testf,kTestf;
	string 20 group,extras,extras1;
  array string 20 prjobjs;
  vector boolean ExtInArr,SuppInArr;
  array string 10 tempProjArray;
  string 5 tstr;
  val tmpval;
  boolean TrHs2;
  record VIVc VIr;
  record OPVc OPr;
  record PDVc PDr;
  record BaseCurBlock bcur;
  record OPrsVc OPrsr;
  row VIVc VIrw;
  row OPVc OPrw,VIOPrw;
  row PMBlock PMrw;
  val sum,fr,to1,to2,br1,br2,opsum,trsum,paidsum;
  string 10 vicur;
  vector boolean ProjInArr,ArtInArr;
  
	for (PAi=0;PAi<ProjArray.length;PAi=PAi+1) begin
    ProjInArr[ProjArray[PAi]] = true;
  end;
  for (j=0;j<ArtArrayWithoutGroups.length;j=j+1) begin
    ArtInArr[ArtArrayWithoutGroups[j]] = true;
  end;
  oldcomp = currentcompany;
  switch (RepSpec.f2) begin
    case "2017":
      SetCompany(2,false);
    case "2018":
      SetCompany(1,false);
  end;
  EAi = 0;
	for (PAi=0;PAi<ProjArray.length;PAi=PAi+1) begin 
		PRr.Code = ProjArray[PAi];
		if (ReadFirstMain(PRr,1,true)) then begin
      prjobjs[PAi] = PRr.Objects;
			if ((GetYear(PRr.StartDate) & "" == RepSpec.f2) or (GetYear(PRr.EndDate) & "" == RepSpec.f2)) then begin
				TBBUr.PRCode = PRr.Code;
				if (readfirstmain(TBBUr,1,true)) then begin
					mtrw = matrowcnt(TBBUr);
					k = 0;
					for (i=0;i<mtrw;i=i+1) begin
						matrowget(TBBUr,i,TBBUrw);
						if(TBBUrw.stp==18) then begin
							k = TBBUrw.ItemType;
						end;
            if ((k!= 1) and (k!= 2) and (k!= 3) and (k!= 4)) then begin
              k = 1;
            end;
						kTestf = false;
						if ((RepSpec.flags[1] == 1) and (k == 1)) then begin
							kTestf = true;
						end;
						if ((RepSpec.flags[2] == 1) and (k == 2)) then begin
							kTestf = true;
						end;
						if ((RepSpec.flags[3] == 1) and (k == 3)) then begin
							kTestf = true;
						end;
						if ((RepSpec.flags[4] == 1) and (k == 4)) then begin
							kTestf = true;
						end;
						if ((RepSpec.flags[1] == 1) and ((k!= 1) and (k!= 2) and (k!= 3) and (k!= 4))) then begin
							kTestf = true;
						end;
						if (kTestf and (TBBUrw.stp==1 and TBBUrw.Sum!=0 and nonblank(TBBUrw.ArtCode))) then begin
							if nonblank(TBBUrw.Extras) and !ExtInArr[TBBUrw.Extras] then begin
								ExtInArr[TBBUrw.Extras] = true;
								ExtArr[EAi] = TBBUrw.Extras;
								EAi = EAi + 1;
							end;
							if(blank(TBBUrw.VECode) and blank(TBBUrw.Extras))then begin
								TBBUrw.VECode = "_";
							end;
							if nonblank(TBBUrw.VECode) and !SuppInArr[TBBUrw.VECode] then begin
								SuppInArr[TBBUrw.VECode] = true;
								SuppArr[SAi] = TBBUrw.VECode;
								SAi = SAi + 1;
							end;
              INr.Objects = TBBUrw.ArtCode;
              ReadfirstKey("Objects",INr,1,true);
              group = INr.Group;
              if nonblank(RepSpec.f4) then begin
                tmpval = TBBUrw.MonthSum;
              end else begin
                tmpval = TBBUrw.Sum;
              end;
              FillVect(k & ";",TBBUrw.ArtCode,TBBUrw.Extras,ProjArray[PAi],group,PRr.MotherCode,"",tmpval,RepSpec,QuartVect);
              FillVect(k & "S;",TBBUrw.ArtCode,TBBUrw.Extras & ":::" & TBBUrw.VECode,ProjArray[PAi],group,PRr.MotherCode,"",tmpval,RepSpec,QuartVect);// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 24 September 2018 17:04:13
						end;
					end; 
				end;
			end;
		end;
	end;
  CAi = 0;
  blockload(CBb);
  CBbmtrw = matrowcnt(CBb);
  for (compi=0;compi<CBbmtrw;compi=compi+1) begin
    if (RepSpec.flags[29]==1) or (oldcomp==compi+1) then begin
      SetCompany(compi+1,false);
      matrowget(CBb,compi,CBrw);
      CompArray[CAi] = CBrw.ShortName;
      CompNamesVect[CompArray[CAi]] = CBrw.CompName;
      CAi = CAi + 1;
      
      if (RepSpec.flags[7]==0) then begin
        resetloop(TRr);
        TRr.TransDate = RepSpec.sStartDate;
        TrHs = true;
        while (loopkey("TransDate",TRr,1,TrHs)) begin
          if (TRr.TransDate > RepSpec.sEndDate) then begin
            TrHs = false;
          end;
          if (TrHs) then begin
            k = 0;
            k = GetQuartal(TRr.TransDate);
            if ((k!= 1) and (k!= 2) and (k!= 3) and (k!= 4)) then begin
              k = 1;
            end;
            mtrw = matrowcnt(TRr);
            for (i=0;i<mtrw;i=i+1) begin
              matrowget(TRr,i,TRrw);
              if (TRrw.ovst==0 and (mid(TRrw.AccNumber,0,1)=="5")) then begin
                for (PAi=0;PAi<ProjArray.length;PAi=PAi+1) begin
                  PRr.Code = ProjArray[PAi];
                  ReadFirstMain(PRr,1,true);
                  if(setinset(prjobjs[PAi],TRrw.Objects)) then begin
                    for (j=0;j<ArtArrayWithoutGroups.length;j=j+1) begin
                      if (setinset(ArtArrayWithoutGroups[j],TRrw.Objects)) then begin
                        INr.Objects = ArtArrayWithoutGroups[j];
                        ReadfirstKey("Objects",INr,1,true);
                        group = INr.Group;
                        extras = "";
                        GetObjs("EXTRA",TRrw.Objects,extras);
                        if nonblank(extras) and !ExtInArr[extras] then begin
                          ExtInArr[extras] = true;
                          ExtArr[EAi] = extras;
                          EAi = EAi + 1;
                        end;
                        FillVect(k & "F;",ArtArrayWithoutGroups[j],extras,ProjArray[PAi],group,PRr.MotherCode,CBrw.ShortName,(TRrw.DebVal- TRrw.CredVal),RepSpec,QuartVect);
                        extras1 = "";
                        GetObjs("SUPPL",TRrw.Objects,extras1);
                        
                        if nonblank(extras1) and !SuppInArr[extras1] then begin
													SuppInArr[extras1] = true;
													SuppArr[SAi] = extras1;
													SAi = SAi + 1;
												end;
                        FillVect(k & "FS;",ArtArrayWithoutGroups[j],extras & ":::" & extras1,ProjArray[PAi],group,PRr.MotherCode,CBrw.ShortName,(TRrw.DebVal- TRrw.CredVal),RepSpec,QuartVect);                        
                      end;
                    end;
                  end;
                end;
              end;
            end;
          end;
        end;
      end else begin
        blockload(bcur);
        resetloop(VIr);
        VIr.InvDate = RepSpec.sStartDate;
        TrHs = true;
        while (loopkey("InvDate",VIr,1,TrHs)) begin
          testf = true;
          if (VIr.InvDate>RepSpec.sEndDate) then begin TrHs = false; testf = false; end;
          if (VIr.OKFlag==0) then begin testf = false; end;
          if (VIr.Invalid==1) then begin testf = false; end;
          if (testf and nonblank(RepSpec.f1)) then begin
            mtrw = matrowcnt(VIr);
            testf = false;
            for (i=0;i<mtrw;i=i+1) begin
              matrowget(VIr,i,VIrw);
              PRr.Objects = VIrw.Prj;
              ReadFirstKey("Objects",PRr,1,true);
              if (PRr.Code==RepSpec.f1) then begin
                testf = true;
                i = mtrw;
              end;
            end;
          end;
          if (testf) then begin
            sum = 0;
            paidsum = 0;
            PDr.Code = VIr.PayDeal;
            if (ReadFirstMain(PDr,1,true)) then begin
              if (PDr.PDType==kInvoiceTypeCash) then begin
                if (VIr.CurncyCode==bcur.BaseCur1) then begin
                  sum = VIr.PayVal;
                  paidsum = VIr.PayVal;
                end else begin
                  TRr.Number = VIr.SerNr;
                  TRr.IntYc = VIYc;
                  if (ReadFirstMain(TRr,2,true)) then begin
                    mtrw = matrowcnt(TRr);
                    for (i=0;i<mtrw;i=i+1) begin
                      matrowget(TRr,i,TRrw);
                      if (TRrw.ovst==0 and (TRrw.AccNumber==PDr.pdCashAcc)) then begin
                        sum = AbsoluteVal(TRrw.CredVal - TRrw.DebVal);
                        paidsum = VIr.PayVal;
                        i = mtrw;
                      end;
                    end;
                  end;
                end;
              end;
            end;
            if (sum==0) then begin
              resetloop(OPrsr);
              OPrsr.VINr = VIr.SerNr;
              TrHs2 = true;
              while (LoopKey("VIKey",OPrsr,1,TrHs2)) begin
                if (OPrsr.VINr<>VIr.SerNr) then begin TrHs2 = false; end;
                if (TrHs2) then begin
                  if (OPrsr.TransType==kOPrsTransTypePayment) then begin
                    OPr.SerNr = OPrsr.TransNr;
                    if (ReadFirstMain(OPr,1,true)) then begin
                      if ((OPr.DoneFlag!=0) and (OPr.TransDate==OPrsr.TransDate)) then begin
                        mtrw = MatRowCnt(OPr);
                        GetPMRow(OPr.PayMode,PMrw);
                        for (i=0;i<mtrw;i=i+1) begin
                          MatRowGet(OPr,i,VIOPrw);
                          if ((VIOPrw.ovst==0) and (VIOPrw.VISerNr==VIr.SerNr) and (VIOPrw.stp==kPaymentRowTypeNormal)) then begin
                            i = mtrw;
                          end;
                        end;
                        opsum = 0;
                        for (i=0;i<mtrw;i=i+1) begin
                          MatRowGet(OPr,i,OPrw);
                          if ((OPrw.ovst==0) and (OPrw.BankCurncy==VIOPrw.BankCurncy) and (OPrw.stp==kPaymentRowTypeNormal)) then begin
                            opsum = opsum + OPrw.BankVal;
                          end;
                        end;
                        TRr.Number = OPr.SerNr;
                        TRr.IntYc = OPYc;
                        if (ReadFirstMain(TRr,2,true)) then begin
                          mtrw = matrowcnt(TRr);
                          trsum = 0;
                          for (j=0;j<mtrw;j=j+1) begin
                            matrowget(TRr,j,TRrw);
                            if (TRrw.ovst==0 and (TRrw.AccNumber==PMrw.AccNr) and (TRrw.Curncy==VIOPrw.BankCurncy)) then begin
                              trsum = trsum + AbsoluteVal(TRrw.CredVal - TRrw.DebVal);
                            end;
                          end;
                        end;
                        sum = sum + VIOPrw.BankVal/opsum*trsum;
                        paidsum = paidsum + VIOPrw.RecVal;
                      end;
                    end;
                  end;
                end;
              end;
            end;
            if (sum==0) then begin
              fr = 0;
              to1 = 0;
              to2 = 0;
              br1 = 0;
              br2 = 0;
              tstr = VIr.CurncyCode;
              GetFullCurncyRate(tstr,VIr.TransDate,fr,to1,to2,br1,br2);
              if (fr==0) or (fr==blankval) then begin fr = VIr.FrRate; end;
              if (br1==0) or (br1==blankval) then begin br1 = VIr.BaseRate1; end;
              if (br2==0) or (br2==blankval) then begin br2 = VIr.BaseRate2; end;
              if (to1==0) or (to1==blankval) then begin to1 = VIr.ToRateB1; end;
              if (to2==0) or (to2==blankval) then begin to2 = VIr.ToRateB2; end;
              sum = MulRateToBase1(tstr,VIr.PayVal,fr,to1,to2,br1,br2,SetRoundModeD(2));
              paidsum = VIr.PayVal;
            end;
            if (paidsum<VIr.PayVal) then begin
              fr = 0;
              to1 = 0;
              to2 = 0;
              br1 = 0;
              br2 = 0;
              tstr = VIr.CurncyCode;
              GetFullCurncyRate(tstr,VIr.TransDate,fr,to1,to2,br1,br2);
              if (fr==0) or (fr==blankval) then begin fr = VIr.FrRate; end;
              if (br1==0) or (br1==blankval) then begin br1 = VIr.BaseRate1; end;
              if (br2==0) or (br2==blankval) then begin br2 = VIr.BaseRate2; end;
              if (to1==0) or (to1==blankval) then begin to1 = VIr.ToRateB1; end;
              if (to2==0) or (to2==blankval) then begin to2 = VIr.ToRateB2; end;
              sum = sum + MulRateToBase1(tstr,(VIr.PayVal - paidsum),fr,to1,to2,br1,br2,SetRoundModeD(2));
            end;
            k = 0;
            k = GetQuartal(TRr.TransDate);
            if ((k!= 1) and (k!= 2) and (k!= 3) and (k!= 4)) then begin
              k = 1;
            end;
            mtrw = matrowcnt(VIr);
            for (i=0;i<mtrw;i=i+1) begin
              matrowget(VIr,i,VIrw);
              PRr.Objects = VIrw.Prj;
              ReadFirstKey("Objects",PRr,1,true);
              if ((PRr.Code==RepSpec.f1) or blank(RepSpec.f1)) and (ArtInArr[VIrw.Exp]) and (ProjInArr[PRr.Code]) then begin
                INr.Objects = VIrw.Exp;
                ReadfirstKey("Objects",INr,1,true);
                group = INr.Group;
                if nonblank(VIrw.Extras) and !ExtInArr[VIrw.Extras] then begin
                  ExtInArr[VIrw.Extras] = true;
                  ExtArr[EAi] = VIrw.Extras;
                  EAi = EAi + 1;
                end;
                if nonblank(VIrw.Supp) and !SuppInArr[VIrw.Supp] then begin
									SuppInArr[VIrw.Supp] = true;
									SuppArr[SAi] = VIrw.Supp;
									SAi = SAi + 1;
								end;
                tmpval = VIrw.Sum/VIr.PayVal*sum;
                FillVect(k & "F;",VIrw.Exp,VIrw.Extras,PRr.Code,group,PRr.MotherCode,CBrw.ShortName,tmpval,RepSpec,QuartVect);
                
                if nonblank(VIrw.Supp) and !ExtInArr[VIrw.Supp] then begin
                  SuppInArr[VIrw.Supp] = true;
                  SuppArr[SAi] = VIrw.Supp;
                  SAi = SAi + 1;
                end;
                FillVect(k & "FS;",VIrw.Exp,VIrw.Extras & ":::" & VIrw.Supp,PRr.Code,group,PRr.MotherCode,CBrw.ShortName,tmpval,RepSpec,QuartVect);
              end;
            end;
          end;
        end;
      end;
    end;
  end;
  resetcompany(oldcomp);
  ExtArr[EAi] = "";
  EAi = EAi + 1;
  for (PAi=0;PAi<ProjArray.length;PAi=PAi+1) begin
    ProjArray2[PAi] = ProjArray[PAi];
  end;
  if blank(RepSpec.f1) then begin
    if (RepSpec.f2=="2016") then begin
      PAi = 0;
      if (RepSpec.flags[6]==1) then begin
        ProjArray[PAi] = "2016.998";
        PAi = PAi + 1;
        ProjArray[PAi] = "sT1";
        PAi = PAi + 1;
      end;
      ProjArray[PAi] = "2016.004";
      PAi = PAi + 1;
      ProjArray[PAi] = "2016.007";
      PAi = PAi + 1;
      ProjArray[PAi] = "sT2";
      PAi = PAi + 1;
      for (i=0;i<ProjArray2.length;i=i+1) begin
        testf = true;
        switch (ProjArray2[i]) begin
          case "2016.004":
            testf = false;
          case "2016.007":
            testf = false;
          case "2016.998":
            testf = false;
        end;
        if (testf) then begin
          ProjArray[PAi] = ProjArray2[i];
          PAi = PAi + 1;
        end;
      end;
      ProjArray[PAi] = "sT3";
    end;
    if (RepSpec.f2=="2017") then begin
      PAi = 0;
      if (RepSpec.flags[6]==1) then begin
        ProjArray[PAi] = "2017.998";
        PAi = PAi + 1;
        ProjArray[PAi] = "sT1";
        PAi = PAi + 1;
      end;
      for (i=0;i<ProjArray2.length;i=i+1) begin
        testf = true;
        switch (ProjArray2[i]) begin
          case "2017.998":
            testf = false;
        end;
        if (testf) then begin
          ProjArray[PAi] = ProjArray2[i];
          PAi = PAi + 1;
        end;
      end;
      ProjArray[PAi] = "sT3";
    end;
    if (RepSpec.f2=="2018") then begin
      PAi = 0;
      if (RepSpec.flags[6]==1) then begin
        ProjArray[PAi] = "2018.998";
        PAi = PAi + 1;
        ProjArray[PAi] = "sT1";
        PAi = PAi + 1;
      end;
      for (i=0;i<ProjArray2.length;i=i+1) begin
        testf = true;
        switch (ProjArray2[i]) begin
          case "2018.998":
            testf = false;
        end;
        if (testf) then begin
          ProjArray[PAi] = ProjArray2[i];
          PAi = PAi + 1;
        end;
      end;
      ProjArray[PAi] = "sT3";
    end;
  end;
	RETURN;
END;

global
procedure ProjectStatRn(record RcVc RepSpec, var string fnserv, var string md5str, var boolean PrjFoundf)
BEGIN
	record BaseCurBlock BCb;
	record ITVc ITr;
	record INVc INr;
	record ObjVc Objr;
	array string 10 ArtArrayWithoutGroups,ArtArrayWithGroups,ProjArray,ProjArray2,ExtArr,CompArray;
	vector val QuartVect;
	vector boolean isMotherProjVect;
	vector string 255 ProjNamesVect,CompNamesVect;
	integer i,j,k,l,m,Wi,PAi,quartCount,prjInRow,PAlen,Qi,incWi,pos,combcnt,CAi,colqty,jj;
	string 10 group,nextgroup,tstr;
	boolean lastBigRow,ArtExtNonBlank,ExtPrinted;
  array integer quartToPrint;
  val bud,fact,totbud,totfact;
  array string 100 combarr;
  vector boolean combExist;
  vector val totfactv;
  
	array string 10 sheetNames;
	array val sheetColls;
	array integer sheetCollsOutLvl;
	array string 21 mergeCell;
	string 255 fileToSave;
	integer qtyOfSheets,sheetnum,rownum,colnum,style,qtyOfEmpStr;
	array string 100 SharedStrings;
	integer numOfUniqueSharedStrings,numOfSharedStrings,qtyMergeCell;
	string 16 reportName;
	array string 225 mas;
  area areatofile;
	array string 100 SuppArr;// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 25 September 2018 09:52:22

  ArraysCollect(RepSpec,ArtArrayWithoutGroups,ProjArray,ProjNamesVect,ArtArrayWithGroups,PrjFoundf,isMotherProjVect);
	if (PrjFoundf) then begin
		DataCollect(ArtArrayWithoutGroups,ExtArr,ProjArray,ProjArray2,RepSpec,QuartVect,CompArray,CompNamesVect,SuppArr);
		SortStringArray(SuppArr);
    GetVectorTags(QuartVect,combarr);
    combcnt = combarr.length;
    for (i=0;i<combcnt;i=i+1) begin
      pos = 0;
      ExtractObjWithSeparator(";",combarr[i],false,pos,tstr);
      ExtractObjWithSeparator(";",combarr[i],false,pos,tstr);
      combExist[tstr] = true;
    end;
		
    reportName = "ProjectStatRn";
		if(windowsmode==1)then begin
      fileToSave = DateToString(CurrentDate,"YYYYMMDD") & "_" & TimeToString(CurrentTime,"HHMMSS",false) & "_" & GetCurTick() & ".xlsx";
		end else begin
			fileToSave = "/" & DateToString(CurrentDate,"YYYYMMDD") & "_" & TimeToString(CurrentTime,"HHMMSS",false) & "_" & GetCurTick() & ".xlsx";
		end;
		deletefolder(Left(fileToSave,(len(fileToSave) - 5)));
		BlockLoad(BCb);
		if nonblank(RepSpec.f1) then begin
      sheetNames[0] = RepSpec.f1 & "-TOT";
    end else begin
      sheetNames[0] = "Projects-TOT";
      for (i=1;i<=ProjArray2.length;i=i+1) begin
        sheetNames[i] = ProjArray2[i-1] & "-TOT";
      end;
    end;
		qtyOfSheets = sheetNames.length;
		quartCount = RepSpec.flags[1] + RepSpec.flags[2] + RepSpec.flags[3] + RepSpec.flags[4];
		
    if (RepSpec.flags[4]==1) then begin
			i = 4;
		end;
		if (RepSpec.flags[3]==1) then begin
			i = 3;
		end;
		if (RepSpec.flags[2]==1) then begin
			i = 2;
		end;
		if (RepSpec.flags[1]==1) then begin
			i = 1;
		end;
		quartToPrint[0] = i;
		for (i=1;i<quartCount;i=i+1) begin
			quartToPrint[i] = quartToPrint[0] + i;
		end;
    
		prjInRow = StringToInt(RepSpec.f3);
		if (ProjArray.length + 1) < prjInRow then begin
      prjInRow = ProjArray.length;
			if blank(RepSpec.f1) then begin
        prjInRow = prjInRow + 1;
      end;
		end;
		
		colnum = 0;
		sheetColls[colnum] = 2.140625;
		colnum = colnum + 1;
    sheetColls[colnum] = 5.85546871;
		colnum = colnum + 1;
		sheetColls[colnum] = 21.28515625;
		colnum = colnum + 1;
		sheetColls[colnum] = 3.42578125;
		colnum = colnum + 1;
		for (k=0;k<prjInRow;k=k+1) begin
			for (i=0;i<quartCount;i=i+1) begin
				sheetColls[colnum] = 9.7109371;
				colnum = colnum + 1;
        if (RepSpec.flags[29]==1) then begin
          for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
            sheetColls[colnum] = 9.7109371;
            if quartCount>1 then begin
              sheetCollsOutLvl[colnum] = RepSpec.flags[5]*2;
            end;
            colnum = colnum + 1;
          end;
        end;
        sheetColls[colnum] = 9.7109371;
        if quartCount>1 then begin
          sheetCollsOutLvl[colnum] = RepSpec.flags[5];
        end;
        colnum = colnum + 1;
			end;
      if quartCount>1 then begin
        sheetColls[colnum] = 10.5703125;
        colnum = colnum + 1;
        if (RepSpec.flags[29]==1) then begin
          for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
            sheetColls[colnum] = 10.5703125;
            if quartCount>1 then begin
              sheetCollsOutLvl[colnum] = RepSpec.flags[5]*2;
            end;
            colnum = colnum + 1;
          end;
        end;
        sheetColls[colnum] = 10.5703125;
        sheetCollsOutLvl[colnum] = RepSpec.flags[5];
        colnum = colnum + 1;
      end;
			sheetColls[colnum] = 10.5703125;
      if quartCount>1 then begin
        sheetCollsOutLvl[colnum] = RepSpec.flags[5];
      end;
			colnum = colnum + 1;
			sheetColls[colnum] = 6.140625;
      if quartCount>1 then begin
        sheetCollsOutLvl[colnum] = RepSpec.flags[5];
      end;
			colnum = colnum + 1;
			if k != (prjInRow - 1) then begin
				sheetColls[colnum] = 1.7109371;
        colnum = colnum + 1;
			end;
		end;
    colqty = 2;
    if (RepSpec.flags[29]==1) then begin
      colqty = CompArray.length + 2;
    end;
		colnum = 0;
		numOfUniqueSharedStrings = 0;
		numOfSharedStrings = 0;
		sheetnum = 1;
		qtyMergeCell = 0;
		XmlXlsxWorkBegin(fileToSave,reportName);
		CreateSheetsXLSX(qtyOfSheets,sheetNames,fileToSave,0,false);
		SetSheetsCols(sheetnum,sheetColls,sheetCollsOutLvl,fileToSave);
		BeginSheetData(sheetnum,fileToSave);
      Wi = 0;
      rownum = 1;
      colnum = 1;
      BeginRow(sheetnum,fileToSave,rownum,0,19.5);
        style = 14;
        StringCell(sheetnum,fileToSave,colnum,rownum,style,"Project Statistics " & RepSpec.f2,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
        qtyOfEmpStr = ((quartCount + 1)*colqty + 3)*prjInRow + 2;
        if quartCount<2 then begin
          qtyOfEmpStr = qtyOfEmpStr - colqty*prjInRow;
        end;
        EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
      EndRow(sheetnum,fileToSave,rownum);
      rownum = rownum + 1;
      colnum = 1;
      BeginRow(sheetnum,fileToSave,rownum,0,blankval);
        style = 1;
        StringCell(sheetnum,fileToSave,colnum,rownum,style,"Period",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
        qtyOfEmpStr = 1;
        EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
        style = 2;
        StringCell(sheetnum,fileToSave,colnum,rownum,style,":" & RepSpec.sStartDate & "-" & RepSpec.sEndDate,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      EndRow(sheetnum,fileToSave,rownum);
      BeginRow(sheetnum,fileToSave,rownum,0,8);
      EndRow(sheetnum,fileToSave,rownum);
      colnum = 1;
      BeginRow(sheetnum,fileToSave,rownum,0,blankval);
        style = 3;
        StringCell(sheetnum,fileToSave,colnum,rownum,style,"Currency",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
        qtyOfEmpStr = 1;
        EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
        style = 4;
        StringCell(sheetnum,fileToSave,colnum,rownum,style,":USD",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      EndRow(sheetnum,fileToSave,rownum);
      PAlen = ProjArray.length - 1;
      while (Wi <= PAlen) begin
        if ((ProjArray.length - mod((ProjArray.length - Wi),prjInRow))/Wi == 1) then begin
          prjInRow = ProjArray.length - Wi;
        end;
        if (ProjArray.length<prjInRow) then begin
          prjInRow = ProjArray.length;
        end;
        if nonblank(RepSpec.f1) then begin
          if prjInRow>ProjArray.length then begin
            prjInRow = ProjArray.length;
          end;
        end;
        incWi = prjInRow;
        rownum = rownum + 1;
        colnum = 5;
        BeginRow(sheetnum,fileToSave,rownum,0,4);
          for (k=0;k<prjInRow;k=k+1) begin
            PAi = Wi + k;
            if left(ProjArray[PAi],2)=="sT" then begin
              incWi = k + 1;
              k = prjInRow;
              style = 10;
            end else begin
              style = 38;
            end;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            if left(ProjArray[PAi],2)=="sT" then begin
              style = 11;
            end else begin
              style = 39;
            end;
            qtyOfEmpStr = (quartCount + 1)*colqty + 1;
            if quartCount<2 then begin
              qtyOfEmpStr = qtyOfEmpStr - colqty;
            end;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            style = 36;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          end;
        EndRow(sheetnum,fileToSave,rownum);
        colnum = 5;
        BeginRow(sheetnum,fileToSave,rownum,0,blankval);
          for (k=0;k<prjInRow;k=k+1) begin
            PAi = Wi + k;
            mergeCell[qtyMergeCell] = GetStringCellNum(colnum,rownum);
            if left(ProjArray[PAi],2)=="sT" then begin
              k = prjInRow;
              style = 53;
            end else begin
              if isMotherProjVect[ProjArray[PAi]] then begin
                style = 49;
              end else begin
                style = 51;
              end;
            end;
            if left(ProjArray[PAi],2)=="sT" then begin
              StringCell(sheetnum,fileToSave,colnum,rownum,style,"Subtotal",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            end else begin
              StringCell(sheetnum,fileToSave,colnum,rownum,style,StrReplace(ProjArray[PAi],RepSpec.f2 & ".","") & " - " & ProjNamesVect[ProjArray[PAi]],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            end;
            if left(ProjArray[PAi],2)=="sT" then begin
              style = 54;
            end else begin
              if isMotherProjVect[ProjArray[PAi]] then begin
                style = 50;
              end else begin
                style = 52;
              end;
            end;
            qtyOfEmpStr = (quartCount + 1)*colqty + 1;
            if quartCount<2 then begin
              qtyOfEmpStr = qtyOfEmpStr - colqty;
            end;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            mergeCell[qtyMergeCell] = mergeCell[qtyMergeCell] & ":" & GetStringCellNum(colnum-1,rownum);
            qtyMergeCell = qtyMergeCell + 1;
            style = 36;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          end;
        EndRow(sheetnum,fileToSave,rownum);
        colnum = 5;
        BeginRow(sheetnum,fileToSave,rownum,0,4);
          for (k=0;k<prjInRow;k=k+1) begin
            PAi = Wi + k;
            if left(ProjArray[PAi],2)=="sT" then begin
              k = prjInRow;
              style = 12;
            end else begin
              if isMotherProjVect[ProjArray[PAi]] then begin
                style = 18;
              end else begin
                style = 15;
              end;
            end;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            if left(ProjArray[PAi],2)=="sT" then begin
              style = 13;
            end else begin
              if isMotherProjVect[ProjArray[PAi]] then begin
                style = 19;
              end else begin
                style = 16;
              end;
            end;
            qtyOfEmpStr = (quartCount + 1)*colqty + 1;
            if quartCount<2 then begin
              qtyOfEmpStr = qtyOfEmpStr - colqty;
            end;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            style = 36;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          end;
        EndRow(sheetnum,fileToSave,rownum);
        BeginRow(sheetnum,fileToSave,rownum,0,8);
        EndRow(sheetnum,fileToSave,rownum);
        colnum = 5;
        BeginRow(sheetnum,fileToSave,rownum,0,blankval);
          for (k=0;k<prjInRow;k=k+1) begin
            PAi = Wi + k;
            for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
              if left(ProjArray[PAi],2)=="sT" then begin
                k = prjInRow;
                style = 65;
              end else begin
                style = 61;
              end;
              if nonblank(RepSpec.f4) then begin
                StringCell(sheetnum,fileToSave,colnum,rownum,style,MonthName(RepSpec.sStartDate),SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              end else begin
                StringCell(sheetnum,fileToSave,colnum,rownum,style,QuartalIntToStr(quartToPrint[Qi]),SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              end;
              if left(ProjArray[PAi],2)=="sT" then begin
                style = 66;
              end else begin
                style = 62;
              end;
              if (RepSpec.flags[29]==1) then begin
                for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                  StringCell(sheetnum,fileToSave,colnum,rownum,style,"Fact - " & CompNamesVect[CompArray[CAi]],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                end;
                if left(ProjArray[PAi],2)=="sT" then begin
                  style = 75;
                end else begin
                  style = 69;
                end;
                StringCell(sheetnum,fileToSave,colnum,rownum,style,"Fact -  ALL COMPANIES",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              end else begin
                StringCell(sheetnum,fileToSave,colnum,rownum,style,"Fact",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              end;
            end;
            if quartCount>1 then begin
              if left(ProjArray[PAi],2)=="sT" then begin
                style = 67;
              end else begin
                style = 65;
              end;
              StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOT",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              if left(ProjArray[PAi],2)=="sT" then begin
                style = 68;
              end else begin
                style = 62;
              end;
              if (RepSpec.flags[29]==1) then begin
                for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                  StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOT-Fact - " & CompNamesVect[CompArray[CAi]],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                end;
                if left(ProjArray[PAi],2)=="sT" then begin
                  style = 77;
                end else begin
                  style = 69;
                end;
                StringCell(sheetnum,fileToSave,colnum,rownum,style,"Tot-Fact - ALL COMPANIES",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              end else begin
                StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOT-Fact",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              end;
            end;
            style = 63;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Delta,$",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            style = 64;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"%",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            style = 36;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          end;
        EndRow(sheetnum,fileToSave,rownum);
        BeginRow(sheetnum,fileToSave,rownum,0,8);
        EndRow(sheetnum,fileToSave,rownum);
        for (i=0;i<ArtArrayWithGroups.length;i=i+1) begin
          if combExist[ArtArrayWithGroups[i]] then begin
            m = 1;
            while !combExist[ArtArrayWithGroups[i+m]] and (m+i<ArtArrayWithGroups.length) begin
              m = m + 1;
            end;
            INr.Objects = ArtArrayWithGroups[i+m];
            if ReadfirstKey("Objects",INr,1,true) then begin
              ITr.Code = INr.Group;
              ReadFirstMain(ITr,1,true);
              nextgroup = ITr.Code;
            end else begin
              nextgroup = ArtArrayWithGroups[i+m];
            end;
            INr.Objects = ArtArrayWithGroups[i];
            ReadfirstKey("Objects",INr,1,true);
            if ReadfirstKey("Objects",INr,1,true) then begin
              ITr.Code = INr.Group;
              ReadFirstMain(ITr,1,true);
              group = ITr.Code;
            end else begin
              ITr.Code = ArtArrayWithGroups[i];
              ReadFirstMain(ITr,1,true);
              group = ITr.Code;
            end;
            if ArtArrayWithGroups[i]==group then begin
              colnum = 1;
              BeginRow(sheetnum,fileToSave,rownum,0,blankval);
                style = 7;
                StringCell(sheetnum,fileToSave,colnum,rownum,style,StrReplace(group,"_16","000"),SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                qtyOfEmpStr = 1;
                EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                style = 8;
                StringCell(sheetnum,fileToSave,colnum,rownum,style,ITr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                colnum = colnum + 1;
                for (k=0;k<prjInRow;k=k+1) begin
                  PAi = Wi + k;
                  totbud = 0;
                  totfact = 0;
                  for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
                    if left(ProjArray[PAi],2)=="sT" then begin
                      k = prjInRow;
                      style = 25;
                    end else begin
                      style = 24;
                    end;
                    bud = QuartVect[quartToPrint[Qi] & ";" & group & ";" & ProjArray[PAi]];
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,bud);
                    totbud = totbud + bud;
                    if left(ProjArray[PAi],2)=="sT" then begin
                      style = 33;
                    end else begin
                      style = 40;
                    end;
                    if (RepSpec.flags[29]==1) then begin
                      for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                        fact = QuartVect[quartToPrint[Qi] & "F;" & group & ";" & ProjArray[PAi] & ";" & CompArray[CAi]];
                        NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                        totfactv[CompArray[CAi]] = totfactv[CompArray[CAi]] + fact;
                      end;
                      if left(ProjArray[PAi],2)=="sT" then begin
                        style = 74;
                      end else begin
                        style = 70;
                      end;
                    end;
                    fact = QuartVect[quartToPrint[Qi] & "F;" & group & ";" & ProjArray[PAi]];
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                    totfact = totfact + fact;
                  end;
                  if quartCount>1 then begin
                    if left(ProjArray[PAi],2)=="sT" then begin
                      style = 26;
                    end else begin
                      style = 24;
                    end;
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,totbud);
                    if left(ProjArray[PAi],2)=="sT" then begin
                      style = 35;
                    end else begin
                      style = 40;
                    end;
                    if (RepSpec.flags[29]==1) then begin
                      for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                        NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfactv[CompArray[CAi]]);
                        totfactv[CompArray[CAi]] = 0;
                      end;
                      if left(ProjArray[PAi],2)=="sT" then begin
                        style = 78;
                      end else begin
                        style = 70;
                      end;
                    end;
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact);
                  end;
                  style = 28;
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact - totbud);
                  style = 30;
                  if (totfact == 0) then begin
                    qtyOfEmpStr = 1;
                    EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                  end else begin
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,100*(totfact - totbud)/totbud);
                  end;
                  style = 36;
                  qtyOfEmpStr = 1;
                  EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                end;
              EndRow(sheetnum,fileToSave,rownum);
            end else begin
              colnum = 1;
              BeginRow(sheetnum,fileToSave,rownum,RepSpec.flags[5],blankval);
                style = 5;
                StringCell(sheetnum,fileToSave,colnum,rownum,style,ArtArrayWithGroups[i],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                qtyOfEmpStr = 1;
                EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                Objr.Code = ArtArrayWithGroups[i];
                readfirstmain(Objr,1,true);
                style = 6;
                StringCell(sheetnum,fileToSave,colnum,rownum,style,Objr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                colnum = colnum + 1;
                for (k=0;k<prjInRow;k=k+1) begin
                  PAi = Wi + k;
                  totbud = 0;
                  totfact = 0;
                  for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
                    if left(ProjArray[PAi],2)=="sT" then begin
                      style = 32;
                    end else begin
                      style = 27;
                    end;
                    bud = QuartVect[quartToPrint[Qi] & ";" & ArtArrayWithGroups[i] & ";" & ProjArray[PAi]];
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,bud);
                    totbud = totbud + bud;
                    if left(ProjArray[PAi],2)=="sT" then begin
                      k = prjInRow;
                      style = 34;
                    end else begin
                      style = 41;
                    end;
                    if (RepSpec.flags[29]==1) then begin
                      for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                        fact = QuartVect[quartToPrint[Qi] & "F;" & ArtArrayWithGroups[i] & ";" & ProjArray[PAi] & ";" & CompArray[CAi]];
                        NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                        totfactv[CompArray[CAi]] = totfactv[CompArray[CAi]] + fact;
                      end;
                      if left(ProjArray[PAi],2)=="sT" then begin
                        k = prjInRow;
                        style = 76;
                      end else begin
                        style = 71;
                      end;
                    end;
                    fact = QuartVect[quartToPrint[Qi] & "F;" & ArtArrayWithGroups[i] & ";" & ProjArray[PAi]];
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                    totfact = totfact + fact;
                  end;
                  if quartCount>1 then begin
                    if left(ProjArray[PAi],2)=="sT" then begin
                      style = 57;
                    end else begin
                      style = 27;
                    end;
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,totbud);
                    if left(ProjArray[PAi],2)=="sT" then begin
                      style = 58;
                    end else begin
                      style = 41;
                    end;
                    if (RepSpec.flags[29]==1) then begin
                      for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                        NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfactv[CompArray[CAi]]);
                        totfactv[CompArray[CAi]] = 0;
                      end;
                      if left(ProjArray[PAi],2)=="sT" then begin
                        style = 79;
                      end else begin
                        style = 71;
                      end;
                    end;
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact);
                  end;
                  style = 29;
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact - totbud);
                  style = 31;
                  if (totbud == 0) then begin
                    qtyOfEmpStr = 1;
                    EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                  end else begin
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,100*(totfact - totbud)/totbud);
                  end;
                  style = 36;
                  qtyOfEmpStr = 1;
                  EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                end;
              EndRow(sheetnum,fileToSave,rownum);
              ExtPrinted = false;
              for (j=0;j<ExtArr.length;j=j+1) begin
                if (blank(ExtArr[j]) and ExtPrinted) or nonblank(ExtArr[j]) then begin
                  if combExist[ArtArrayWithGroups[i] & ":" & ExtArr[j]] then begin
                    ArtExtNonBlank = false;
                    for (k=0;k<prjInRow;k=k+1) begin
                      for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
                        l = Wi + k;
                        if QuartVect[quartToPrint[Qi] & ";" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ";" & ProjArray[l]]!=0 or QuartVect[quartToPrint[Qi] & "F;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ";" & ProjArray[l]]!=0 then begin
                          ArtExtNonBlank = true;
                        end;
                      end;
                      if left(ProjArray[l],2)=="sT" then begin
                        k = prjInRow;
                      end;
                    end;
                    if ArtExtNonBlank then begin
                      ExtPrinted = true;
                      colnum = 2;
                      BeginRow(sheetnum,fileToSave,rownum,RepSpec.flags[5]*2,blankval);
                        style = 45;
                        StringCell(sheetnum,fileToSave,colnum,rownum,style,ExtArr[j],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                        Objr.Code = ExtArr[j];
                        if ExtArr[j]=="" then begin
                          Objr.Code = ArtArrayWithGroups[i];
                        end;
                        readfirstmain(Objr,1,true);
                        style = 46;
                        StringCell(sheetnum,fileToSave,colnum,rownum,style,Objr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                        style = 43;
                        qtyOfEmpStr = 1;
                        EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                        for (k=0;k<prjInRow;k=k+1) begin
                          PAi = Wi + k;
                          totbud = 0;
                          totfact = 0;
                          for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
                            if left(ProjArray[PAi],2)=="sT" then begin
                              k = prjInRow;
                              style = 47;
                            end else begin
                              style = 42;
                            end;
                            bud = QuartVect[quartToPrint[Qi] & ";" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ";" & ProjArray[PAi]];
                            NumericCell(sheetnum,fileToSave,colnum,rownum,style,bud);
                            totbud = totbud + bud;
                            if left(ProjArray[PAi],2)=="sT" then begin
                              style = 48;
                            end else begin
                              style = 20;
                            end;
                            if (RepSpec.flags[29]==1) then begin
                              for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                                fact = QuartVect[quartToPrint[Qi] & "F;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ";" & ProjArray[PAi] & ";" & CompArray[CAi]];
                                NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                                totfactv[CompArray[CAi]] = totfactv[CompArray[CAi]] + fact;
                              end;
                              if left(ProjArray[PAi],2)=="sT" then begin
                                style = 80;
                              end else begin
                                style = 72;
                              end;
                            end;
                            fact = QuartVect[quartToPrint[Qi] & "F;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ";" & ProjArray[PAi]];
                            NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                            totfact = totfact + fact;
                          end;
                          if quartCount>1 then begin
                            if left(ProjArray[PAi],2)=="sT" then begin
                              style = 59;
                            end else begin
                              style = 42;
                            end;
                            NumericCell(sheetnum,fileToSave,colnum,rownum,style,totbud);
                            if left(ProjArray[PAi],2)=="sT" then begin
                              style = 60;
                            end else begin
                              style = 20;
                            end;
                            if (RepSpec.flags[29]==1) then begin
                              for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                                NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfactv[CompArray[CAi]]);
                                totfactv[CompArray[CAi]] = 0;
                              end;
                              if left(ProjArray[PAi],2)=="sT" then begin
                                style = 81;
                              end else begin
                                style = 72;
                              end;
                            end;
                            NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact);
                          end;
                          style = 22;
                          NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact - totbud);
                          style = 21;
                          if (totbud == 0) then begin
                            qtyOfEmpStr = 1;
                            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                          end else begin
                            NumericCell(sheetnum,fileToSave,colnum,rownum,style,100*(totfact - totbud)/totbud);
                          end;
                          style = 36;
                          qtyOfEmpStr = 1;
                          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                        end;
                      EndRow(sheetnum,fileToSave,rownum);
                      
                      
                      for (jj=0;jj<SuppArr.length;jj=jj+1) begin// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 25 September 2018 09:59:25                	
												if (nonblank(SuppArr[jj])) then begin
													if combExist[ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj]] then begin
														ArtExtNonBlank = false;
														for (k=0;k<prjInRow;k=k+1) begin
															for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
																l = Wi + k;
																if QuartVect[quartToPrint[Qi] & "S;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj] & ";" & ProjArray[l]]!=0 or QuartVect[quartToPrint[Qi] & "FS;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj] & ";" & ProjArray[l]]!=0 then begin
																	ArtExtNonBlank = true;
																end;
															end;
															if left(ProjArray[l],2)=="sT" then begin
																k = prjInRow;
															end;
														end;
														if ArtExtNonBlank then begin
															colnum = 2;
															BeginRow(sheetnum,fileToSave,rownum,3,blankval);
																style = 82;// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 25 September 2018 10:32:11
																StringCell(sheetnum,fileToSave,colnum,rownum,style,SuppArr[jj],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
																Objr.Code = SuppArr[jj];
																readfirstmain(Objr,1,true);
																style = 46;
																StringCell(sheetnum,fileToSave,colnum,rownum,style,Objr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
																style = 43;
																qtyOfEmpStr = 1;
																EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
																for (k=0;k<prjInRow;k=k+1) begin
																	PAi = Wi + k;
																	totbud = 0;
																	totfact = 0;
																	for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
																		if left(ProjArray[PAi],2)=="sT" then begin
																			k = prjInRow;
																			style = 47;
																		end else begin
																			style = 42;
																		end;
																		bud = QuartVect[quartToPrint[Qi] & "S;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj] & ";" & ProjArray[PAi]];
																		NumericCell(sheetnum,fileToSave,colnum,rownum,style,bud);
																		totbud = totbud + bud;
																		if left(ProjArray[PAi],2)=="sT" then begin
																			style = 48;
																		end else begin
																			style = 20;
																		end;
																		if (RepSpec.flags[29]==1) then begin
																			for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
																				fact = QuartVect[quartToPrint[Qi] & "FS;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj] & ";" & ProjArray[PAi] & ";" & CompArray[CAi]];
																				NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
																				totfactv[CompArray[CAi]] = totfactv[CompArray[CAi]] + fact;
																			end;
																			if left(ProjArray[PAi],2)=="sT" then begin
																				style = 80;
																			end else begin
																				style = 72;
																			end;
																		end;
																		fact = QuartVect[quartToPrint[Qi] & "FS;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj] & ";" & ProjArray[PAi]];
																		NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
																		totfact = totfact + fact;
																	end;
																	if quartCount>1 then begin
																		if left(ProjArray[PAi],2)=="sT" then begin
																			style = 59;
																		end else begin
																			style = 42;
																		end;
																		NumericCell(sheetnum,fileToSave,colnum,rownum,style,totbud);
																		if left(ProjArray[PAi],2)=="sT" then begin
																			style = 60;
																		end else begin
																			style = 20;
																		end;
																		if (RepSpec.flags[29]==1) then begin
																			for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
																				NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfactv[CompArray[CAi]]);
																				totfactv[CompArray[CAi]] = 0;
																			end;
																			if left(ProjArray[PAi],2)=="sT" then begin
																				style = 81;
																			end else begin
																				style = 72;
																			end;
																		end;
																		NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact);
																	end;
																	style = 22;
																	NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact - totbud);
																	style = 21;
																	if (totbud == 0) then begin
																		qtyOfEmpStr = 1;
																		EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
																	end else begin
																		NumericCell(sheetnum,fileToSave,colnum,rownum,style,100*(totfact - totbud)/totbud);
																	end;
																	style = 36;
																	qtyOfEmpStr = 1;
																	EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
																end;
															EndRow(sheetnum,fileToSave,rownum);
														end;
													end;
												end;
											end;
                    end;
                  end;
                end;
              end;
              if ArtArrayWithGroups[i+m]==nextgroup or blank(ArtArrayWithGroups[i+m]) then begin
                colnum = 5;
                BeginRow(sheetnum,fileToSave,rownum,0,blankval);
                  style = 37;
                  for (k=0;k<prjInRow;k=k+1) begin
                    PAi = Wi + k;
                    if left(ProjArray[PAi],2)=="sT" then begin
                      k = prjInRow;
                    end;
                    qtyOfEmpStr = (quartCount + 1)*colqty + 2;
                    if quartCount<2 then begin
                      qtyOfEmpStr = qtyOfEmpStr - colqty;
                    end;
                    EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                    colnum = colnum + 1;
                  end;
                EndRow(sheetnum,fileToSave,rownum);
              end;
            end;
          end;
        end;
        colnum = 1;
        BeginRow(sheetnum,fileToSave,rownum,0,blankval);
          style = 9;
          qtyOfEmpStr = 2;
          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOTAL COST :",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
          qtyOfEmpStr = 1;
          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          for (k=0;k<prjInRow;k=k+1) begin
            PAi = Wi + k;
            totbud = 0;
            totfact = 0;
            for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
              style = 25;
              bud = QuartVect[quartToPrint[Qi] & ";T;" & ProjArray[PAi]];
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,bud);
              totbud = totbud + bud;
              if left(ProjArray[PAi],2)=="sT" then begin
                k = prjInRow;
                style = 33;
              end else begin
                style = 44;
              end;
              if (RepSpec.flags[29]==1) then begin
                for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                  fact = QuartVect[quartToPrint[Qi] & "F;T;" & ProjArray[PAi] & ";" & CompArray[CAi]];
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                  totfactv[CompArray[CAi]] = totfactv[CompArray[CAi]] + fact;
                end;
                if left(ProjArray[PAi],2)=="sT" then begin
                  k = prjInRow;
                  style = 74;
                end else begin
                  style = 73;
                end;
              end;
              fact = QuartVect[quartToPrint[Qi] & "F;T;" & ProjArray[PAi]];
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
              totfact = totfact + fact;
            end;
            if quartCount>1 then begin
              if left(ProjArray[PAi],2)=="sT" then begin
                style = 26;
              end else begin
                style = 25;
              end;
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,totbud);
              if left(ProjArray[PAi],2)=="sT" then begin
                style = 35;
              end else begin
                style = 33;
              end;
              if (RepSpec.flags[29]==1) then begin
                for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfactv[CompArray[CAi]]);
                  totfactv[CompArray[CAi]] = 0;
                end;
                if left(ProjArray[PAi],2)=="sT" then begin
                  style = 78;
                end else begin
                  style = 74;
                end;
              end;
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact);
              // Edit Start ---------------------------------------------- Edit Start
	//Thursday, 6 September 2018 08:59:08
	
              style = 28;
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact-totbud);
              style = 30;
             	if (totbud == 0) then begin
								qtyOfEmpStr = 1;
								EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
							end else begin
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,(totfact-totbud)/totbud*100);
							end;
              
	// Edit End ---------------------------------------------- Edit End
	
            end;
            colnum = colnum + 1;// Edit ************************** BPI Ukraine - KramarAlexandr - Thursday, 6 September 2018 08:53:46
          end;
        EndRow(sheetnum,fileToSave,rownum);
        rownum = rownum + 2;
        Wi = Wi + incWi;
      end;
      if blank(RepSpec.f1) then begin
        colnum = 5;
        BeginRow(sheetnum,fileToSave,rownum,0,4);
          style = 10;
          qtyOfEmpStr = 1;
          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          style = 11;
          qtyOfEmpStr = (quartCount + 1)*colqty + 1;
          if quartCount<2 then begin
            qtyOfEmpStr = qtyOfEmpStr - colqty;
          end;
          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          style = 17;
          qtyOfEmpStr = 1;
          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
        EndRow(sheetnum,fileToSave,rownum);
        colnum = 5;
        BeginRow(sheetnum,fileToSave,rownum,0,blankval);
          mergeCell[qtyMergeCell] = GetStringCellNum(colnum,rownum);
          style = 53;
          StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOTAL - Budget - " & RepSpec.f2,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
          style = 54;
          qtyOfEmpStr = (quartCount + 1)*colqty + 1;
          if quartCount<2 then begin
            qtyOfEmpStr = qtyOfEmpStr - colqty;
          end;
          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          mergeCell[qtyMergeCell] = mergeCell[qtyMergeCell] & ":" & GetStringCellNum(colnum-1,rownum);
          qtyMergeCell = qtyMergeCell + 1;
          style = 17;
          qtyOfEmpStr = 1;
          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
        EndRow(sheetnum,fileToSave,rownum);
        colnum = 5;
        BeginRow(sheetnum,fileToSave,rownum,0,4);
          style = 12;
          qtyOfEmpStr = 1;
          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          style = 13;
          qtyOfEmpStr = (quartCount + 1)*colqty + 1;
          if quartCount<2 then begin
            qtyOfEmpStr = qtyOfEmpStr - colqty;
          end;
          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          style = 17;
          qtyOfEmpStr = 1;
          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
        EndRow(sheetnum,fileToSave,rownum);
        BeginRow(sheetnum,fileToSave,rownum,0,8);
        EndRow(sheetnum,fileToSave,rownum);
        colnum = 5;
        BeginRow(sheetnum,fileToSave,rownum,0,blankval);
          for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
            style = 65;
            if nonblank(RepSpec.f4) then begin
              StringCell(sheetnum,fileToSave,colnum,rownum,style,MonthName(RepSpec.sStartDate),SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            end else begin
              StringCell(sheetnum,fileToSave,colnum,rownum,style,QuartalIntToStr(quartToPrint[Qi]),SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            end;
            style = 66;
            if (RepSpec.flags[29]==1) then begin
              for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                StringCell(sheetnum,fileToSave,colnum,rownum,style,"Fact - " & CompNamesVect[CompArray[CAi]],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              end;
              style = 75;
              StringCell(sheetnum,fileToSave,colnum,rownum,style,"Fact -  ALL COMPANIES",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            end else begin
              StringCell(sheetnum,fileToSave,colnum,rownum,style,"Fact",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            end;
          end;
          if quartCount>1 then begin
            style = 67;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Gr.Total",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            style = 68;
            if (RepSpec.flags[29]==1) then begin
              for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                StringCell(sheetnum,fileToSave,colnum,rownum,style,"Gr.Tot-F - " & CompNamesVect[CompArray[CAi]],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              end;
              style = 77;
              StringCell(sheetnum,fileToSave,colnum,rownum,style,"Gr.Tot-F -  ALL COMPANIES",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            end else begin
              StringCell(sheetnum,fileToSave,colnum,rownum,style,"Gr.Tot-F",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            end;
          end;
          style = 63;
          StringCell(sheetnum,fileToSave,colnum,rownum,style,"Delta,$",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
          style = 64;
          StringCell(sheetnum,fileToSave,colnum,rownum,style,"%",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
          style = 36;
          qtyOfEmpStr = 1;
          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
        EndRow(sheetnum,fileToSave,rownum);
        BeginRow(sheetnum,fileToSave,rownum,0,8);
        EndRow(sheetnum,fileToSave,rownum);
        for (i=0;i<ArtArrayWithGroups.length;i=i+1) begin
          if combExist[ArtArrayWithGroups[i]] then begin
            m = 1;
            while !combExist[ArtArrayWithGroups[i+m]] and (m+i<ArtArrayWithGroups.length) begin
              m = m + 1;
            end;
            INr.Objects = ArtArrayWithGroups[i+m];
            if ReadfirstKey("Objects",INr,1,true) then begin
              ITr.Code = INr.Group;
              ReadFirstMain(ITr,1,true);
              nextgroup = ITr.Code;
            end else begin
              nextgroup = ArtArrayWithGroups[i+m];
            end;
            INr.Objects = ArtArrayWithGroups[i];
            ReadfirstKey("Objects",INr,1,true);
            if ReadfirstKey("Objects",INr,1,true) then begin
              ITr.Code = INr.Group;
              ReadFirstMain(ITr,1,true);
              group = ITr.Code;
            end else begin
              ITr.Code = ArtArrayWithGroups[i];
              ReadFirstMain(ITr,1,true);
              group = ITr.Code;
            end;
            if ArtArrayWithGroups[i]==group then begin
              colnum = 1;
              BeginRow(sheetnum,fileToSave,rownum,0,blankval);
                style = 7;
                StringCell(sheetnum,fileToSave,colnum,rownum,style,StrReplace(group,"_16","000"),SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                qtyOfEmpStr = 1;
                EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                style = 8;
                StringCell(sheetnum,fileToSave,colnum,rownum,style,ITr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                colnum = colnum + 1;
                totbud = 0;
                totfact = 0;
                for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
                  style = 25;
                  bud = QuartVect[quartToPrint[Qi] & ";" & group & ";T"];
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,bud);
                  totbud = totbud + bud;
                  style = 33;
                  if (RepSpec.flags[29]==1) then begin
                    for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                      fact = QuartVect[quartToPrint[Qi] & "F;" & group & ";T" & ";" & CompArray[CAi]];
                      NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                      totfactv[CompArray[CAi]] = totfactv[CompArray[CAi]] + fact;
                    end;
                    style = 74;
                  end;
                  fact = QuartVect[quartToPrint[Qi] & "F;" & group & ";T"];
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                  totfact = totfact + fact;
                end;
                if quartCount>1 then begin
                  style = 26;
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,totbud);
                  style = 35;
                  if (RepSpec.flags[29]==1) then begin
                    for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                      NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfactv[CompArray[CAi]]);
                      totfactv[CompArray[CAi]] = 0;
                    end;
                    style = 78;
                  end;
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact);
                end;
                style = 28;
                NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact - totbud);
                style = 30;
                if (totbud == 0) then begin
                  qtyOfEmpStr = 1;
                  EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                end else begin
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,100*(totfact - totbud)/totbud);
                end;
                style = 36;
                qtyOfEmpStr = 1;
                EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
              EndRow(sheetnum,fileToSave,rownum);
            end else begin
              colnum = 1;
              BeginRow(sheetnum,fileToSave,rownum,RepSpec.flags[5],blankval);
                style = 5;
                StringCell(sheetnum,fileToSave,colnum,rownum,style,ArtArrayWithGroups[i],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                qtyOfEmpStr = 1;
                EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                Objr.Code = ArtArrayWithGroups[i];
                readfirstmain(Objr,1,true);
                style = 6;
                StringCell(sheetnum,fileToSave,colnum,rownum,style,Objr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                colnum = colnum + 1;
                totbud = 0;
                totfact = 0;
                for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
                  style = 32;
                  bud = QuartVect[quartToPrint[Qi] & ";" & ArtArrayWithGroups[i] & ";T"];
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,bud);
                  totbud = totbud + bud;
                  style = 34;
                  if (RepSpec.flags[29]==1) then begin
                    for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                      fact = QuartVect[quartToPrint[Qi] & "F;" & ArtArrayWithGroups[i] & ";T" & ";" & CompArray[CAi]];
                      NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                      totfactv[CompArray[CAi]] = totfactv[CompArray[CAi]] + fact;
                    end;
                    style = 76;
                  end;
                  fact = QuartVect[quartToPrint[Qi] & "F;" & ArtArrayWithGroups[i] & ";T"];
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                  totfact = totfact + fact;
                end;
                if quartCount>1 then begin
                  style = 57;
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,totbud);
                  style = 58;
                  if (RepSpec.flags[29]==1) then begin
                    for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                      NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfactv[CompArray[CAi]]);
                      totfactv[CompArray[CAi]] = 0;
                    end;
                    style = 79;
                  end;
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact);
                end;
                style = 29;
                NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact - totbud);
                style = 31;
                if (totbud == 0) then begin
                  qtyOfEmpStr = 1;
                  EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                end else begin
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,100*(totfact - totbud)/totbud);
                end;
                style = 36;
                qtyOfEmpStr = 1;
                EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
              EndRow(sheetnum,fileToSave,rownum);
              ExtPrinted = false;
              for (j=0;j<ExtArr.length;j=j+1) begin
                if (blank(ExtArr[j]) and ExtPrinted) or nonblank(ExtArr[j]) then begin
                  if combExist[ArtArrayWithGroups[i] & ":" & ExtArr[j]] then begin
                    ArtExtNonBlank = false;
                    for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
                      if QuartVect[quartToPrint[Qi] & ";" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ";T"]!=0 or QuartVect[quartToPrint[Qi] & "F;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ";T"]!=0 then begin
                        ArtExtNonBlank = true;
                      end;
                    end;
                    if ArtExtNonBlank then begin
                      ExtPrinted = true;
                      colnum = 2;
                      BeginRow(sheetnum,fileToSave,rownum,RepSpec.flags[5]*2,blankval);
                        style = 45;
                        StringCell(sheetnum,fileToSave,colnum,rownum,style,ExtArr[j],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                        Objr.Code = ExtArr[j];
                        if ExtArr[j]=="" then begin
                          Objr.Code = ArtArrayWithGroups[i];
                        end;
                        readfirstmain(Objr,1,true);
                        style = 46;
                        StringCell(sheetnum,fileToSave,colnum,rownum,style,Objr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                        style = 43;
                        qtyOfEmpStr = 1;
                        EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                        totbud = 0;
                        totfact = 0;
                        for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
                          style = 47;
                          bud = QuartVect[quartToPrint[Qi] & ";" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ";T"];
                          NumericCell(sheetnum,fileToSave,colnum,rownum,style,bud);
                          totbud = totbud + bud;
                          style = 48;
                          if (RepSpec.flags[29]==1) then begin
                            for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                              fact = QuartVect[quartToPrint[Qi] & "F;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ";T" & ";" & CompArray[CAi]];
                              NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                              totfactv[CompArray[CAi]] = totfactv[CompArray[CAi]] + fact;
                            end;
                            style = 80;
                          end;
                          fact = QuartVect[quartToPrint[Qi] & "F;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ";T"];
                          NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                          totfact = totfact + fact;
                        end;
                        if quartCount>1 then begin
                          style = 59;
                          NumericCell(sheetnum,fileToSave,colnum,rownum,style,totbud);
                          style = 60;
                          if (RepSpec.flags[29]==1) then begin
                            for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                              NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfactv[CompArray[CAi]]);
                              totfactv[CompArray[CAi]] = 0;
                            end;
                            style = 81;
                          end;
                          NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact);
                        end;
                        style = 22;
                        NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact - totbud);
                        style = 21;
                        if (totbud == 0) then begin
                          qtyOfEmpStr = 1;
                          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                        end else begin
                          NumericCell(sheetnum,fileToSave,colnum,rownum,style,100*(totfact - totbud)/totbud);
                        end;
                        style = 36;
                        qtyOfEmpStr = 1;
                        EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                      EndRow(sheetnum,fileToSave,rownum);
                      
                      for (jj=0;jj<SuppArr.length;jj=jj+1) begin// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 25 September 2018 09:59:25                	
												if (nonblank(SuppArr[jj])) then begin
													if combExist[ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj]] then begin
														ArtExtNonBlank = false;
														for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
															if QuartVect[quartToPrint[Qi] & "S;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj] & ";T"]!=0 or QuartVect[quartToPrint[Qi] & "FS;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj] & ";T"]!=0 then begin
																ArtExtNonBlank = true;
															end;
														end;
														if ArtExtNonBlank then begin
															ExtPrinted = true;
															colnum = 2;
															BeginRow(sheetnum,fileToSave,rownum,3,blankval);
																style = 82;
																StringCell(sheetnum,fileToSave,colnum,rownum,style,SuppArr[jj],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
																Objr.Code = SuppArr[jj];
																readfirstmain(Objr,1,true);
																style = 46;
																StringCell(sheetnum,fileToSave,colnum,rownum,style,Objr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
																style = 43;
																qtyOfEmpStr = 1;
																EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
																totbud = 0;
																totfact = 0;
																for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
																	style = 47;
																	bud = QuartVect[quartToPrint[Qi] & "S;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj] & ";T"];
																	NumericCell(sheetnum,fileToSave,colnum,rownum,style,bud);
																	totbud = totbud + bud;
																	style = 48;
																	if (RepSpec.flags[29]==1) then begin
																		for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
																			fact = QuartVect[quartToPrint[Qi] & "FS;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj] & ";T" & ";" & CompArray[CAi]];
																			NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
																			totfactv[CompArray[CAi]] = totfactv[CompArray[CAi]] + fact;
																		end;
																		style = 80;
																	end;
																	fact = QuartVect[quartToPrint[Qi] & "FS;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj] & ";T"];
																	NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
																	totfact = totfact + fact;
																end;
																if quartCount>1 then begin
																	style = 59;
																	NumericCell(sheetnum,fileToSave,colnum,rownum,style,totbud);
																	style = 60;
																	if (RepSpec.flags[29]==1) then begin
																		for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
																			NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfactv[CompArray[CAi]]);
																			totfactv[CompArray[CAi]] = 0;
																		end;
																		style = 81;
																	end;
																	NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact);
																end;
																style = 22;
																NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact - totbud);
																style = 21;
																if (totbud == 0) then begin
																	qtyOfEmpStr = 1;
																	EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
																end else begin
																	NumericCell(sheetnum,fileToSave,colnum,rownum,style,100*(totfact - totbud)/totbud);
																end;
																style = 36;
																qtyOfEmpStr = 1;
																EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
															EndRow(sheetnum,fileToSave,rownum);
														end;
													end;
												end;
											end;
                    end;
                  end;
                end;
              end;
              if ArtArrayWithGroups[i+m]==nextgroup or blank(ArtArrayWithGroups[i+m]) then begin
                colnum = 5;
                BeginRow(sheetnum,fileToSave,rownum,0,blankval);
                  style = 37;
                  qtyOfEmpStr = (quartCount + 1)*colqty + 2;
                  if quartCount<2 then begin
                    qtyOfEmpStr = qtyOfEmpStr - colqty;
                  end;
                  EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                EndRow(sheetnum,fileToSave,rownum);
              end;
            end;
          end;
        end;
        colnum = 1;
        BeginRow(sheetnum,fileToSave,rownum,0,blankval);
          style = 9;
          qtyOfEmpStr = 2;
          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOTAL COST :",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
          qtyOfEmpStr = 1;
          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          totbud = 0;
          totfact = 0;
          for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
            style = 25;
            bud = QuartVect[quartToPrint[Qi] & ";T;T"];
            NumericCell(sheetnum,fileToSave,colnum,rownum,style,bud);
            totbud = totbud + bud;
            style = 33;
            if (RepSpec.flags[29]==1) then begin
              for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                fact = QuartVect[quartToPrint[Qi] & "F;T;T" & ";" & CompArray[CAi]];
                NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                totfactv[CompArray[CAi]] = totfactv[CompArray[CAi]] + fact;
              end;
              style = 74;
            end;
            fact = QuartVect[quartToPrint[Qi] & "F;T;T"];
            NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
            totfact = totfact + fact;
          end;
          if quartCount>1 then begin
            style = 26;
            NumericCell(sheetnum,fileToSave,colnum,rownum,style,totbud);
            style = 35;
            if (RepSpec.flags[29]==1) then begin
              for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfactv[CompArray[CAi]]);
                totfactv[CompArray[CAi]] = 0;
              end;
              style = 78;
            end;
            NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact);
            
            // Edit Start ---------------------------------------------- Edit Start
	//Thursday, 6 September 2018 08:59:08
	
						style = 28;
						NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact-totbud);
						style = 30;
						if (totbud == 0) then begin
							qtyOfEmpStr = 1;
							EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
						end else begin
							NumericCell(sheetnum,fileToSave,colnum,rownum,style,(totfact-totbud)/totbud*100);
						end;
              
	// Edit End ---------------------------------------------- Edit End
            
          end;
        EndRow(sheetnum,fileToSave,rownum);
      end;
    EndSheetData(sheetnum,fileToSave);
		MergeCells(sheetnum,fileToSave,mergeCell,qtyMergeCell);
		EndSheet(sheetnum,fileToSave,0);
    
    if blank(RepSpec.f1) then begin
      cleararray(sheetColls);
      cleararray(sheetCollsOutLvl);
      colnum = 0;
      sheetColls[colnum] = 2.140625;
      colnum = colnum + 1;
      sheetColls[colnum] = 5.85546871;
      colnum = colnum + 1;
      sheetColls[colnum] = 21.28515625;
      colnum = colnum + 1;
      sheetColls[colnum] = 3.42578125;
      colnum = colnum + 1;
      for (i=0;i<quartCount;i=i+1) begin
				sheetColls[colnum] = 9.7109371;
				colnum = colnum + 1;
        if (RepSpec.flags[29]==1) then begin
          for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
            sheetColls[colnum] = 9.7109371;
            if quartCount>1 then begin
              sheetCollsOutLvl[colnum] = RepSpec.flags[5]*2;
            end;
            colnum = colnum + 1;
          end;
        end;
        sheetColls[colnum] = 9.7109371;
        if quartCount>1 then begin
          sheetCollsOutLvl[colnum] = RepSpec.flags[5];
        end;
        colnum = colnum + 1;
			end;
      if quartCount>1 then begin
        sheetColls[colnum] = 10.5703125;
        colnum = colnum + 1;
        if (RepSpec.flags[29]==1) then begin
          for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
            sheetColls[colnum] = 10.5703125;
            if quartCount>1 then begin
              sheetCollsOutLvl[colnum] = RepSpec.flags[5]*2;
            end;
            colnum = colnum + 1;
          end;
        end;
        sheetColls[colnum] = 10.5703125;
        sheetCollsOutLvl[colnum] = RepSpec.flags[5];
        colnum = colnum + 1;
      end;
			sheetColls[colnum] = 10.5703125;
      if quartCount>1 then begin
        sheetCollsOutLvl[colnum] = RepSpec.flags[5];
      end;
			colnum = colnum + 1;
			sheetColls[colnum] = 6.140625;
      if quartCount>1 then begin
        sheetCollsOutLvl[colnum] = RepSpec.flags[5];
      end;
			
      for (PAi=0;PAi<ProjArray2.length;PAi=PAi+1) begin
        sheetnum = sheetnum + 1;
        cleararray(mergeCell);
        qtyMergeCell = 0;
        SetSheetsCols(sheetnum,sheetColls,sheetCollsOutLvl,fileToSave);
        BeginSheetData(sheetnum,fileToSave);
          rownum = 1;
          colnum = 1;
          BeginRow(sheetnum,fileToSave,rownum,0,19.5);
            style = 14;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Project Statistics " & RepSpec.f2,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            qtyOfEmpStr = (quartCount*colqty + colqty + 3) + 2;
            if quartCount<2 then begin
              qtyOfEmpStr = qtyOfEmpStr - colqty;
            end;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          EndRow(sheetnum,fileToSave,rownum);
          rownum = rownum + 1;
          colnum = 1;
          BeginRow(sheetnum,fileToSave,rownum,0,blankval);
            style = 1;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Period",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            style = 2;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,":" & RepSpec.sStartDate & "-" & RepSpec.sEndDate,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
          EndRow(sheetnum,fileToSave,rownum);
          BeginRow(sheetnum,fileToSave,rownum,0,8);
          EndRow(sheetnum,fileToSave,rownum);
          colnum = 1;
          BeginRow(sheetnum,fileToSave,rownum,0,blankval);
            style = 3;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Currency",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            style = 4;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,":USD",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
          EndRow(sheetnum,fileToSave,rownum);
          rownum = rownum + 1;
          colnum = 5;
          BeginRow(sheetnum,fileToSave,rownum,0,4);
            style = 38;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            style = 39;
            qtyOfEmpStr = (quartCount + 1)*colqty + 1;
            if quartCount<2 then begin
              qtyOfEmpStr = qtyOfEmpStr - colqty;
            end;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            style = 36;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          EndRow(sheetnum,fileToSave,rownum);
          colnum = 5;
          BeginRow(sheetnum,fileToSave,rownum,0,blankval);
            mergeCell[qtyMergeCell] = GetStringCellNum(colnum,rownum);
            if isMotherProjVect[ProjArray2[PAi]] then begin
              style = 49;
            end else begin
              style = 51;
            end;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,StrReplace(ProjArray2[PAi],RepSpec.f2 & ".","") & " - " & ProjNamesVect[ProjArray2[PAi]],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            if isMotherProjVect[ProjArray2[PAi]] then begin
              style = 50;
            end else begin
              style = 52;
            end;
            qtyOfEmpStr = (quartCount + 1)*colqty + 1;
            if quartCount<2 then begin
              qtyOfEmpStr = qtyOfEmpStr - colqty;
            end;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            mergeCell[qtyMergeCell] = mergeCell[qtyMergeCell] & ":" & GetStringCellNum(colnum-1,rownum);
            qtyMergeCell = qtyMergeCell + 1;
            style = 36;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          EndRow(sheetnum,fileToSave,rownum);
          colnum = 5;
          BeginRow(sheetnum,fileToSave,rownum,0,4);
            if isMotherProjVect[ProjArray2[PAi]] then begin
              style = 18;
            end else begin
              style = 15;
            end;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            if isMotherProjVect[ProjArray2[PAi]] then begin
              style = 19;
            end else begin
              style = 16;
            end;
            qtyOfEmpStr = (quartCount + 1)*colqty + 1;
            if quartCount<2 then begin
              qtyOfEmpStr = qtyOfEmpStr - colqty;
            end;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            style = 36;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          EndRow(sheetnum,fileToSave,rownum);
          BeginRow(sheetnum,fileToSave,rownum,0,8);
          EndRow(sheetnum,fileToSave,rownum);
          colnum = 5;
          BeginRow(sheetnum,fileToSave,rownum,0,blankval);
            for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
              style = 61;
              if nonblank(RepSpec.f4) then begin
                StringCell(sheetnum,fileToSave,colnum,rownum,style,MonthName(RepSpec.sStartDate),SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              end else begin
                StringCell(sheetnum,fileToSave,colnum,rownum,style,QuartalIntToStr(quartToPrint[Qi]),SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              end;
              style = 62;
              if (RepSpec.flags[29]==1) then begin
                for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                  StringCell(sheetnum,fileToSave,colnum,rownum,style,"Fact - " & CompNamesVect[CompArray[CAi]],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                end;
                style = 69;
                StringCell(sheetnum,fileToSave,colnum,rownum,style,"Fact -  ALL COMPANIES",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              end else begin
                StringCell(sheetnum,fileToSave,colnum,rownum,style,"Fact",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              end;
            end;
            if quartCount>1 then begin
              style = 65;
              StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOT",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              style = 62;
              if (RepSpec.flags[29]==1) then begin
                for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                  StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOT-Fact - " & CompNamesVect[CompArray[CAi]],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                end;
                style = 69;
                StringCell(sheetnum,fileToSave,colnum,rownum,style,"Tot-Fact - ALL COMPANIES",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              end else begin
                StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOT-Fact",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              end;
            end;
            style = 63;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Delta,$",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            style = 64;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"%",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            style = 36;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          EndRow(sheetnum,fileToSave,rownum);
          BeginRow(sheetnum,fileToSave,rownum,0,8);
          EndRow(sheetnum,fileToSave,rownum);
          for (i=0;i<ArtArrayWithGroups.length;i=i+1) begin
            if combExist[ArtArrayWithGroups[i]] then begin
              m = 1;
              while !combExist[ArtArrayWithGroups[i+m]] and (m+i<ArtArrayWithGroups.length) begin
                m = m + 1;
              end;
              INr.Objects = ArtArrayWithGroups[i+m];
              if ReadfirstKey("Objects",INr,1,true) then begin
                ITr.Code = INr.Group;
                ReadFirstMain(ITr,1,true);
                nextgroup = ITr.Code;
              end else begin
                nextgroup = ArtArrayWithGroups[i+m];
              end;
              INr.Objects = ArtArrayWithGroups[i];
              ReadfirstKey("Objects",INr,1,true);
              if ReadfirstKey("Objects",INr,1,true) then begin
                ITr.Code = INr.Group;
                ReadFirstMain(ITr,1,true);
                group = ITr.Code;
              end else begin
                ITr.Code = ArtArrayWithGroups[i];
                ReadFirstMain(ITr,1,true);
                group = ITr.Code;
              end;
              if ArtArrayWithGroups[i]==group then begin
                colnum = 1;
                BeginRow(sheetnum,fileToSave,rownum,0,blankval);
                  style = 7;
                  StringCell(sheetnum,fileToSave,colnum,rownum,style,StrReplace(group,"_16","000"),SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                  qtyOfEmpStr = 1;
                  EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                  style = 8;
                  StringCell(sheetnum,fileToSave,colnum,rownum,style,ITr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                  colnum = colnum + 1;
                  totbud = 0;
                  totfact = 0;
                  for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
                    style = 24;
                    bud = QuartVect[quartToPrint[Qi] & ";" & group & ";" & ProjArray2[PAi]];
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,bud);
                    totbud = totbud + bud;
                    style = 40;
                    if (RepSpec.flags[29]==1) then begin
                      for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                        fact = QuartVect[quartToPrint[Qi] & "F;" & group & ";" & ProjArray2[PAi] & ";" & CompArray[CAi]];
                        NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                        totfactv[CompArray[CAi]] = totfactv[CompArray[CAi]] + fact;
                      end;
                      style = 70;
                    end;
                    fact = QuartVect[quartToPrint[Qi] & "F;" & group & ";" & ProjArray2[PAi]];
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                    totfact = totfact + fact;
                  end;
                  if quartCount>1 then begin
                    style = 24;
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,totbud);
                    style = 40;
                    if (RepSpec.flags[29]==1) then begin
                      for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                        NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfactv[CompArray[CAi]]);
                        totfactv[CompArray[CAi]] = 0;
                      end;
                      style = 70;
                    end;
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact);
                  end;
                  style = 28;
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact - totbud);
                  style = 30;
                  if (totbud == 0) then begin
                    qtyOfEmpStr = 1;
                    EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                  end else begin
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,100*(totfact - totbud)/totbud);
                  end;
                  style = 36;
                  qtyOfEmpStr = 1;
                  EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                EndRow(sheetnum,fileToSave,rownum);
              end else begin
                colnum = 1;
                BeginRow(sheetnum,fileToSave,rownum,RepSpec.flags[5],blankval);
                  style = 5;
                  StringCell(sheetnum,fileToSave,colnum,rownum,style,ArtArrayWithGroups[i],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                  qtyOfEmpStr = 1;
                  EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                  Objr.Code = ArtArrayWithGroups[i];
                  readfirstmain(Objr,1,true);
                  style = 6;
                  StringCell(sheetnum,fileToSave,colnum,rownum,style,Objr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                  colnum = colnum + 1;
                  totbud = 0;
                  totfact = 0;
                  for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
                    style = 27;
                    bud = QuartVect[quartToPrint[Qi] & ";" & ArtArrayWithGroups[i] & ";" & ProjArray2[PAi]];
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,bud);
                    totbud = totbud + bud;
                    style = 41;
                    if (RepSpec.flags[29]==1) then begin
                      for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                        fact = QuartVect[quartToPrint[Qi] & "F;" & ArtArrayWithGroups[i] & ";" & ProjArray2[PAi] & ";" & CompArray[CAi]];
                        NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                        totfactv[CompArray[CAi]] = totfactv[CompArray[CAi]] + fact;
                      end;
                      style = 71;
                    end;
                    fact = QuartVect[quartToPrint[Qi] & "F;" & ArtArrayWithGroups[i] & ";" & ProjArray2[PAi]];
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                    totfact = totfact + fact;
                  end;
                  if quartCount>1 then begin
                    style = 27;
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,totbud);
                    style = 41;
                    if (RepSpec.flags[29]==1) then begin
                      for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                        NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfactv[CompArray[CAi]]);
                        totfactv[CompArray[CAi]] = 0;
                      end;
                      style = 71;
                    end;
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact);
                  end;
                  style = 29;
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact - totbud);
                  style = 31;
                  if (totbud == 0) then begin
                    qtyOfEmpStr = 1;
                    EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                  end else begin
                    NumericCell(sheetnum,fileToSave,colnum,rownum,style,100*(totfact - totbud)/totbud);
                  end;
                  style = 36;
                  qtyOfEmpStr = 1;
                  EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                EndRow(sheetnum,fileToSave,rownum);
                ExtPrinted = false;
                for (j=0;j<ExtArr.length;j=j+1) begin
                  if (blank(ExtArr[j]) and ExtPrinted) or nonblank(ExtArr[j]) then begin
                    if combExist[ArtArrayWithGroups[i] & ":" & ExtArr[j]] then begin
                      ArtExtNonBlank = false;
                      for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
                        if QuartVect[quartToPrint[Qi] & ";" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ";" & ProjArray2[PAi]]!=0 or QuartVect[quartToPrint[Qi] & "F;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ";" & ProjArray2[PAi]]!=0 then begin
                          ArtExtNonBlank = true;
                        end;
                      end;
                      if ArtExtNonBlank then begin
                        ExtPrinted = true;
                        colnum = 2;
                        BeginRow(sheetnum,fileToSave,rownum,RepSpec.flags[5]*2,blankval);
                          style = 45;
                          StringCell(sheetnum,fileToSave,colnum,rownum,style,ExtArr[j],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                          Objr.Code = ExtArr[j];
                          if ExtArr[j]=="" then begin
                            Objr.Code = ArtArrayWithGroups[i];
                          end;
                          readfirstmain(Objr,1,true);
                          style = 46;
                          StringCell(sheetnum,fileToSave,colnum,rownum,style,Objr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
                          style = 43;
                          qtyOfEmpStr = 1;
                          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                          totbud = 0;
                          totfact = 0;
                          for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
                            style = 42;
                            bud = QuartVect[quartToPrint[Qi] & ";" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ";" & ProjArray2[PAi]];
                            NumericCell(sheetnum,fileToSave,colnum,rownum,style,bud);
                            totbud = totbud + bud;
                            style = 20;
                            if (RepSpec.flags[29]==1) then begin
                              for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                                fact = QuartVect[quartToPrint[Qi] & "F;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ";" & ProjArray2[PAi] & ";" & CompArray[CAi]];
                                NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                                totfactv[CompArray[CAi]] = totfactv[CompArray[CAi]] + fact;
                              end;
                              style = 72;
                            end;
                            fact = QuartVect[quartToPrint[Qi] & "F;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ";" & ProjArray2[PAi]];
                            NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                            totfact = totfact + fact;
                          end;
                          if quartCount>1 then begin
                            style = 42;
                            NumericCell(sheetnum,fileToSave,colnum,rownum,style,totbud);
                            style = 20;
                            if (RepSpec.flags[29]==1) then begin
                              for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                                NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfactv[CompArray[CAi]]);
                                totfactv[CompArray[CAi]] = 0;
                              end;
                              style = 72;
                            end;
                            NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact);
                          end;
                          style = 22;
                          NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact - totbud);
                          style = 21;
                          if (totbud == 0) then begin
                            qtyOfEmpStr = 1;
                            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                          end else begin
                            NumericCell(sheetnum,fileToSave,colnum,rownum,style,100*(totfact - totbud)/totbud);
                          end;
                          style = 36;
                          qtyOfEmpStr = 1;
                          EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                        EndRow(sheetnum,fileToSave,rownum);
                        
                        
                        for(jj=0;jj<SuppArr.length;jj=jj+1)begin// Edit ************************** BPI Ukraine - KramarAlexandr - 02, 25 09 2018 y. о 17:38:21
													if (nonblank(SuppArr[jj])) then begin
														if combExist[ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj]] then begin
															ArtExtNonBlank = false;
															for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
																if QuartVect[quartToPrint[Qi] & "S;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj] & ";" & ProjArray2[PAi]]!=0 or QuartVect[quartToPrint[Qi] & "FS;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj] & ";" & ProjArray2[PAi]]!=0 then begin
																	ArtExtNonBlank = true;
																end;
															end;
															if ArtExtNonBlank then begin
																ExtPrinted = true;
																colnum = 2;
																BeginRow(sheetnum,fileToSave,rownum,3,blankval);
																	style = 82;
																	StringCell(sheetnum,fileToSave,colnum,rownum,style,SuppArr[jj],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
																	Objr.Code = SuppArr[jj];
																	readfirstmain(Objr,1,true);
																	style = 46;
																	StringCell(sheetnum,fileToSave,colnum,rownum,style,Objr.Comment,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
																	style = 43;
																	qtyOfEmpStr = 1;
																	EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
																	totbud = 0;
																	totfact = 0;
																	for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
																		style = 42;
																		bud = QuartVect[quartToPrint[Qi] & "S;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj] & ";" & ProjArray2[PAi]];
																		NumericCell(sheetnum,fileToSave,colnum,rownum,style,bud);
																		totbud = totbud + bud;
																		style = 20;
																		if (RepSpec.flags[29]==1) then begin
																			for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
																				fact = QuartVect[quartToPrint[Qi] & "FS;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj] & ";" & ProjArray2[PAi] & ";" & CompArray[CAi]];
																				NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
																				totfactv[CompArray[CAi]] = totfactv[CompArray[CAi]] + fact;
																			end;
																			style = 72;
																		end;
																		fact = QuartVect[quartToPrint[Qi] & "FS;" & ArtArrayWithGroups[i] & ":" & ExtArr[j] & ":::" & SuppArr[jj] & ";" & ProjArray2[PAi]];
																		NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
																		totfact = totfact + fact;
																	end;
																	if quartCount>1 then begin
																		style = 42;
																		NumericCell(sheetnum,fileToSave,colnum,rownum,style,totbud);
																		style = 20;
																		if (RepSpec.flags[29]==1) then begin
																			for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
																				NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfactv[CompArray[CAi]]);
																				totfactv[CompArray[CAi]] = 0;
																			end;
																			style = 72;
																		end;
																		NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact);
																	end;
																	style = 22;
																	NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact - totbud);
																	style = 21;
																	if (totbud == 0) then begin
																		qtyOfEmpStr = 1;
																		EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
																	end else begin
																		NumericCell(sheetnum,fileToSave,colnum,rownum,style,100*(totfact - totbud)/totbud);
																	end;
																	style = 36;
																	qtyOfEmpStr = 1;
																	EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
																EndRow(sheetnum,fileToSave,rownum);
															end;
														end;
													end;
                        end;
                        
                        
                        
                      end;
                    end;
                  end;
                end;
                if ArtArrayWithGroups[i+m]==nextgroup or blank(ArtArrayWithGroups[i+m]) then begin
                  colnum = 5;
                  BeginRow(sheetnum,fileToSave,rownum,0,blankval);
                    style = 37;
                    qtyOfEmpStr = (quartCount + 1)*colqty + 2;
                    if quartCount<2 then begin
                      qtyOfEmpStr = qtyOfEmpStr - colqty;
                    end;
                    EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
                  EndRow(sheetnum,fileToSave,rownum);
                end;
              end;
            end;
          end;
          colnum = 1;
          BeginRow(sheetnum,fileToSave,rownum,0,blankval);
            style = 9;
            qtyOfEmpStr = 2;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"TOTAL COST :",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            totbud = 0;
            totfact = 0;
            for (Qi=0;Qi<quartCount;Qi=Qi+1) begin
              style = 25;
              bud = QuartVect[quartToPrint[Qi] & ";T;" & ProjArray2[PAi]];
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,bud);
              totbud = totbud + bud;
              style = 44;
              if (RepSpec.flags[29]==1) then begin
                for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                  fact = QuartVect[quartToPrint[Qi] & "F;T;" & ProjArray2[PAi] & ";" & CompArray[CAi]];
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
                  totfactv[CompArray[CAi]] = totfactv[CompArray[CAi]] + fact;
                end;
                style = 73;
              end;
              fact = QuartVect[quartToPrint[Qi] & "F;T;" & ProjArray2[PAi]];
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,fact);
              totfact = totfact + fact;
            end;
            if quartCount>1 then begin
              style = 25;
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,totbud);
              style = 33;
              if (RepSpec.flags[29]==1) then begin
                for (CAi=0;CAi<CompArray.length;CAi=CAi+1) begin
                  NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfactv[CompArray[CAi]]);
                  totfactv[CompArray[CAi]] = 0;
                end;
                style = 74;
              end;
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact);
              
              // Edit Start ---------------------------------------------- Edit Start
	//Thursday, 6 September 2018 08:59:08
	
              style = 28;
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,totfact-totbud);
              style = 30;
              if (totbud == 0) then begin
								qtyOfEmpStr = 1;
								EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
							end else begin
								NumericCell(sheetnum,fileToSave,colnum,rownum,style,(totfact-totbud)/totbud*100);
							end;
              
	// Edit End ---------------------------------------------- Edit End
              
            end;
          EndRow(sheetnum,fileToSave,rownum);

        EndSheetData(sheetnum,fileToSave);
        MergeCells(sheetnum,fileToSave,mergeCell,qtyMergeCell);
        EndSheet(sheetnum,fileToSave,0);
      end;
    end;
		FillSharedStrings(fileToSave,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings,mas);
		ConvertToXLSX(fileToSave);
		MilliSleep(2000);
    fnserv = fileToSave;
    md5str = GetFileMD5(fnserv);
	end;
  RETURN;
END;