remote procedure PrjSumRn(record RcVc,var area,var boolean);
remote function boolean OTCodeMatch(string,string);

global
procedure PrjSumRClassReportDefaults(integer wn)
begin
	record RcVc RepSpec;
	
	GetWindowRecord(wn,RepSpec);
	RepSpec.f2 = "2016";
	//RepSpec.flags[5] = 1;
	PutWindowRecord(wn,RepSpec);
	
	return;
end;

global
function Boolean PrjSumRClassOnOpenWindow(Integer wn)
begin
	record RcVc RepSpec;
	
	GetWindowRecord(wn,RepSpec);
	RepSpec.f2 = "2016";
	//RepSpec.flags[5] = 1;
	PutWindowRecord(wn,RepSpec);

	return;
end;

global
procedure PrjSum2017RClassReportDefaults(integer wn)
begin
	record RcVc RepSpec;
	
	GetWindowRecord(wn,RepSpec);
	RepSpec.f2 = "2017";
	//RepSpec.flags[5] = 1;
	PutWindowRecord(wn,RepSpec);
	
	return;
end;

global
function Boolean PrjSum2017RClassOnOpenWindow(Integer wn)
begin
	record RcVc RepSpec;
	
	GetWindowRecord(wn,RepSpec);
	RepSpec.f2 = "2017";
	//RepSpec.flags[5] = 1;
	PutWindowRecord(wn,RepSpec);

	return;
end;

global
procedure PrjSum2018RClassReportDefaults(integer wn)
begin
	record RcVc RepSpec;
	
	GetWindowRecord(wn,RepSpec);
	RepSpec.f2 = "2018";
	//RepSpec.flags[5] = 1;
	PutWindowRecord(wn,RepSpec);
	
	return;
end;

global
procedure PrjSum2019RClassReportDefaults(integer wn)
begin
	record RcVc RepSpec;
	
	GetWindowRecord(wn,RepSpec);
	RepSpec.f2 = "2019";
	//RepSpec.flags[5] = 1;
	PutWindowRecord(wn,RepSpec);
	
	return;
end;

global
procedure PrjSum2020RClassReportDefaults(integer wn)
begin
	record RcVc RepSpec;
	
	GetWindowRecord(wn,RepSpec);
	RepSpec.f2 = "2020";
	//RepSpec.flags[5] = 1;
	PutWindowRecord(wn,RepSpec);
	
	return;
end;

global
procedure PrjSum2021RClassReportDefaults(integer wn)
begin
	record RcVc RepSpec;
	
	GetWindowRecord(wn,RepSpec);
	RepSpec.f2 = "2021";
	//RepSpec.flags[5] = 1;
	PutWindowRecord(wn,RepSpec);
	
	return;
end;

global
function Boolean PrjSum2018RClassOnOpenWindow(Integer wn)
begin
	record RcVc RepSpec;
	
	GetWindowRecord(wn,RepSpec);
	RepSpec.f2 = "2018";
	//RepSpec.flags[5] = 1;
	PutWindowRecord(wn,RepSpec);

	return;
end;

global
function Boolean PrjSum2019RClassOnOpenWindow(Integer wn)
begin
	record RcVc RepSpec;
	
	GetWindowRecord(wn,RepSpec);
	RepSpec.f2 = "2019";
	//RepSpec.flags[5] = 1;
	PutWindowRecord(wn,RepSpec);

	return;
end;

global
function Boolean PrjSum2020RClassOnOpenWindow(Integer wn)
begin
	record RcVc RepSpec;
	
	GetWindowRecord(wn,RepSpec);
	RepSpec.f2 = "2020";
	//RepSpec.flags[5] = 1;
	PutWindowRecord(wn,RepSpec);

	return;
end;

global
function Boolean PrjSum2021RClassOnOpenWindow(Integer wn)
begin
	record RcVc RepSpec;
	
	GetWindowRecord(wn,RepSpec);
	RepSpec.f2 = "2021";
	//RepSpec.flags[5] = 1;
	PutWindowRecord(wn,RepSpec);

	return;
end;


global
procedure RunPrjSumRn()
begin
	record ObjVc Objr;
	record OTVc OTr;
	string 250 filename,tstr;
	string 10 tmpDate;
	area fileToSave;
	record RcVc RepSpec;
	integer wn;
	boolean PrjFoundf,testf;
	
	testf = true;
	wn = curwindow;
	deselectwindow(wn,true);
	getwindowrecord(wn,RepSpec);
	PrjFoundf = true;
	if (blank(RepSpec.f2)) then begin
		MessageBox(0,"Input Year!");
		testf = false;
	end else begin
		if len(RepSpec.f2)!=4 then  begin
			MessageBox(0,"Incorrect Year!");
			testf = false;
		end;
	end;
	if ((RepSpec.flags[1]==0) and (RepSpec.flags[2]==0) and (RepSpec.flags[3]==0) and (RepSpec.flags[4]==0) and testf) then begin
		MessageBox(0,"Select at least one Quartal!");
		testf = false;
	end;
	if ((((RepSpec.flags[1]==1) and (RepSpec.flags[2]==0) and ((RepSpec.flags[3]==1) or (RepSpec.flags[4]==1))) or (((RepSpec.flags[1]==1) or (RepSpec.flags[2]==1)) and (RepSpec.flags[3]==0) and (RepSpec.flags[4]==1))) and testf) then begin
		MessageBox(0,"Incorrect selection of Quartals!");
		testf = false;
	end;
	if (nonblank(RepSpec.ObjStr) and testf) then begin
		if !OTCodeMatch(RepSpec.ObjStr,"LOCAT") then begin
			testf = false;
			MessageBox(0,"Incorrect Location!");
		end;
	end;
	if testf then begin
		tmpDate = "";
		if (RepSpec.flags[4]==1) then begin
			tmpDate = "1/10/";
		end;
		if (RepSpec.flags[3]==1) then begin
			tmpDate = "1/7/";
		end;
		if (RepSpec.flags[2]==1) then begin
			tmpDate = "1/4/";
		end;
		if (RepSpec.flags[1]==1) then begin
			tmpDate = "1/1/";
		end;
		tmpDate = tmpDate & RepSpec.f2;
		RepSpec.sStartDate = StringToDate(tmpDate);
		
		tmpDate = "";
		if (RepSpec.flags[1]==1) then begin
			tmpDate = "31/3/";
		end;
		if (RepSpec.flags[2]==1) then begin
			tmpDate = "30/6/";
		end;
		if (RepSpec.flags[3]==1) then begin
			tmpDate = "30/9/";
		end;
		if (RepSpec.flags[4]==1) then begin
			tmpDate = "31/12/";
		end;
		tmpDate = tmpDate & RepSpec.f2;
		RepSpec.sEndDate = StringToDate(tmpDate);
		tstr = RepSpec.f1;
		if nonblank(RepSpec.ObjStr) then begin
			tstr = tstr & "-" & RepSpec.ObjStr & "-";
		end;
		tstr = tstr & "Project Summary-" & DateToString(RepSpec.sEndDate,"DD MM YYYY") & "-filled in on " & DateToString(CurrentDate,"DD MM YYYY");
		filename = SaveFileDialog(tstr,"","xlsx");
		if ((filename!=tstr) and nonblank(filename)) then begin
			PrjSumRn(RepSpec,fileToSave,PrjFoundf);
			if (PrjFoundf) then begin
				if(fileexists(filename))then begin
					delete_file(filename);
				end;
				writeareatofile(fileToSave,filename,0);
				CloseWindow(wn);
				MessageBox(0,"Done!");
			end else begin
				MessageBox(0,"PrjSums for specified period not found!");
			end;
		end;
	end;
	return;
end;