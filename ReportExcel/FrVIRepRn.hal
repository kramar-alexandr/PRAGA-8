external function Boolean IsDigit(string);
external procedure ExtractObjWithSeparator(string,string,Boolean,var Integer,var string);


procedure PrintInvoice(record VIVc VIr,var vector boolean invinperiod,record RcVc RepSpec)
begin
	row VIVc VIrw;
	boolean TrHs,testf;
	integer i,rwcnt;
	record ObjVc Objr;
	record OPrsVc OPrsr; 
	record OPVc OPr;
	row OPVc OPrw;
	boolean printed,TrHs1,testf1;
	
	invinperiod[VIr.SerNr] = true;
	//if(VIr.PayDeal>=RepSpec.f1 and VIr.PayDeal<=RepSpec.f2 and dateinrange(VIr.InvDate,RepSpec.d1,RepSpec.d2))then begin
	if(setinset(VIr.PayDeal,RepSpec.f1) and dateinrange(VIr.InvDate,RepSpec.d1,RepSpec.d2))then begin
		invinperiod[VIr.SerNr] = true;
		rwcnt = matrowcnt(VIr);
		for(i=0;i<rwcnt;i=i+1)begin
			matrowget(VIr,i,VIrw);
			if(VIrw.stp==1 and nonblank(VIrw.Supp))then begin
				startformat(15);
					outstring(0,"DblVIVc",VIr.SerNr,false);
					outstring(30,0,VIr.InvDate,false);
					outstring(30,0,"",false);
					outstring(30,0,"",false);
					outstring(75,0,VIrw.Supp,false);
					Objr.Code = VIrw.Supp;
					readfirstmain(Objr,1,true);
					outstring(100,0,Objr.Comment,false);
					outstring(150,0,VIrw.Prj,false);
					outstring(200,0,VIrw.Exp,false);
					outstring(250,0,VIrw.Comment,false);
					outstring(300,0,VIrw.Found,false);
					outstring(350,0,VIrw.Loc,false);
					outstring(400,0,VIrw.Sum,false);
					outstring(450,0,VIr.CurncyCode,false);
				endformat;
			end;
		end;
	end else begin
		resetloop(OPrsr);
		printed = false;
		OPrsr.VINr = VIr.SerNr;
		OPrsr.TransType = 1;
		TrHs1 = true;
		while(loopkey("VIKey",OPrsr,2,TrHs1))begin
			testf1 = true;
			if(OPrsr.VINr!=VIr.SerNr)then begin TrHs1 = false; testf1 = false; end;
			if(OPrsr.TransType!=1)then begin TrHs1 = false; testf1 = false; end;
			if(OPrsr.TransDate<RepSpec.d1)then begin testf1 = false; end;
			if(OPrsr.TransDate>RepSpec.d2)then begin testf1 = false; end;

			if(testf1)then begin
				if(OPrsr.TransNr>0)then begin
					OPr.SerNr = OPrsr.TransNr;
					if(readfirstmain(OPr,1,true))then begin
						//if(OPr.PayMode>=RepSpec.f1 and OPr.PayMode<=RepSpec.f2 and OPr.DoneFlag==1 and OPr.Invalid==0)then begin
						if(setinset(OPr.PayMode,RepSpec.f1) and OPr.DoneFlag==1 and OPr.Invalid==0)then begin
							invinperiod[VIr.SerNr] = true;
							if(printed==false)then begin
								printed = true;
								rwcnt = matrowcnt(VIr);
								for(i=0;i<rwcnt;i=i+1)begin
									matrowget(VIr,i,VIrw);
									if(VIrw.stp==1 and nonblank(VIrw.Supp))then begin
										if(dateinrange(VIr.InvDate,RepSpec.d1,RepSpec.d2))then begin
											startformat(15);
												outstring(0,"DblVIVc",VIr.SerNr,false);
												outstring(30,0,VIr.InvDate,false);
												outstring(30,0,OPrsr.TransDate,false);
												outstring(30,0,OPr.SerNr,false);
												outstring(75,0,VIrw.Supp,false);
												Objr.Code = VIrw.Supp;
												readfirstmain(Objr,1,true);
												outstring(100,0,Objr.Comment,false);
												outstring(150,0,VIrw.Prj,false);
												outstring(200,0,VIrw.Exp,false);
												outstring(250,0,VIrw.Comment,false);
												outstring(300,0,VIrw.Found,false);
												outstring(350,0,VIrw.Loc,false);
												outstring(400,0,VIrw.Sum,false);
												outstring(450,0,VIr.CurncyCode,false);
											endformat;
										end;
									end;
								end;
							end;
					
							/*rwcnt = matrowcnt(OPr);
							for(i=0;i<rwcnt;i=i+1)begin
								matrowget(OPr,i,OPrw);
								if(OPrw.VISerNr==VIr.SerNr)then begin
									startformat(15);
										//outstring(0,0,OPrw.BankVal,false);
										//outstring(0,0,OPrw.RecCurncy,false);
										outstring(0,0,"",false);
										outstring(0,0,"Payment for",false);
										outstring(0,0,"invoice nr.",false);
										outstring(30,0,VIr.SerNr,false);
										outstring(75,0,"Payment nr.",false);
										outstring(100,0,OPr.SerNr,false);
										outstring(110,0,"Payment Date",false);
										outstring(120,0,OPr.TransDate,false);
										outstring(150,0,"Bank Curncy",false);
										outstring(200,0,OPrw.BankCurncy,false);
										outstring(250,0,"Bank Sum",false);
										outstring(300,0,OPrw.BankVal,false);
										outstring(150,0,"Invoice Curncy",false);
										outstring(200,0,OPrw.RecCurncy,false);
										outstring(250,0,"Invoice Sum",false);
										outstring(300,0,OPrw.RecVal,false);
									endformat;
								end;
							end;*/
						end;
					end;
				end;
			end;
		end;
	end;

return;
end;


global procedure FrVIRepRn(record RcVc RepSpec)
begin
	record VIVc VIr;
	row VIVc VIrw;
	boolean TrHs,testf;
	integer i,rwcnt;
	record ObjVc Objr;
	record OPrsVc OPrsr; 
	record OPVc OPr;
	row OPVc OPrw;
	boolean printed,TrHs1,testf1;
	vector boolean invinperiod;
	
	startreportnoheaderjob("Invoices for Excel 2021");
	
	RepSpec.d1 = stringtodate("1/1/2021");
	RepSpec.d2 = stringtodate("31/3/2021");
	
	RepSpec.f1 = "G1,G2,G3,G4,G5,G6,G7,G8,G9,L1,L2,L3,L4,L5,L6,L7,L8,L9,K1,K2,K3,K4,K5,K6,K7,K8,K9";
	//RepSpec.f2 = "G9";
	
	startformat(15);
		//outstring(0,0,"Sum in current period",false);
		//outstring(0,0,"Currency",false);
		outstring(0,0,"Inv No",false);
		outstring(30,0,"Inv. Date",false);
		outstring(30,0,"Payment Date",false);
		outstring(30,0,"Payment Number",false);
		outstring(75,0,"Supplier",false);
		outstring(100,0,"Supp Name",false);
		outstring(150,0,"Project",false);
		outstring(200,0,"Expences",false);
		outstring(250,0,"Expences Name",false);
		outstring(300,0,"Foundation",false);
		outstring(350,0,"Location",false);
		outstring(400,0,"Summ",false);
		outstring(450,0,"Currency",false);
		outstring(450,0,"",false);
	endformat;
	
	TrHs = true;
	VIr.InvDate = RepSpec.d1;
	while(loopkey("InvDate",VIr,1,TrHs))begin
		testf = true;
		if(VIr.InvDate>RepSpec.d2)then begin TrHs = false; testf = false; end;
		if(VIr.Invalid>0)then begin testf = false; end;
		if(VIr.OKFlag==0)then begin testf = false; end;
		
		if(testf)then begin
			PrintInvoice(VIr,invinperiod,RepSpec);
		end;
	end;
	
	printed = true;
	
	resetloop(OPr);
	TrHs = true;
	OPr.TransDate = RepSpec.d1;
	while(loopkey("TransDate",OPr,1,TrHs))begin
		testf = true;
		if(OPr.TransDate<RepSpec.d1)then begin testf = false; end;
		if(OPr.TransDate>RepSpec.d2)then begin TrHs = false; testf = false; end;
		//if(OPr.PayMode<RepSpec.f1 or OPr.PayMode>RepSpec.f2)then begin testf = false; end;
		if(!setinset(OPr.PayMode,RepSpec.f1))then begin testf = false; end;
		if(OPr.DoneFlag==0)then begin testf = false; end;
		if(OPr.Invalid==1)then begin testf = false; end;
		
		matrowget(OPr,i,OPrw);
		if(testf)then begin
			rwcnt = matrowcnt(OPr);
			for(i=0;i<rwcnt;i=i+1)begin
				matrowget(OPr,i,OPrw);				
				if(invinperiod[OPrw.VISerNr]==false)then begin
					VIr.SerNr = OPrw.VISerNr;
					if(readfirstmain(VIr,1,true))then begin
					
						/*if(printed and VIr.OKFlag==1)then begin
							printed = false;
							startformat(15);
								outstring(0,0,"Payments for older invoices",false);
							endformat;
						end;*/
						
						PrintInvoice(VIr,invinperiod,RepSpec);
					end;
				end;
			end;
		end;
	end;
	
	endjob;
	
return;
end;

