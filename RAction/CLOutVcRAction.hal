external inner function Boolean DisallowFutureDateCheck(Boolean,Date,string,Integer);
external inner function Integer VICLOutOKed(LongInt,string,LongInt,var LongInt,var val);
external inner function Boolean CheckCurncy(string,string);
external inner updating procedure AddTTrans_CLOutVc(record TRVc,record CLOutVc);
external inner function Integer CheckRates(string,val,val,val,val,val,var string);
external inner function Integer PMCheckType(string,var string,var string);
external inner procedure GetSerRange(string,LongInt,var LongInt,var LongInt);
external inner function LongInt GetCurUserLastNr(string);
external inner function string 255 CheckTrans(var record TRVc,Integer,Boolean);
external inner updating procedure SaveTrans(record TRVc);
external inner function Integer MakeTransFromCLOut(var record TRVc,record CLOutVc,Boolean,var string);
external inner function Boolean GetPMgentrans(string);
external inner function Boolean PayModeRegistered(string);
external inner function Boolean Date2Test(string,Date,string,Integer);
external inner function Integer CheckObjs(string,string,var string);
external inner procedure GetCorspAccNumber(string,var string);
external inner function Integer CashSerNumberTest(string,val,string,LongInt,var Boolean);
external inner function Boolean SerNrTestCLOutVc(LongInt,Date,var Boolean);
external inner function Boolean GetPMRow(string,var row PMBlock);
external inner function Integer IsUnOKAllowed_CLOutVc(record CLOutVc,var string,var Integer);
external inner procedure NormalizeObjstr(var string);// Edit ************************** Wednesday, 15 July 2015 11:04:06
external inner procedure NoDupObjs(string,var string);// Edit ************************** Wednesday, 15 July 2015 12:10:47


global
updating function LongInt CLOutVcRecordCheck(var record CLOutVc CLOutp,record CLOutVc CLOut2p,LongInt stat,LongInt long4)
BEGIN
  integer mtrw;
  string 200 objstr;
  LongInt res;
  record MainCLBlock MCLb;
  record SRBlock SRRec;
  record CLOutVc locCLOutr;
  record CLCorspVc Corspr;
  Integer cashres;
  Boolean transf,gentrans,unokf,corspf;
  LongInt oldnr,newnr;
  string 255 tstr,errstr;
  Integer insertmode,updatemode;
  record TRVc gTRp;
  LongInt vinr;
  val tot;  
  Integer i,rwcnt,errcode,j;
  row CLOutVc CLOutrw;
  row CLOutVc CLOut2rw;
  record VIVc VIr;
  record IVVc IVr;
  record ARVc ARr;
  record APVc APr;
  record CUVc VEr;
  record APPayHistVc APHistr;
  record OPPVc OPPr;
  record POVc POr;
  val temp;
  record APAccBlock APAccRec;
  LongInt serstart,serend;
  row PMBlock PMrw;
  Integer koef;
  val amount;
  Integer cht;
  record OwnCheckVc OwnCheckr;
  record CheckVc Checkr;
  record ARPayVc ARPayr;
  record AccVc pmAccr;
  string 255 paymode;
 
	mtrw = matrowcnt(CLOutp);
	For(i=0;i<mtrw;i=i+1) begin
		matrowget(CLOutp,i,CLOutrw);
		
		objstr = "";// Edit ************************** Wednesday, 22 July 2015 09:43:51
		if(nonblank(CLOutrw.CorspCode))then begin
			objstr = objstr & "," & CLOutrw.CorspCode;// Edit ************************** Wednesday, 15 July 2015 10:59:15
		end;
    if(nonblank(CLOutrw.Extras))then begin
			objstr = objstr & "," & CLOutrw.Extras;//Edit-------------------Vitalii 14:11 21.03.2016
		end;
		if(nonblank(CLOutrw.Prj))then begin
			objstr = objstr & "," & CLOutrw.Prj;// Edit ************************** Wednesday, 15 July 2015 10:59:15
		end;
		if(nonblank(CLOutrw.Company))then begin
			objstr = objstr & "," & CLOutrw.Company;// Edit ************************** Wednesday, 15 July 2015 10:59:15
		end;
		if(nonblank(CLOutrw.Found))then begin
			objstr = objstr & "," & CLOutrw.Found;// Edit ************************** Wednesday, 15 July 2015 10:59:15
		end;
		if(nonblank(CLOutrw.Loc))then begin
			objstr = objstr & "," & CLOutrw.Loc;//Edit---------------Vitalii 17:12 04.08.2015
		end;
	
		NoDupObjs(objstr,objstr);
		NormalizeObjstr(objstr);// Edit ************************** Wednesday, 15 July 2015 11:05:34
		CLOutrw.Objects = objstr;// Edit ************************** Wednesday, 15 July 2015 11:05:33
		matrowput(CLOutp,i,CLOutrw);// Edit ************************** Wednesday, 15 July 2015 11:09:29
		
		  
	end;
  
  res = 0;
  insertmode = 1;//Rs_insert
  updatemode = 2;//Rs_update
  oldnr = CLOutp.SerNr;
  if (CLOutp.OKFlag==0) then begin//unok
    if (stat==updatemode) then begin
      if (CLOut2p.OKFlag==1) then begin unokf = true; end;
    end;
  end;
  if (unokf) then begin
    res = IsUnOKAllowed_CLOutVc(CLOutp,tstr,i);
    if (res!=0) then begin
      RecordCheckError(res,"",i,tstr);      
      res = -1; 
    end;    
    goto LCLOutVcRecordCheck;
  end;
  if (stat==updatemode) then begin
    if (CLOutp.SerNr<=0) and (CLOut2p.OKFlag==0) then begin
      CLOutp.SerNr = CLOut2p.SerNr;
    end;
  end;    
  BlockLoad(SRRec);
  BlockLoad(MCLb);
  BlockLoad(APAccRec);
  gentrans = true;
  if ((CLOut2p.OKFlag==1) and (stat==updatemode)) then begin goto LCLOutVcRecordCheck; end;//?
  transf = false;
  if (CLOutp.OKFlag==1) then begin
    if (stat==insertmode) then begin transf = true; end;
    if (stat==updatemode) then begin
      if (CLOut2p.OKFlag==0) then begin transf = true; end;
    end;  
  end;
  if (transf) then begin
    if (UserCanAction("OKCashOut",true)==false) then begin
      RecordCheckError(1274,StringFromStringSet(3,"OKCashOut"),-1,"SerNr");      
      res = -1;
      goto L99CLOutVcRecordCheck; 
    end;  
  end;
  if (CLOutp.SerNr<=0) then begin
    newnr = GetCurUserLastNr("CLOutVc");
    if (newnr==-1) then begin
      newnr = SRRec.LastCLOutNr;
    end;
    CLOutp.SerNr = NextSerNr("CLOutVc",CLOutp.TransDate,newnr,false,CLOutp.LangCode);
  end;
  if ((stat==insertmode) or (CLOutp.SerNr!=CLOut2p.SerNr)) then begin
    locCLOutr.SerNr = CLOutp.SerNr;
    if (ReadFirstMain(locCLOutr,1,true)) then begin
      RecordCheckError(1115,"",-1,"SerNr");      
      res = -1;
      goto L99CLOutVcRecordCheck;
    end;
  end;
  cashres = CashSerNumberTest(CLOutp.PayMode,CLOutp.Total,"CLOutVc",CLOutp.SerNr,gentrans);
  if (cashres==99) then begin 
    res = -1; 
    goto L99CLOutVcRecordCheck; 
  end;
  if (cashres==12) then begin
    goto L12;
  end;  
  errcode = CheckRates(CLOutp.CurncyCode,CLOutp.FrRate,CLOutp.ToRateB1,CLOutp.ToRateB2,CLOutp.BaseRate1,CLOutp.BaseRate2,tstr);
  if (errcode!=0) then begin
    RecordCheckError(errcode,"",-1,tstr);      
    res = -1; 
    goto L99CLOutVcRecordCheck;
  end;          
  if ((MCLb.ChronologyforCLNo!=0) and (stat==insertmode)) then begin
    GetSerRange("CLOutVc",CLOutp.SerNr,serstart,serend);
    if (serend!=-1) then begin    
      locCLOutr.SerNr = serend;
    end else begin
      locCLOutr.SerNr = CLOutp.SerNr;
    end;    
    if (ReadLastMain(locCLOutr,1,false)) then begin
      if ((locCLOutr.SerNr>0) and ((locCLOutr.SerNr>=serstart) or (serstart==-1))) then begin
        if ((locCLOutr.SerNr+1)!=CLOutp.SerNr) then begin
          oldnr = locCLOutr.SerNr+1;
          RecordCheckError(1034,"",-1,"SerNr");  
          res = -1;
          goto L99CLOutVcRecordCheck;
        end;
      end;
    end;
  end;
  if (SerNrTestCLOutVc(CLOutp.SerNr,CLOutp.TransDate,gentrans)==false) then begin
    RecordCheckError(1557,"",-1,"SerNr");      
    res = -1;
    goto L99CLOutVcRecordCheck;
  end;
L12:;
  if (Date2Test("CLOutVc",CLOutp.TransDate,"TransDate",-1)==false) then begin
    res = -1;
    goto L99CLOutVcRecordCheck;
  end;
  if (DisallowFutureDateCheck(true,CLOutp.TransDate,"TransDate",-1)) then begin
    res = -1;
    goto L99CLOutVcRecordCheck;
  end;
  GetCorspAccNumber(CLOutp.CorspCode,tstr);
  //cashres = CheckObjs(tstr,CLOutp.Objects,errstr);
  if (cashres!=0) then begin
    RecordCheckError(cashres,errstr,-1,"Objects");      
    res = -1;
    goto L99CLOutVcRecordCheck;
  end;
  if (blank(CLOutp.PayMode)) then begin
    RecordCheckError(1101,"",-1,"PayMode");      
    res = -1;
    goto L99CLOutVcRecordCheck;
  end;
  if (true) then begin//transf
    if (MCLb.CashCollection!=0) then begin
      cashres = VICLOutOKed(CLOutp.SerNr,CLOutp.FileName,CLOutp.FSerNr,vinr,tot);
      switch (cashres) begin
        case 0:
          RecordCheckError(2072,"",-1,"SerNr");      
          res = -1;
          goto L99CLOutVcRecordCheck;
        case 1:  
          if (tot!=CLOutp.Total) then begin
            RecordCheckError(2074,"",-1,"Total");      
            res = -1;
            goto L99CLOutVcRecordCheck;
          end;
      end;
      gentrans = GetPMgentrans(CLOutp.PayMode);
    end;  
  end;  
  if (UserCanAction("AllowNegCLOut",true)==false) then begin
    if (CLOutp.Total<0) then begin
      RecordCheckError(20071,"",-1,"Total");      
      res = -1;
      goto L99CLOutVcRecordCheck;
    end;
  end;
  corspf = true;
  rwcnt = MatRowCnt(CLOutp);
  if (CLOutp.OKFlag!=0) then begin
    if (rwcnt==0) then begin
      if (CLOutp.Total==0) then begin
        RecordCheckError(1058,"",-1,"Total");      
        res = -1;
        goto L99CLOutVcRecordCheck;
      end;
    end;
  end;
  if (GetPMRow(CLOutp.PayMode,PMrw)==false) then begin
    RecordCheckError(1277,"",-1,"PayMode");      
    res = -1;
    goto L99CLOutVcRecordCheck;
  end;
  pmAccr.AccNumber = PMrw.AccNr;
  ReadFirstMain(pmAccr,1,true);
  if (nonblank(CLOutp.CUCode)) then begin
    VEr.Code = CLOutp.CUCode;
    if (ReadFirstMain(VEr,1,true)==false) then begin
      RecordCheckError(1290," " & CLOutp.CUCode,-1,"CUCode");
      res = -1; 
      goto L99CLOutVcRecordCheck;
    end;
    if (nonblank(pmAccr.Curncy)) and (nonblank(VEr.VECurncyCode)) then begin
      if (pmAccr.Curncy!=VEr.VECurncyCode)then begin
        RecordCheckError(20806,"",-1,"PayMode");      
        res = -1;
        goto L99CLOutVcRecordCheck;
      end;
    end;      
  end;
  if (rwcnt==0) then begin 
    cht = PMCheckType(CLOutp.PayMode,tstr,tstr);
    if (cht==kPayModeTypeOwnCheque) or (cht==kPayModeTypeCheque) then begin
      RecordCheckError(1277,"",-1,"PayMode");     
      res = -1; 
      goto L99CLOutVcRecordCheck;
    end;
  end;  
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CLOutp,i,CLOutrw);
    paymode = CLOutrw.PayMode;
    if (blank(paymode)) then begin paymode = CLOutp.PayMode; end;
    cht = PMCheckType(paymode,tstr,tstr);
    if (CLOutrw.Type!=kCashOutRowTypeOwnCheque) then begin
      if (cht==kPayModeTypeOwnCheque) then begin
        if (blank(CLOutrw.PayMode)) then begin 
          RecordCheckError(1277,"",-1,"PayMode");     
        end else begin
          RecordCheckError(1277,"",i,"PayMode");     
        end;
        res = -1; 
        goto L99CLOutVcRecordCheck;
      end;
    end;   
    if (UserCanAction("AllowNegCLOut",true)==false) then begin
      if (CLOutrw.Sum<0) then begin
        RecordCheckError(20071,"",i,"Sum");      
        res = -1;
        goto L99CLOutVcRecordCheck;
      end;
    end;
    if (PayModeRegistered(paymode)==false) then begin
      RecordCheckError(1120,paymode,-1,"PayMode");      
      res = -1;
      goto L99CLOutVcRecordCheck;
    end;
    GetPMRow(paymode,PMrw);
    pmAccr.AccNumber = PMrw.AccNr;
    ReadFirstMain(pmAccr,1,true);
    if (nonblank(CLOutrw.Company)) then begin
      VEr.Code = CLOutrw.Company;
      if (ReadFirstMain(VEr,1,true)) then begin
        if (nonblank(pmAccr.Curncy)) and (nonblank(VEr.VECurncyCode)) then begin
          if (pmAccr.Curncy!=VEr.VECurncyCode)then begin
            RecordCheckError(20806,"",-1,"PayMode");      
            res = -1;
            goto L99CLOutVcRecordCheck;
          end;
        end;
      end else begin
        RecordCheckError(1290," " & CLOutrw.Company,i,"Company");
        res = -1; 
        goto L99CLOutVcRecordCheck;
      end;  
    end;
    if (CLOutrw.Type==kCashOutRowTypeOwnCheque) then begin
      if (CLOutrw.TransNr==-1) then begin
        RecordCheckError(1854,"",i,"TransNr");      
        res = -1; 
        goto L99CLOutVcRecordCheck;
      end;
      if (cht!=kPayModeTypeOwnCheque) then begin
        if (blank(CLOutrw.PayMode)) then begin 
          RecordCheckError(1277,"",-1,"PayMode");     
        end else begin
          RecordCheckError(1277,"",i,"PayMode");     
        end;         
        res = -1; 
        goto L99CLOutVcRecordCheck;
      end;
      OwnCheckr.SerNr = CLOutrw.TransNr;
      if (ReadFirstMain(OwnCheckr,1,true)==false) then begin
        RecordCheckError(1279,"",i,"ChequeNr");
        res = -1; 
        goto L99CLOutVcRecordCheck;
      end else begin
        if (OwnCheckr.Openf!=kCheckTypeRegistered) then begin
          RecordCheckError(1292,"",i,"ChequeNr");      
          res = -1; 
          goto L99CLOutVcRecordCheck;
        end;
        amount = 0;
        for (j=0;j<rwcnt;j=j+1) begin
          MatRowGet(CLOutp,j,CLOut2rw);
          if (CLOut2rw.Type==CLOutrw.Type) then begin
            if (CLOut2rw.TransNr==CLOutrw.TransNr) then begin
              amount = amount + CLOut2rw.Sum;
            end;
          end;
        end;
        if (amount!=OwnCheckr.Amount) then begin
          RecordCheckError(20065," " & OwnCheckr.Amount,i,"Sum");      
          res = -1; 
          goto L99CLOutVcRecordCheck;
        end;
      end;
    end;
    if (CLOutrw.Type!=kCashOutRowTypeCheque) then begin
      if (cht==kPayModeTypeCheque) then begin
        if (blank(CLOutrw.PayMode)) then begin 
          RecordCheckError(1277,"",-1,"PayMode");     
        end else begin
          RecordCheckError(1277,"",i,"PayMode");     
        end;  
        res = -1; 
        goto L99CLOutVcRecordCheck;
      end;   
    end;
    if (CLOutrw.Type==kCashOutRowTypeCheque) then begin
      if (CLOutrw.TransNr==-1) then begin
        RecordCheckError(1854,"",i,"TransNr");      
        res = -1; 
        goto L99CLOutVcRecordCheck;
      end;
      if (cht!=kPayModeTypeCheque) then begin
        if (blank(CLOutrw.PayMode)) then begin 
          RecordCheckError(1277,"",-1,"PayMode");     
        end else begin
          RecordCheckError(1277,"",i,"PayMode");     
        end;  
        res = -1; 
        goto L99CLOutVcRecordCheck;
      end;
      Checkr.SerNr = CLOutrw.TransNr;
      if (ReadFirstMain(Checkr,1,true)==false) then begin
        RecordCheckError(1279,"",i,"ChequeNr");      
        res = -1; 
        goto L99CLOutVcRecordCheck;
      end else begin
        if (Checkr.Openf!=kCheckTypeAccepted) then begin
          RecordCheckError(1292,"",i,"ChequeNr");      
          res = -1; 
          goto L99CLOutVcRecordCheck;
        end;
        amount = 0;
        for (j=0;j<rwcnt;j=j+1) begin
          MatRowGet(CLOutp,j,CLOut2rw);
          if (CLOut2rw.Type==CLOutrw.Type) then begin
            if (CLOut2rw.TransNr==CLOutrw.TransNr) then begin
              amount = amount + CLOut2rw.Sum;
            end;
          end;
        end;
        if (amount!=Checkr.Amount) then begin
          RecordCheckError(20065," " & Checkr.Amount,i,"Sum");      
          res = -1; 
          goto L99CLOutVcRecordCheck;
        end;
      end;
        
    end;
    if (CLOutrw.Type==kCashOutRowTypeCustomerRevPrepayment) then begin    
      if (nonblank(paymode)) then begin
        if (CheckCurncy(paymode,CLOutp.CurncyCode)==false) then begin
          RecordCheckError(1425,"",-1,"PayMode");      
          res = -1; 
          goto L99CLOutVcRecordCheck;
        end;
      end;
      ARPayr.CUPNr = CLOutrw.TransNr;
      if (ReadFirstMain(ARPayr,1,true)==true) then begin
        amount = CLOutrw.Sum;
        for (j=0;j<i;j=j+1) begin
          MatRowGet(CLOutp,j,CLOut2rw);
          if (CLOut2rw.Type==5) then begin
            if (CLOut2rw.TransNr==CLOutrw.TransNr) then begin
              amount = amount + CLOut2rw.Sum;
            end;
          end;
        end;
        if (amount>ARPayr.RVal) and (CLOutrw.Sum>0) then begin
          RecordCheckError(1254,"",i,"PrepayNr");      
          res = -1; 
          goto L99CLOutVcRecordCheck;
        end;
      end;
    end;
    if (CLOutrw.Type==kCashOutRowTypePersonnelPayment) then begin    
      if (blank(CLOutp.Person)) then begin
        RecordCheckError(1058,"",-1,"Person");      
        res = -1;
        goto L99CLOutVcRecordCheck;
      end;
    end;
    if (CLOutrw.Type==kCashOutRowTypeInvoice) then begin
      VIr.SerNr = CLOutrw.TransNr;
      if (ReadFirstMain(VIr,1,true)==false) then begin
        RecordCheckError(1116,"",i,"TransNr");      
        res = -1;
        goto L99CLOutVcRecordCheck;
      end;
      if (VIr.CurncyCode!=CLOutp.CurncyCode) then begin
        RecordCheckError(1217,"",i,"TransNr");      
        res = -1;
        goto L99CLOutVcRecordCheck;
      end;
      if (CLOutp.TransDate<VIr.InvDate) then begin
        RecordCheckError(20852,"",i,"TransNr");      
        res = -1; 
        goto L99CLOutVcRecordCheck;
      end;
      if (CLOutrw.Company!=VIr.VECode) then begin
        RecordCheckError(1215,"",i,"Company");      
        res = -1;
        goto L99CLOutVcRecordCheck;
      end;            
//      if (CLOutrw.TransNr>0) and (CLOutp.OKFlag==1) and
      for (j=0;j<i;j=j+1) begin
        MatRowGet(CLOutp,j,CLOut2rw);
        if (CLOut2rw.Type==2) then begin
          if (CLOut2rw.Company!=CLOutrw.Company) then begin
            RecordCheckError(1215,"",i,"Company");      
            res = -1;
            goto L99CLOutVcRecordCheck;
          end;
        end;
      end;

      if (CLOutrw.TransNr>0) and 
        (APAccRec.NoOverPayVI!=0) then begin
        APr.SerNr = CLOutrw.TransNr;
        if (ReadFirstMain(APr,1,true)==true) then begin
          amount = CLOutrw.Sum;
          for (j=0;j<i;j=j+1) begin
            MatRowGet(CLOutp,j,CLOut2rw);
            if (CLOut2rw.Type==2) then begin
              if (CLOut2rw.TransNr==CLOutrw.TransNr) then begin
                amount = amount + CLOut2rw.Sum;
              end;
            end;
          end;

          if ((APr.RVal<0) and (amount<0)) then begin
            koef = -1;
          end else begin
            koef = 1;
          end;
          if ((APr.RVal*koef)<(amount*koef)) then begin
            tstr = " " & amount & USetStr(20061);
            tstr = tstr & " " & APr.RVal;
            tstr = tstr & USetStr(20064) & (amount-APr.RVal) & USetStr(20063);
            RecordCheckError(20065,tstr,i,"Sum");      
            res = -1; 
            goto L99CLOutVcRecordCheck;  
          end;      
        end;
      end;
    end;
    if (CLOutrw.Type==kCashOutRowTypeCredSalesInvoice) then begin
      IVr.SerNr = CLOutrw.TransNr;
      if (ReadFirstMain(IVr,1,true)==false) then begin
        RecordCheckError(1116,"",i,"TransNr");      
        res = -1;
        goto L99CLOutVcRecordCheck;
      end;
      ARr.InvoiceNr = IVr.SerNr;
      if (ReadFirstMain(ARr,1,true)) then begin
      end;
      if (ARr.RVal>0) then begin//only credit notes
        RecordCheckError(22052,"",i,"Type");      
        res = -1;
        goto L99CLOutVcRecordCheck;      
      end;
      if (IVr.CurncyCode!=CLOutp.CurncyCode) then begin
        RecordCheckError(1217,"",i,"TransNr");      
        res = -1;
        goto L99CLOutVcRecordCheck;
      end;
      if (CLOutp.TransDate<IVr.InvDate) then begin
        RecordCheckError(20852,"",i,"TransNr");      
        res = -1; 
        goto L99CLOutVcRecordCheck;
      end;
      if (CLOutrw.Company!=IVr.CustCode) then begin
        RecordCheckError(1218,"",i,"Company");      
        res = -1;
        goto L99CLOutVcRecordCheck;
      end;      
    end;
    if (CLOutrw.Type==kCashOutRowTypeSupplierPrepayment) then begin
      if (blank(CLOutrw.Company)) then begin
        RecordCheckError(1205,"",i,"Company");      
        res = -1; 
        goto L99CLOutVcRecordCheck;
      end;
      if (CLOutrw.TransNr==-1) then begin
        RecordCheckError(1289,"",i,"TransNr");      
        res = -1; 
        goto L99CLOutVcRecordCheck;
      end;
      if (nonblank(paymode)) then begin
        if (CheckCurncy(paymode,CLOutp.CurncyCode)==false) then begin
          RecordCheckError(1425,"",-1,"PayMode");      
          res = -1; 
          goto L99CLOutVcRecordCheck;
        end;
      end;
      VEr.Code = CLOutrw.Company;
      if (ReadFirstMain(VEr,1,true)) then begin
        if (VEr.OnAccount==0) then begin
          RecordCheckError(1131,"",i,"Company");      
          res = -1; 
          goto L99CLOutVcRecordCheck;
        end;
        if (nonblank(VEr.VECurncyCode)) then begin
          if (VEr.VECurncyCode!=CLOutp.CurncyCode) then begin
            RecordCheckError(1217,"",i,"Company");      
            res = -1;
            goto L99CLOutVcRecordCheck;
          end;
        end;
      end else begin
        RecordCheckError(1290," " & CLOutrw.Company,i,"Company");
        res = -1; 
        goto L99CLOutVcRecordCheck;
      end;
      APHistr.VEPNr = CLOutrw.TransNr;
      if (ReadFirstMain(APHistr,1,true)==true) then begin
        if (APAccRec.ForceUniquePP!=0) then begin
          temp = blankval;
          OPPr.SerNr = APHistr.VEPNr;
          if (ReadFirstMain(OPPr,1,true)==true) then begin
            temp = OPPr.PPVal;
          end;
          temp = temp + CLOutrw.Sum;
          if (temp!=0) and (CLOutrw.Sum>0) then begin
            RecordCheckError(20057,"",i,"TransNr");      
            res = -1; 
            goto L99CLOutVcRecordCheck;
          end;
        end;
        if (APHistr.VECode!=CLOutrw.Company) then begin
          RecordCheckError(1215,"",i,"Company");      
          res = -1; 
          goto L99CLOutVcRecordCheck;
        end;
        if (APHistr.CurncyCode!=CLOutp.CurncyCode) then begin
          RecordCheckError(1217,"",i,"TransNr");      
          res = -1; 
          goto L99CLOutVcRecordCheck;
        end;
      end;
      OPPr.SerNr = CLOutrw.TransNr;
      if (ReadFirstMain(OPPr,1,true)) then begin
        if (OPPr.PayDate!=CLOutp.TransDate) then begin
          RecordCheckError(20853,"",i,"TransNr");      
          res = -1; 
          goto L99CLOutVcRecordCheck;
        end;
      end;
      if (UserCanAction("DisallowPrepToNotOKPO",false)) then begin
        POr.SerNr = CLOutrw.OrderNr;
        if (ReadFirstMain(POr,1,true)) then begin
          if (POr.OKFlag==0) then begin
            RecordCheckError(20072,"",i,"OrderNr");      
            res = -1;
            goto L99CLOutVcRecordCheck;
          end;
        end;
      end;
    end;
    if (CLOutp.OKFlag!=0) then begin
      cashres = CheckObjs(PMrw.AccNr,CLOutrw.Objects,errstr);
      if (cashres!=0) then begin
        RecordCheckError(cashres,errstr,i,"Objects");      
        res = -1;
        goto L99CLOutVcRecordCheck;
      end; 
      if (nonblank(CLOutrw.CorspCode)) then begin
        Corspr.Code = CLOutrw.CorspCode;
        if (ReadFirstKey("Code2",Corspr,1,true)==false) then begin
          RecordCheckError(1120,CLOutrw.CorspCode,i,"CorspCode");
          res = -1;
          goto L99CLOutVcRecordCheck;
        end;
        GetCorspAccNumber(CLOutrw.CorspCode,tstr);        
        cashres = CheckObjs(tstr,CLOutrw.Objects,errstr);
        if (cashres!=0) then begin
          RecordCheckError(cashres,errstr,i,"Objects");      
          res = -1;
          goto L99CLOutVcRecordCheck;
        end; 
      end;
    end;
    if (CLOutrw.Type!=kCashOutRowTypeNormal) then begin 
        corspf = false; 
     end else begin
      if (nonblank(CLOutrw.CorspCode)) then begin
        corspf = false; 
      end else begin
        corspf = true; 
      end;
    end;      
  end;
  if (CLOutp.Total<0) then begin
    if (UserCanAction("AllowNegCLOut",true)==false) then begin
      RecordCheckError(20071,"",-1,"Total");   
      res = -1; 
      goto L99CLOutVcRecordCheck;
    end;
  end;           
  if (corspf) then begin
    Corspr.Code = CLOutp.CorspCode;
    if (ReadFirstKey("Code2",Corspr,1,true)==false) then begin
      RecordCheckError(1120,CLOutp.CorspCode,-1,"CorspCode");      
      res = -1;
      goto L99CLOutVcRecordCheck;
    end;
  end;
  if (gentrans==false) then begin transf = false; end;
  if (transf) then begin
    errcode = MakeTransFromCLOut(gTRp,CLOutp,false,errstr);
    if (errcode!=0) then begin
      RecordCheckError(errcode,errstr,-1,"SerNr");      
      res = -1;
      goto L99CLOutVcRecordCheck;
    end else begin
      if ((gTRp.Number>0) and (gTRp.IntYc==CLOutYc)) then begin
        tstr = CheckTrans(gTRp,2,true);
        if (nonblank(tstr)) then begin
          RecordCheckError(1085,tstr,-1,"SerNr");      
          res = -1;
          goto L99CLOutVcRecordCheck;
        end;
        SaveTrans(gTRp);
        AddTTrans_CLOutVc(gTRp,CLOutp);
      end;
    end;
  end;  
L99CLOutVcRecordCheck:;
  if (res!=0) then begin
    CLOutp.SerNr = oldnr;
  end;  
LCLOutVcRecordCheck:;
	CLOutVcRecordCheck = res;
  
  return;
end;