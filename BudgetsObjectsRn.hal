external inner procedure ExtractObj(string,var Integer,var string);



procedure OutStringExcel(Integer position,String func,String printstring,Boolean alignment)
begin
	if (nonblank(printstring)) then begin
  		Outstring(position,func,printstring,alignment);
  end else begin	
  		Outstring(position,func,"",alignment);
  end;	
end;


function integer GetQuartal(date trDate)
begin
	integer res,i;
	i = GetMonth(trDate);
	switch (i) begin
		case 1 : res = 1;
		case 2 : res = 1;
		case 3 : res = 1;
		case 4 : res = 2;
		case 5 : res = 2;
		case 6 : res = 2;
		case 7 : res = 3;
		case 8 : res = 3;
		case 9 : res = 3;
		case 10 : res = 4;
		case 11 : res = 4;
		case 12 : res = 4;															
	end;
	
	GetQuartal = res;
return;	
end;


function boolean CollectSubTotals(record BudRepVc BRr,integer rownr,var array val subtotals)
begin
	row BudRepVc BRrw;
	integer rwcnt,i;
	val totSum;
	boolean res;
	
	ClearArray(subtotals);
	totSum = 0;
	res = true;
	rwcnt = MatRowCnt(BRr);
	i=rownr+1;
	MatRowGet(BRr,i,BRrw);
	while (blank(BRrw.CatName) and (i<rwcnt)) begin
		MatRowGet(BRr,i,BRrw);
		subtotals[0] = subtotals[0] + BRrw.Bud1;			//Quartal I
		subtotals[1] = subtotals[1] + BRrw.Spend1;		//Quartal I - Fact
		subtotals[2] = subtotals[2] + BRrw.Bud2;
		subtotals[3] = subtotals[3] + BRrw.Spend2;
		subtotals[4] = subtotals[4] + BRrw.Bud3;
		subtotals[5] = subtotals[5] + BRrw.Spend3;
		subtotals[6] = subtotals[6] + BRrw.Bud4;
		subtotals[7] = subtotals[7] + BRrw.Spend4;
		i=i+1;
	end;
	
	for(i=0;i<subtotals.length;i=i+1) begin
		totSum = totSum+subtotals[i];
	end;
	if (totSum==0) then begin res = false; end;
	
	CollectSubTotals = res;
return;
end;

updating
global procedure BudgetsObjectsRn(record RcVc RepSpec)
begin
	record INVc INr;
	record PRVc PRr,PR2r;
	record TBBUVc TBBUr;
	row TBBUVc TBBUrw;
	date sd,ed;
	string 20 mainobj;
	string 20 prjobj;
	integer i,k;
	record ObjVc Objr;
	record BudRepVc BRr;
	row BudRepVc BRrw,BR2rw;
	integer mtrw,j;
	record ITVc ITr;
	boolean TrHs,testf,testf2;
	integer repmtrw,repi;
	record MainVc Mainr;
	record TRVc TRr;
	row TRVc TRrw;
	array val totalrowbud,totalrowsped,subtotals, totalrow;
	val totalbubyrow,totalspendbyrow,totalBudget,totalSpend;
	string 100 mainobjname;
	boolean foundf;
	record CUVc CUr;
	string 20 vendobj,tstr;
	integer pos;
	record BaseCurBlock BCb;
	
	
	BlockLoad(BCb);
	
	sd = RepSpec.sStartDate;
	ed = RepSpec.sEndDate;
	mainobj = RepSpec.f1;
	
	totalBudget = 0;
	totalSpend = 0;
	
	recordnew(BRr);
	Objr.Code = mainobj;
	readfirstmain(Objr,1,true);
	mainobjname = Objr.Comment;
	startreportnoheaderjob("BudgetsObjects");
		k = 0;
		
		if (blank(RepSpec.f2)) then begin
			Outstring(0,0,"Choose the project, please",false);
			goto LBudgetsObjectsRn;
		end;		
		
		//Collect array of all items for every vendor  
		while(loopmain(ITr,1,true)) begin
			clearrow(BRr,BRrw,1);
			BRrw.Code = ITr.Code;
			BRrw.CatName = ITr.Comment;
			matrowput(BRr,k,BRrw);
			k=k+1;
			resetloop(INr);
			INr.Group = ITr.Code;
			TrHs = true;
			while(loopkey("Group",INr,1,TrHs)) begin
				testf = true;
				if(INr.Group!=ITr.Code)then begin testf = false; TrHs = false; end;
				if(blank(INr.Objects))then begin testf = false; end;
				
				if(testf)then begin
					clearrow(BRr,BRrw,1);
					BRrw.Code = INr.Objects;
					Objr.Code = INr.Objects;
					if(readfirstmain(Objr,1,true))then begin
						BRrw.Name = Objr.Comment;
					end;
					
					BRrw.CostAcc = INr.CostAcc;
					
					repmtrw = matrowcnt(BRr);
					foundf = false;
					For(i=0;i<repmtrw;i=i+1) begin
	  				matrowget(BRr,i,BR2rw);
	  				if(BR2rw.Code==BRrw.Code)then begin
							foundf = true;
	  				end;
					end; 
					
					if(!foundf)then begin
						CUr.Code = "";
						while(loopkey("VEActCode",CUr,1,true)) begin
							if(nonblank(CUr.VEObjects))then begin
								BRrw.VECode = CUr.VEObjects;
								matrowput(BRr,k,BRrw);
								k=k+1;
							end;
						end;
						resetloop(CUr);
					end;
					
					repmtrw = matrowcnt(BRr);
					foundf = false;
					For(i=0;i<repmtrw;i=i+1) begin
	  				matrowget(BRr,i,BR2rw);
	  				if(BR2rw.Code==BRrw.Code and BR2rw.VECode=="")then begin
							foundf = true;
	  				end;
					end; 
					if(!foundf)then begin
						BRrw.VECode = "";
						matrowput(BRr,k,BRrw);
						k=k+1;
					end;
					
				end;
			end;
		end;
		

		repmtrw = matrowcnt(BRr);		
		k=0;

			
	PRr.Code = RepSpec.f2;
	If (ReadFirstMain(PRr,1,true)) then begin
					
			if(PRr.StartDate>=sd and PRr.StartDate<=ed)then begin

					prjobj = PRr.Objects;
					
					TBBUr.PRCode = PRr.Code;
					if(readfirstmain(TBBUr,1,true))then begin
						mtrw = matrowcnt(TBBUr);
						k=0;
						For(i=0;i<mtrw;i=i+1) begin
							matrowget(TBBUr,i,TBBUrw);
							
							if(TBBUrw.stp==18) then begin k=TBBUrw.ItemType; end;		//I,II,III,IV Quartal
							
							if(TBBUrw.stp==1 and TBBUrw.Sum!=0 and nonblank(TBBUrw.ArtCode))then begin
								For(repi=0;repi<repmtrw;repi=repi+1) begin
									matrowget(BRr,repi,BRrw);
									if(setinset(BRrw.Code,TBBUrw.Objects) and (((setinset(BRrw.VECode,TBBUrw.VECode) and nonblank(BRrw.VECode)) or (blank(BRrw.VECode) and blank(TBBUrw.VECode)))) and (setinset(mainobj,TBBUrw.Objects) or blank(mainobj)))then begin
										//messagebox(0,BRrw.VECode & " " & TBBUrw.VECode);
										switch(k) begin
											case 1:	BRrw.Bud1 = BRrw.Bud1 + TBBUrw.Sum;
											case 2:	BRrw.Bud2 = BRrw.Bud2 + TBBUrw.Sum;
											case 3:	BRrw.Bud3 = BRrw.Bud3 + TBBUrw.Sum;
											case 4:	BRrw.Bud4 = BRrw.Bud4 + TBBUrw.Sum;
				 						otherwise
				 											BRrw.Bud1 = BRrw.Bud1 + TBBUrw.Sum;	//I Quartal as default
										end;
										matrowput(BRr,repi,BRrw);
									end;
								end; 
							end;
						end; 
					end;
					
					
					PR2r.MotherCode = PRr.Code;
					TrHs = true;
					//Collect subprojects' budjets
					while(loopkey("MotherCode",PR2r,1,TrHs)) begin
						
						testf = true;
						if(PR2r.MotherCode!=PRr.Code)then begin TrHs = false; testf = false; end;
						if(PR2r.StartDate<sd and PR2r.StartDate>ed)then begin testf = false; end;

						if(testf)then begin

							TBBUr.PRCode = PR2r.Code;
							if(readfirstmain(TBBUr,1,true))then begin
								mtrw = matrowcnt(TBBUr);
								k = 0;
								For(i=0;i<mtrw;i=i+1) begin
									matrowget(TBBUr,i,TBBUrw);
									
									if(TBBUrw.stp==18) then begin k=TBBUrw.ItemType; end;		//I,II,III,IV Quartal									
									if(TBBUrw.stp==1 and TBBUrw.Sum!=0 and nonblank(TBBUrw.ArtCode))then begin
										For(repi=0;repi<repmtrw;repi=repi+1) begin
											matrowget(BRr,repi,BRrw);
											//messagebox(0,mainobj & " " & TBBUrw.Objects);
											if(setinset(BRrw.Code,TBBUrw.Objects) and ((setinset(BRrw.VECode,TBBUrw.VECode) and nonblank(BRrw.VECode)) or (blank(BRrw.VECode) and blank(TBBUrw.VECode))) and (setinset(mainobj,TBBUrw.Objects) or blank(mainobj)))then begin
												switch(k) begin
													case 1:	BRrw.Bud1 = BRrw.Bud1 + TBBUrw.Sum;
													case 2:	BRrw.Bud2 = BRrw.Bud2 + TBBUrw.Sum;
													case 3:	BRrw.Bud3 = BRrw.Bud3 + TBBUrw.Sum;
													case 4:	BRrw.Bud4 = BRrw.Bud4 + TBBUrw.Sum;
				 								otherwise
				 													BRrw.Bud1 = BRrw.Bud1 + TBBUrw.Sum;	//I Quartal as default
												end;
												matrowput(BRr,repi,BRrw);
											end;
										end; 
									end;
								end; 
							end;
						end;
					end;
					
			end;
		end;
		
		For(repi=0;repi<repmtrw;repi=repi+1) begin
	  	matrowget(BRr,repi,BRrw);
	  	if(nonblank(BRrw.CostAcc))then begin
	  		resetloop(Mainr);
	  		Mainr.AccNumber = BRrw.CostAcc;
	  		Mainr.TransDate = sd;
	  		TrHs = true;
	  		While(loopmain(Mainr,2,TrHs))begin
	  			testf = true;
	  			if(Mainr.AccNumber!=BRrw.CostAcc)then begin TrHs = false; testf = false; end;
	  			if(Mainr.TransDate>ed)then begin TrHs = false; testf = false; end;
	  			
	  			if(testf)then begin
	  				TRr.Number = Mainr.TransNr;
	  				TRr.IntYc = Mainr.IntYc;
	  				if(readfirstmain(TRr,2,true))then begin
	  					mtrw = matrowcnt(TRr);
	  					k = GetQuartal(TRr.TransDate);
	  					
	  					For(i=0;i<mtrw;i=i+1) begin
	  						matrowget(TRr,i,TRrw);
	  						if(TRrw.ovst==0 and TRrw.AccNumber==Mainr.AccNumber)then begin
	  							if(setinset(mainobj,TRrw.Objects) or blank(mainobj))then begin
	  									vendobj = "";
	  									tstr = "";
	  									pos = 0;
										ExtractObj(TRrw.Objects,pos,tstr);
										while(nonblank(tstr))begin
											if(nonblank(tstr))then begin
												Objr.Code = tstr;
												if(readfirstmain(Objr,1,true))then begin
													if(Objr.OTCode=="SUPPL")then begin
														vendobj = Objr.Code;
													end;
												end;
											end;
											ExtractObj(TRrw.Objects,pos,tstr);
										end;
										if(setinset(BRrw.Code,TRrw.Objects) and ((setinset(BRrw.VECode,TRrw.Objects) and nonblank(vendobj) and nonblank(BRrw.VECode)) or (blank(vendobj) and (blank(BRrw.VECode)))))then begin
	  										if(setinset(prjobj,TRrw.Objects))then begin													
														switch(k) begin
															case 1:	BRrw.Spend1 = BRrw.Spend1 - TRrw.CredVal + TRrw.DebVal;
															case 2:	BRrw.Spend2 = BRrw.Spend2 - TRrw.CredVal + TRrw.DebVal;
															case 3:	BRrw.Spend3 = BRrw.Spend3 - TRrw.CredVal + TRrw.DebVal;
															case 4:	BRrw.Spend4 = BRrw.Spend4 - TRrw.CredVal + TRrw.DebVal;
				 										otherwise
				 															BRrw.Spend1 = BRrw.Spend1 - TRrw.CredVal + TRrw.DebVal;	//I Quartal as default
														end;													
													matrowput(BRr,repi,BRrw);
	  										end;
										end;
	  							end;
	  						end;
							end; 
	  				end;
	  			end;
	  		end;
	  	end;
		end; 
		
	
		startformat(15);
	  	Outstring(0,0,"",false);
	  	Outstring(0,0,"",false);
	  	Outstring(0,0,"",false);
	  	Outstring(0,0,"",false);
			Outstring(100,0,PRr.Name & "," & GetYear(sd),false);
	  endformat;
	  endformat;
	  	Outstring(0,0,"period",false);
	  	Outstring(0,0,sd & "-" & ed,false);
	  endformat;
	  	Outstring(0,0,"currency",false);
	  	Outstring(0,0,BCb.BaseCur1,false);
	  endformat;
	  endformat;
	  endformat;
	  
	  startformat(15);
	  	Outstring(0,0,"",false);
	  	Outstring(50,0,mainobjname,false);
	  	Outstring(100,0,"",false);
	  	Outstring(120,0,"Vendor",false);

			Outstring(100,0,"QI",false);
			Outstring(100,0,"QI-Fact",false);
			Outstring(100,0,"QII",false);
			Outstring(100,0,"QII-Fact",false);
			Outstring(100,0,"QIII",false);
			Outstring(100,0,"QIII-Fact",false);
			Outstring(100,0,"QIV",false);
			Outstring(100,0,"QIV-Fact",false);
				
			Outstring(100,0,"total",false);
			Outstring(100,0,"total-Fact",false);
	  endformat;
		
		mtrw = matrowcnt(BRr);
		For(i=0;i<mtrw;i=i+1) begin
			matrowget(BRr,i,BRrw);
	  		
	  	if (nonblank(BRrw.CatName))	 then begin				
					if (CollectSubTotals(BRr,i,subtotals)) then begin	//check if item group is empty
						EndFormat; 														//empty string between different items group
						Outstring(0,0,BRrw.Code,false);
						Outstring(50,0,BRrw.CatName,false);	
						Outstring(100,0,"",false);
						Outstring(100,0,"",false);	
						for(j=0;j<8;j=j+1) begin	
							OutStringExcel(200,0,subtotals[j],false);
							totalrow[j] = totalrow[j] + subtotals[j];
						end;
						totalbubyrow = 	subtotals[0] + subtotals[2] + subtotals[4] + subtotals[6];		//Quartals
						totalspendbyrow = subtotals[1] + subtotals[3] + subtotals[5] + subtotals[7];	//Quartals-Fact
						
						OutStringExcel(0,0,totalbubyrow,false);
						OutStringExcel(0,0,totalspendbyrow,false);
						EndFormat;
					end;					
			end;
			
	  	totalbubyrow = BRrw.Bud1+BRrw.Bud2+BRrw.Bud3+BRrw.Bud4;
	  	totalspendbyrow = BRrw.Spend1+BRrw.Spend2+BRrw.Spend3+BRrw.Spend4;						  		
				
			if(totalbubyrow!=0 or totalspendbyrow!=0 )then begin
					startformat(15);
		    	
					Outstring(0,0,BRrw.Code,false);
					Outstring(50,0,BRrw.CatName,false);
					Outstring(100,0,BRrw.Name,false);
					Outstring(100,0,BRrw.VECode,false);
					
					OutStringExcel(100,0,BRrw.Bud1,false);
					OutStringExcel(100,0,BRrw.Spend1,false);
					OutStringExcel(100,0,BRrw.Bud2,false);
					OutStringExcel(100,0,BRrw.Spend2,false);
					OutStringExcel(100,0,BRrw.Bud3,false);
					OutStringExcel(100,0,BRrw.Spend3,false);
					OutStringExcel(100,0,BRrw.Bud4,false);
					OutStringExcel(100,0,BRrw.Spend4,false);
        	
					OutStringExcel(0,0,totalbubyrow,false);
					OutStringExcel(0,0,totalspendbyrow,false);
					endformat;
	  	end;
		end; 
		
		startformat(15);
			endformat;
	  	Outstring(0,0,GetYear(sd),false);
	  	Outstring(50,0,"",false);
	  	Outstring(100,0,"total",false);
	  	Outstring(100,0,"",false);
			For(i=0;i<8;i=i+1) begin	
				Outstring(100,0,totalrow[i],false);				
			end;
			totalBudget = totalrow[0] + totalrow[2] + totalrow[4] + totalrow[6];
			totalSpend = totalrow[1] + totalrow[3] + totalrow[5] + totalrow[7];			
			OutStringExcel(0,0,totalBudget,false);
			OutStringExcel(0,0,totalSpend,false); 
	  endformat;
		  
	LBudgetsObjectsRn:;	
	endjob;

return;
end;