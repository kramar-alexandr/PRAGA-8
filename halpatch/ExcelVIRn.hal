SetLangMode(LangRussian,"RUS",0);

external procedure GetObjs(string,string,var string);
external procedure XmlXlsxWorkBegin(string,string);
external procedure CreateSheetsXLSX(integer,array string,string,integer,boolean);
external procedure EndSheet(integer,string,integer);
external procedure SetSheetsCols(integer,array val,array integer,string);
external procedure BeginSheetData(integer,string);
external procedure EndSheetData(integer,string);
external procedure BeginRow(integer,string,integer,integer,val);
external procedure EndRow(integer,string,var integer);
external procedure StringCell(integer,string,var integer,integer,integer,string,var array string,var integer,var integer);
external procedure NumericCell(integer,string,var integer,integer,integer,val);
external procedure EmptyCell(integer,string,var integer,integer,integer,integer);
external procedure MergeCells(integer,string,array string,integer);
external procedure FillSharedStrings(string,array string,integer,integer,array string);
external procedure ConvertToXLSX(string);
external function string 10 GetStringCellNum(integer,integer);
external function string 255 MonthName(Date);

function string 255 MonthNameRus(Date d)
begin
  string 255 res;
  
  switch (GetMonth(d)) begin
    case 1: res = "Январь";
    case 2: res = "Февраль";
    case 3: res = "Март";
    case 4: res = "Апрель";
    case 5: res = "Май";
    case 6: res = "Июнь";
    case 7: res = "Июль";
    case 8: res = "Август";
    case 9: res = "Сентябрь";
    case 10: res = "Октябрь";
    case 11: res = "Ноябрь";
    case 12: res = "Декабрь";
  end;
  MonthNameRus = res;
  return;
end;


global
procedure ExcelVIRn(record VIVc VIr,var area areatofile)
BEGIN
	integer i;
	string 100 tstr;
  string 20 mn,mnr;
  string 50 ConrNumber,ConrNumberRus;
  record ContractsVc Conr;
  record CUVc CUr;
	
	array string 10 sheetNames;
	array val sheetColls;
	array integer sheetCollsOutLvl;
	array string 21 mergeCell;
	string 255 fileToSave;
	integer qtyOfSheets,sheetnum,rownum,colnum,style,qtyOfEmpStr;
	array string 100 SharedStrings;
	integer numOfUniqueSharedStrings,numOfSharedStrings,qtyMergeCell;
	string 16 reportName;
  array string 255 mas;
	
  Conr.VECode = VIr.VECode;
  ReadFirstKey("VECode",Conr,1,true);
  if nonblank(Conr.Number) then begin
    ConrNumber = "No. " & Conr.Number & " ";
    ConrNumberRus = "№ " & Conr.Number & " ";
  end;
  if getday(VIr.InvDate)<6 then begin
    if getmonth(VIr.InvDate)==1 then begin
      mnr = MonthNameRus(AddMonth(VIr.InvDate,-1)) & " " & GetYear(addyear(VIr.InvDate,-1));
      mn = MonthName(AddMonth(VIr.InvDate,-1)) & " " & GetYear(addyear(VIr.InvDate,-1));
    end else begin
      mnr = MonthNameRus(AddMonth(VIr.InvDate,-1)) & " " & GetYear(VIr.InvDate);
      mn = MonthName(AddMonth(VIr.InvDate,-1)) & " " & GetYear(VIr.InvDate);
    end;
  end else begin
    mnr = MonthNameRus(VIr.InvDate) & " " & GetYear(VIr.InvDate);
    mn = MonthName(VIr.InvDate) & " " & GetYear(VIr.InvDate);
  end;
  CUr.Code = VIr.VECode;
  ReadFirstMain(CUr,1,true);
  
  reportName = "ExcelVIRn";
  if (windowsmode==1) then begin
    fileToSave = "tmpxlsx.xlsx";
  end else begin
    fileToSave = "/tmpxlsx.xlsx";
  end;
  deletefolder(Left(fileToSave,(len(fileToSave) - 5)));
  qtyOfSheets = 1;
  sheetNames[0] = "Sheet1";
  
  colnum = 0;
  for (i=0;i<9;i=i+1) begin
    sheetColls[colnum] = 9.5703125;
    colnum = colnum + 1;
  end;

  colnum = 0;
  numOfUniqueSharedStrings = 0;
  numOfSharedStrings = 0;
  sheetnum = 1;
  qtyMergeCell = 0;
  XmlXlsxWorkBegin(fileToSave,reportName);
  CreateSheetsXLSX(qtyOfSheets,sheetNames,fileToSave,0,false);
  SetSheetsCols(sheetnum,sheetColls,sheetCollsOutLvl,fileToSave);
  BeginSheetData(sheetnum,fileToSave);
    rownum = 1;
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 5;
      style = 13;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"INVOICE/CЧET No. " & VIr.SerNr,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,40.5);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 1;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Customer/Заказчик:",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      colnum = 7;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Date/Дата " & VIr.InvDate,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 3;
      style = 1;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"OR (OTKRYTAYA ROSSIA)",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,11.25);
      colnum = 3;
      style = 3;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Palladium House,",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,11.25);
      colnum = 3;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"1-4 Argyll Street",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,11.25);
      colnum = 3;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"London, W1F 7LD",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,25.5);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 5;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Description/Описание",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 6;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Charges/Сумма",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 1;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,25.5);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 1;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Services under " & Conr.Description & " " & ConrNumber & "of " & Conr.StartDate,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 7;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"performed during " & mn,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      colnum = 8;
      style = 1;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,VIr.CurncyCode & " " & VIr.PayVal,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,24);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 1;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Услуги по " & Conr.DescriptionRus,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 1;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,ConrNumberRus & "от " & Conr.StartDate,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 6;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"за " & mnr,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,66);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 7;
      style = 14;
      qtyOfEmpStr = 3;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 5;
      style = 8;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Invoice Total/Итого",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      colnum = 8;
      style = 1;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,VIr.CurncyCode & " " & VIr.PayVal,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 7;
      style = 9;
      qtyOfEmpStr = 3;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,54.75);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,15);
      colnum = 1;
      style = 15;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Service Provider: (" & VIr.VEName & ")",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 2;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,51.75);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 11;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Signature",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 2;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,34.5);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 12;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"This invoice shall be paid by bank transfer to the following account:",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 5;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
    EndRow(sheetnum,fileToSave,rownum);
    if nonblank(CUr.BeneficiaryBank) then begin
      BeginRow(sheetnum,fileToSave,rownum,0,22.5);
        colnum = 1;
        style = 3;
        StringCell(sheetnum,fileToSave,colnum,rownum,style,"Beneficiary's bank: " & CUr.BeneficiaryBank,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      EndRow(sheetnum,fileToSave,rownum);
    end;
    if nonblank(CUr.SWIFT) then begin
      BeginRow(sheetnum,fileToSave,rownum,0,blankval);
        colnum = 1;
        style = 3;
        StringCell(sheetnum,fileToSave,colnum,rownum,style,"SWIFT: " & CUr.SWIFT,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      EndRow(sheetnum,fileToSave,rownum);
    end;
    if nonblank(CUr.RoutNum) then begin
      BeginRow(sheetnum,fileToSave,rownum,0,blankval);
        colnum = 1;
        style = 3;
        StringCell(sheetnum,fileToSave,colnum,rownum,style,"Routing number: " & CUr.RoutNum,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      EndRow(sheetnum,fileToSave,rownum);
    end;
    if nonblank(CUr.Beneficiary) then begin
      BeginRow(sheetnum,fileToSave,rownum,0,blankval);
        colnum = 1;
        style = 3;
        StringCell(sheetnum,fileToSave,colnum,rownum,style,"Beneficiary:" & CUr.Beneficiary,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      EndRow(sheetnum,fileToSave,rownum);
    end;
    if nonblank(CUr.BeneficiaryAccNumber) then begin
      BeginRow(sheetnum,fileToSave,rownum,0,blankval);
        colnum = 1;
        style = 3;
        StringCell(sheetnum,fileToSave,colnum,rownum,style,"Beneficiary's account number:" & CUr.BeneficiaryAccNumber,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      EndRow(sheetnum,fileToSave,rownum);
    end;
    if nonblank(CUr.CorrespBankOfBenef) then begin
      BeginRow(sheetnum,fileToSave,rownum,0,blankval);
        colnum = 1;
        style = 3;
        StringCell(sheetnum,fileToSave,colnum,rownum,style,"Correspondent Bank of the Beneficiary's Bank: " & CUr.CorrespBankOfBenef,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      EndRow(sheetnum,fileToSave,rownum);
    end;
    if nonblank(CUr.SWIFTCorrespBank) then begin
      BeginRow(sheetnum,fileToSave,rownum,0,blankval);
        colnum = 1;
        style = 3;
        StringCell(sheetnum,fileToSave,colnum,rownum,style,"SWIFT Correspondent Bank: " & CUr.SWIFTCorrespBank,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      EndRow(sheetnum,fileToSave,rownum);
    end;
    if nonblank(CUr.CorrespondentAccNum) then begin
      BeginRow(sheetnum,fileToSave,rownum,0,blankval);
        colnum = 1;
        style = 3;
        StringCell(sheetnum,fileToSave,colnum,rownum,style,"Correspondent account number: " & CUr.CorrespondentAccNum,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      EndRow(sheetnum,fileToSave,rownum);
    end;
    rownum = rownum + 1;
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 10;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Reference: ",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      style = 3;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"payment under Invoice No. " & VIr.SerNr & " of " & VIr.InvDate & " for the consulting service rendered",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 2;
      style = 3;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"by " & VIr.VEName & " during " & mn & " under " & Conr.Description & " " & ConrNumber & "of " & Conr.StartDate,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
  EndSheetData(sheetnum,fileToSave);
  MergeCells(sheetnum,fileToSave,mergeCell,qtyMergeCell);
  EndSheet(sheetnum,fileToSave,0);
  FillSharedStrings(fileToSave,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings,mas);
  ConvertToXLSX(fileToSave);
  MilliSleep(2000);
  addfiletoarea(fileToSave,areatofile,false);
  delete_file(fileToSave);
	RETURN;
END;

global
procedure AcceptDelVI(record VIVc VIr,var area areatofile)
BEGIN
	integer i;
	string 255 tstr,tstr2;
  string 20 mn,mnr;
  string 50 ConrNumber,ConrNumberRus;
  record ContractsVc Conr;
  record CUVc CUr;
	
	array string 10 sheetNames;
	array val sheetColls;
	array integer sheetCollsOutLvl;
	array string 21 mergeCell;
	string 255 fileToSave;
	integer qtyOfSheets,sheetnum,rownum,colnum,style,qtyOfEmpStr;
	array string 100 SharedStrings;
	integer numOfUniqueSharedStrings,numOfSharedStrings,qtyMergeCell;
	string 16 reportName;
  array string 255 mas;
  integer maslen;
	
  Conr.VECode = VIr.VECode;
  ReadFirstKey("VECode",Conr,1,true);
  if nonblank(Conr.Number) then begin
    ConrNumber = "No. " & Conr.Number & " ";
    ConrNumberRus = "№ " & Conr.Number & " ";
  end;
  if getday(VIr.InvDate)<6 then begin
    if getmonth(VIr.InvDate)==1 then begin
      mnr = MonthNameRus(AddMonth(VIr.InvDate,-1)) & " " & GetYear(addyear(VIr.InvDate,-1));
      mn = MonthName(AddMonth(VIr.InvDate,-1)) & " " & GetYear(addyear(VIr.InvDate,-1));
    end else begin
      mnr = MonthNameRus(AddMonth(VIr.InvDate,-1)) & " " & GetYear(VIr.InvDate);
      mn = MonthName(AddMonth(VIr.InvDate,-1)) & " " & GetYear(VIr.InvDate);
    end;
  end else begin
    mnr = MonthNameRus(VIr.InvDate) & " " & GetYear(VIr.InvDate);
    mn = MonthName(VIr.InvDate) & " " & GetYear(VIr.InvDate);
  end;
  CUr.Code = VIr.VECode;
  ReadFirstMain(CUr,1,true);
  
  reportName = "AcceptDelVI";
  if (windowsmode==1) then begin
    fileToSave = "tmpxlsx.xlsx";
  end else begin
    fileToSave = "/tmpxlsx.xlsx";
  end;
  deletefolder(Left(fileToSave,(len(fileToSave) - 5)));
  qtyOfSheets = 1;
  sheetNames[0] = "Sheet1";
  
  colnum = 0;
  for (i=0;i<9;i=i+1) begin
    sheetColls[colnum] = 9.5703125;
    colnum = colnum + 1;
  end;

  colnum = 0;
  numOfUniqueSharedStrings = 0;
  numOfSharedStrings = 0;
  sheetnum = 1;
  qtyMergeCell = 0;
  XmlXlsxWorkBegin(fileToSave,reportName);
  CreateSheetsXLSX(qtyOfSheets,sheetNames,fileToSave,0,false);
  SetSheetsCols(sheetnum,sheetColls,sheetCollsOutLvl,fileToSave);
  BeginSheetData(sheetnum,fileToSave);
    rownum = 1;
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 5;
      mergeCell[qtyMergeCell] = GetStringCellNum(colnum,rownum);
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"АКТ",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 8;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
      mergeCell[qtyMergeCell] = mergeCell[qtyMergeCell] & ":" & GetStringCellNum(colnum - 1,rownum);
      qtyMergeCell = qtyMergeCell + 1;
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 5;
      mergeCell[qtyMergeCell] = GetStringCellNum(colnum,rownum);
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"сдачи-приемки оказанных Услуг",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 8;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
      mergeCell[qtyMergeCell] = mergeCell[qtyMergeCell] & ":" & GetStringCellNum(colnum - 1,rownum);
      qtyMergeCell = qtyMergeCell + 1;
    EndRow(sheetnum,fileToSave,rownum);
    rownum = rownum + 1;
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 5;
      mergeCell[qtyMergeCell] = GetStringCellNum(colnum,rownum);
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"ACCEPTANCE/DELIVERY REPORT",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 8;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
      mergeCell[qtyMergeCell] = mergeCell[qtyMergeCell] & ":" & GetStringCellNum(colnum - 1,rownum);
      qtyMergeCell = qtyMergeCell + 1;
    EndRow(sheetnum,fileToSave,rownum);
    rownum = rownum + 1;
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 7;
      style = 3;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Дата/Date: " & VIr.InvDate,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    rownum = rownum + 1;
    BeginRow(sheetnum,fileToSave,rownum,0,44.25);
      colnum = 1;
      style = 4;
      mergeCell[qtyMergeCell] = GetStringCellNum(colnum,rownum);
      mas[maslen] = "<rPr><b/><sz val=" & Chr(34) & "11" & Chr(34) & "/><color theme=" & Chr(34) & "1" & Chr(34) & "/><rFont val=" & Chr(34) & "Times New Roman" & Chr(34) & "/><family val=" & Chr(34) & "1" & Chr(34) & "/><charset val=" & Chr(34) & "204" & Chr(34) & "/></rPr>";
      maslen = maslen + 1;
      mas[maslen] = "<t>«Открытая Россия»</t>";
      maslen = maslen + 1;
      mas[maslen] = "</r><r><rPr><sz val=" & Chr(34) & "11" & Chr(34) & "/><color theme=" & Chr(34) & "1" & Chr(34) & "/><rFont val=" & Chr(34) & "Times New Roman" & Chr(34) & "/><family val=" & Chr(34) & "1" & Chr(34) & "/><charset val=" & Chr(34) & "204" & Chr(34) & "/></rPr>";
      maslen = maslen + 1;
      mas[maslen] = "<t xml:space=" & Chr(34) & "preserve" & Chr(34) & ">, компания, учрежденная и осуществляющая деятельность в соответствии с законодательством";
      maslen = maslen + 1;
      mas[maslen] = " Великобритании, с офисом, зарегистрированным  по адресу: Palladium House, 1-4 Argyll Street, London, W1F 7LD,";
      maslen = maslen + 1;
      mas[maslen] = " в дальнейшем  именуемая «Заказчик»</t>";
      maslen = maslen + 1;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,",,,b" & maslen,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 8;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
      mergeCell[qtyMergeCell] = mergeCell[qtyMergeCell] & ":" & GetStringCellNum(colnum - 1,rownum);
      qtyMergeCell = qtyMergeCell + 1;
    EndRow(sheetnum,fileToSave,rownum);
    rownum = rownum + 1;
    BeginRow(sheetnum,fileToSave,rownum,0,30);
      colnum = 1;
      style = 4;
      mergeCell[qtyMergeCell] = GetStringCellNum(colnum,rownum);
      mas[maslen] = "<rPr><b/><sz val=" & Chr(34) & "11" & Chr(34) & "/><color theme=" & Chr(34) & "1" & Chr(34) & "/><rFont val=" & Chr(34) & "Times New Roman" & Chr(34) & "/><family val=" & Chr(34) & "1" & Chr(34) & "/><charset val=" & Chr(34) & "204" & Chr(34) & "/></rPr>";
      maslen = maslen + 1;
      mas[maslen] = "<t xml:space=" & Chr(34) & "preserve" & Chr(34) & ">OR (OTKRYTAYA ROSSIA)</t>";
      maslen = maslen + 1;
      mas[maslen] = "</r><r><rPr><sz val=" & Chr(34) & "11" & Chr(34) & "/><color theme=" & Chr(34) & "1" & Chr(34) & "/><rFont val=" & Chr(34) & "Times New Roman" & Chr(34) & "/><family val=" & Chr(34) & "1" & Chr(34) & "/><charset val=" & Chr(34) & "204" & Chr(34) & "/></rPr>";
      maslen = maslen + 1;
      mas[maslen] = "<t xml:space=" & Chr(34) & "preserve" & Chr(34) & ">, a company incorporated and registered in UK, with registered office at Palladium House, 1-4 Argyll Street, London, W1F 7LD, hereinafter referred to the " & Chr(34) & "Customer" & Chr(34) & "</t>";
      maslen = maslen + 1;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,",,,b" & maslen,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 8;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
      mergeCell[qtyMergeCell] = mergeCell[qtyMergeCell] & ":" & GetStringCellNum(colnum - 1,rownum);
      qtyMergeCell = qtyMergeCell + 1;
    EndRow(sheetnum,fileToSave,rownum);
    rownum = rownum + 1;
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 2;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"и",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 2;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"and",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    mas[maslen] = "<rPr><b/><sz val=" & Chr(34) & "11" & Chr(34) & "/><color theme=" & Chr(34) & "1" & Chr(34) & "/><rFont val=" & Chr(34) & "Times New Roman" & Chr(34) & "/><family val=" & Chr(34) & "1" & Chr(34) & "/><charset val=" & Chr(34) & "204" & Chr(34) & "/></rPr><t>";
    maslen = maslen + 1;
    mas[maslen] = CUr.NameinDocument;
    maslen = maslen + 1;
    mas[maslen] = "</t></r><r><rPr><sz val=" & Chr(34) & "11" & Chr(34) & "/><color rgb=" & Chr(34) & "FF000000" & Chr(34) & "/><rFont val=" & Chr(34) & "Times New Roman" & Chr(34) & "/><family val=" & Chr(34) & "1" & Chr(34) & "/><charset val=" & Chr(34) & "204" & Chr(34) & "/></rPr><t xml:space=" & Chr(34) & "preserve" & Chr(34) & ">";
    maslen = maslen + 1;
    if CUr.Gender==0 then begin
      mas[maslen] = ", гражданин " & CUr.Nationality & ", проживающий по адресу: ";
      maslen = maslen + 1;
      mas[maslen] = CUr.DelAddr1;
      maslen = maslen + 1;
      mas[maslen] = ", в дальнейшем именуемый «Исполнитель»,</t>";
      maslen = maslen + 1;
    end else begin
      mas[maslen] = ", гражданка " & CUr.Nationality & ", проживающая по адресу: ";
      maslen = maslen + 1;
      mas[maslen] = CUr.DelAddr1;
      maslen = maslen + 1;
      mas[maslen] = ", в дальнейшем именуемая «Исполнитель»,</t>";
      maslen = maslen + 1;
    end;
    rownum = rownum + 1;
    BeginRow(sheetnum,fileToSave,rownum,0,44.25);
      colnum = 1;
      style = 4;
      mergeCell[qtyMergeCell] = GetStringCellNum(colnum,rownum);
      StringCell(sheetnum,fileToSave,colnum,rownum,style,",,,b" & maslen,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 8;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
      mergeCell[qtyMergeCell] = mergeCell[qtyMergeCell] & ":" & GetStringCellNum(colnum - 1,rownum);
      qtyMergeCell = qtyMergeCell + 1;
    EndRow(sheetnum,fileToSave,rownum);
    mas[maslen] = "<rPr><b/><sz val=" & Chr(34) & "11" & Chr(34) & "/><color theme=" & Chr(34) & "1" & Chr(34) & "/><rFont val=" & Chr(34) & "Times New Roman" & Chr(34) & "/><family val=" & Chr(34) & "1" & Chr(34) & "/><charset val=" & Chr(34) & "204" & Chr(34) & "/></rPr><t>";
    maslen = maslen + 1;
    mas[maslen] = CUr.Name;
    maslen = maslen + 1;
    mas[maslen] = "</t></r><r><rPr><sz val=" & Chr(34) & "11" & Chr(34) & "/><color rgb=" & Chr(34) & "FF000000" & Chr(34) & "/><rFont val=" & Chr(34) & "Times New Roman" & Chr(34) & "/><family val=" & Chr(34) & "1" & Chr(34) & "/><charset val=" & Chr(34) & "204" & Chr(34) & "/></rPr><t xml:space=" & Chr(34) & "preserve" & Chr(34) & ">";
    maslen = maslen + 1;
    mas[maslen] = ", " & CUr.Nationality & " national, resident at: ";
    maslen = maslen + 1;
    mas[maslen] = CUr.DelAddr0 & ", subsequently referred to as the " & Chr(34) & "Service Provider" & Chr(34) & ",</t>";
    maslen = maslen + 1;
    rownum = rownum + 1;
    BeginRow(sheetnum,fileToSave,rownum,0,30);
      colnum = 1;
      style = 4;
      mergeCell[qtyMergeCell] = GetStringCellNum(colnum,rownum);
      StringCell(sheetnum,fileToSave,colnum,rownum,style,",,,b" & maslen,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 8;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
      mergeCell[qtyMergeCell] = mergeCell[qtyMergeCell] & ":" & GetStringCellNum(colnum - 1,rownum);
      qtyMergeCell = qtyMergeCell + 1;
    EndRow(sheetnum,fileToSave,rownum);
    rownum = rownum + 1;
    //------------------------------------------------------------------------
    BeginRow(sheetnum,fileToSave,rownum,0,44.25);
      colnum = 1;
      style = 4;
      mergeCell[qtyMergeCell] = GetStringCellNum(colnum,rownum);
      mas[maslen] = "<t xml:space=" & Chr(34) & "preserve" & Chr(34) & ">В соответствии с п.4 " & Conr.DescriptionRus & " от " & Conr.StartDate & " стороны составили настоящий Акт сдачи-приемки услуг, оказанных Исполнителем за</t>";
      maslen = maslen + 1;
      mas[maslen] = "</r><r><rPr><b/><sz val=" & Chr(34) & "11" & Chr(34) & "/><color rgb=" & Chr(34) & "FF000000" & Chr(34) & "/><rFont val=" & Chr(34) & "Times New Roman" & Chr(34) & "/><family val=" & Chr(34) & "1" & Chr(34) & "/><charset val=" & Chr(34) & "204" & Chr(34) & "/></rPr>";
      maslen = maslen + 1;
      mas[maslen] = "<t xml:space=" & Chr(34) & "preserve" & Chr(34) & "> " & mnr & "</t>";
      maslen = maslen + 1;
      mas[maslen] = "</r><r><rPr><sz val=" & Chr(34) & "11" & Chr(34) & "/><color rgb=" & Chr(34) & "FF000000" & Chr(34) & "/><rFont val=" & Chr(34) & "Times New Roman" & Chr(34) & "/><family val=" & Chr(34) & "1" & Chr(34) & "/><charset val=" & Chr(34) & "204" & Chr(34) & "/></rPr>";
      maslen = maslen + 1;
      mas[maslen] = "<t xml:space=" & Chr(34) & "preserve" & Chr(34) & "> года – описание оказанных услуг в приложении</t>";
      maslen = maslen + 1;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,",,,b" & maslen,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 8;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
      mergeCell[qtyMergeCell] = mergeCell[qtyMergeCell] & ":" & GetStringCellNum(colnum - 1,rownum);
      qtyMergeCell = qtyMergeCell + 1;
    EndRow(sheetnum,fileToSave,rownum);
    rownum = rownum + 1;
    BeginRow(sheetnum,fileToSave,rownum,0,44.25);
      colnum = 1;
      style = 4;
      mas[maslen] = "<t xml:space=" & Chr(34) & "preserve" & Chr(34) & ">As per p.4 of the " & Conr.Description & " dated " & Conr.StartDate & " the parties signed this Acceptance/Delivery Report for services delivered by the Service Provider in</t>";
      maslen = maslen + 1;
      mas[maslen] = "</r><r><rPr><b/><sz val=" & Chr(34) & "11" & Chr(34) & "/><color rgb=" & Chr(34) & "FF000000" & Chr(34) & "/><rFont val=" & Chr(34) & "Times New Roman" & Chr(34) & "/><family val=" & Chr(34) & "1" & Chr(34) & "/><charset val=" & Chr(34) & "204" & Chr(34) & "/></rPr>";
      maslen = maslen + 1;
      mas[maslen] = "<t xml:space=" & Chr(34) & "preserve" & Chr(34) & "> " & mn & "</t>";
      maslen = maslen + 1;
      mas[maslen] = "</r><r><rPr><sz val=" & Chr(34) & "11" & Chr(34) & "/><color rgb=" & Chr(34) & "FF000000" & Chr(34) & "/><rFont val=" & Chr(34) & "Times New Roman" & Chr(34) & "/><family val=" & Chr(34) & "1" & Chr(34) & "/><charset val=" & Chr(34) & "204" & Chr(34) & "/></rPr>";
      maslen = maslen + 1;
      mas[maslen] = "<t xml:space=" & Chr(34) & "preserve" & Chr(34) & "> - see description of the services attached herewith.</t>";
      maslen = maslen + 1;
      mergeCell[qtyMergeCell] = GetStringCellNum(colnum,rownum);
      StringCell(sheetnum,fileToSave,colnum,rownum,style,",,,b" & maslen,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 8;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
      mergeCell[qtyMergeCell] = mergeCell[qtyMergeCell] & ":" & GetStringCellNum(colnum - 1,rownum);
      qtyMergeCell = qtyMergeCell + 1;
    EndRow(sheetnum,fileToSave,rownum);
    rownum = rownum + 4;
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 2;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"«Заказчик» претензий по качеству оказанных услуг не имеет.",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 2;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"The Client has no claims as to the quality of services provided.",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    rownum = rownum + 4;
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 6;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Заказчик",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 2;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
      colnum = colnum + 3;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Исполнитель",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      qtyOfEmpStr = 2;
      EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 2;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"The Customer",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
      colnum = colnum + 5;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"The Service Provider",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    rownum = rownum + 3;
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 1;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Описание оказанных Услуг/",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
    BeginRow(sheetnum,fileToSave,rownum,0,blankval);
      colnum = 1;
      style = 1;
      StringCell(sheetnum,fileToSave,colnum,rownum,style,"Description of the Services",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
    EndRow(sheetnum,fileToSave,rownum);
  EndSheetData(sheetnum,fileToSave);
  MergeCells(sheetnum,fileToSave,mergeCell,qtyMergeCell);
  EndSheet(sheetnum,fileToSave,0);
  FillSharedStrings(fileToSave,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings,mas);
  ConvertToXLSX(fileToSave);
  MilliSleep(2000);
  addfiletoarea(fileToSave,areatofile,false);
  delete_file(fileToSave);
	RETURN;
END;