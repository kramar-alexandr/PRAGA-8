remote procedure TBBUInSumup(var record TBBUInVc);

procedure AddTBBUInLineType18(Integer t,Boolean firstf)
begin
  record TBBUInVc TBBUInr;
  row TBBUInVc TBBUInrw;
  Integer wn,rownr,mtrw,i;
  boolean testf;
  
	wn = CurWindow;
	GetWindowRecord(wn,TBBUInr);
	testf = true;
	mtrw = matrowcnt(TBBUInr);
	For(i=0;i<mtrw;i=i+1) begin
		matrowget(TBBUInr,i,TBBUInrw);
		if(TBBUInrw.stp==18)then begin
			switch(t)begin
				case 1:if(TBBUInrw.Spec=="I")then begin testf = false; WindowFieldGoto(wn,TBBUInr,i,"Spec",false); end;
				case 2:if(TBBUInrw.Spec=="II")then begin testf = false; WindowFieldGoto(wn,TBBUInr,i,"Spec",false); end;
				case 3:if(TBBUInrw.Spec=="III")then begin testf = false; WindowFieldGoto(wn,TBBUInr,i,"Spec",false); end;
				case 4:if(TBBUInrw.Spec=="IV")then begin testf = false; WindowFieldGoto(wn,TBBUInr,i,"Spec",false); end;
			end;
		end;  
	end; 
	if(testf)then begin
		rownr = WindowActiveRow(wn);
		DeselectWindow(wn,false);
		if (rownr<0) then begin 
			if (firstf) then begin
				rownr = 0;
			end else begin
				rownr = MatRowCnt(TBBUInr);
			end;
		end;
		ClearRow(TBBUInr,TBBUInrw,18);
		switch(t)begin
			case 1: TBBUInrw.Spec = "I";
							TBBUInrw.ItemType = 1;	//Edit----------------------Dima  26.05.2015
			case 2: TBBUInrw.Spec = "II";
							TBBUInrw.ItemType = 2;
			case 3: TBBUInrw.Spec = "III";
							TBBUInrw.ItemType = 3;
			case 4: TBBUInrw.Spec = "IV";
							TBBUInrw.ItemType = 4;
							
		end;
		TBBUInrw.stp = 18;
		MatRowInsert(TBBUInr,rownr,TBBUInrw);
		PutWindowRecord(wn,TBBUInr);
		WindowFieldGoto(wn,TBBUInr,rownr,"Spec",false);
	end;
	
  return;
end;

global
procedure HeaderLine0TBBUInDsm()
BEGIN

  RETURN;
END;

global
procedure HeaderLine1TBBUInDsm()
BEGIN
  AddTBBUInLineType18(1,false);
  RETURN;
END;

global
procedure HeaderLine2TBBUInDsm()
BEGIN
  AddTBBUInLineType18(2,false);
  RETURN;
END;

global
procedure HeaderLine3TBBUInDsm()
BEGIN
  AddTBBUInLineType18(3,false);
  RETURN;
END;

global
procedure HeaderLine4TBBUInDsm()
BEGIN
  AddTBBUInLineType18(4,false);
  RETURN;
END;

global updating procedure CopyQuartInDsm()
begin
  record TBBUInVc TBBUInr;
  row  TBBUInVc TBBUInrw;
  Integer wn,rownr,i,rowstoput;
  boolean testf;
  
  wn = CurWindow;
  rownr = GetWindowCurRow(wn);
  DeselectWindow(wn,false);
  GetWindowRecord(wn,TBBUInr);
  
  i = MatRowCnt(TBBUInr);
  rowstoput = i - rownr - 1;
  if rownr<0 then begin
    messagebox(0,"Select quartal in matrix first!");
  end else begin
    MatRowGet(TBBUInr,rownr,TBBUInrw);
    if TBBUInrw.stp!=18 then begin
      messagebox(0,"Select quartal first!");
    end else begin
      testf = true;
      while (testf) begin
        rownr = rownr + 1;
        MatRowGet(TBBUInr,rownr,TBBUInrw);
        if TBBUInrw.stp==18 then begin testf = false; end;
        if rowstoput<=0 then begin testf = false; end;
        if testf then begin
          MatRowPut(TBBUInr,i,TBBUInrw);
          i = i + 1;
          rowstoput = rowstoput - 1;
        end;
      end;
      TBBUInSumup(TBBUInr);
      PutWindowRecord(wn,TBBUInr);
    end;
  end;
  
  //WindowDoOK(wn,0);
end;