global
updating function Boolean PMTClassOnOKWindow(Integer wn)
begin
  record PMBlock PMb;
  row PMBlock PMbrw;
  record RestPMBlock RestPMb;
  row RestPMBlock RestPMbrw;
  Boolean res;
  Integer pmi,i,rwcnt;
  record LocalMachineBlock LMb;

  res = true;
  GetWindowRecord(wn,PMb);
  if (IsStandardProduct or IsSberbankProduct) then begin
    BlockLoad(RestPMb);
    BlockLoad(LMb);
    rwcnt = MatRowCnt(RestPMb);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowDelete(RestPMb,i);
      rwcnt = MatRowCnt(RestPMb);
    end;

    rwcnt = MatRowCnt(PMb);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(PMb,i,PMbrw);

      RestPMbrw.PMCode = PMbrw.Code;
      RestPMbrw.MachineName = LMb.LocalMachineCode;
      RestPMbrw.ButtonType = 0;
      RestPMbrw.Label = PMbrw.Comment;
      RestPMbrw.colnr = 1;
      RestPMbrw.rowstp = kInvoiceRowTypeCashPayment;
      RestPMbrw.Drawers = "";
//      RestPMbrw.CardType = 0;
      MatRowPut(RestPMb,pmi,RestPMbrw);
      pmi = pmi + 1;
    end;
  
    BlockStore(RestPMb);
  end;
  PMTClassOnOKWindow = res;
  return;
end;

function Boolean PMTClassBankCodeEFAfter(Integer wn,Integer rownr,Boolean changedf)
begin
  record PMBlock PMb;
  row PMBlock PMbrw;
  record BankVc Bankr;

  if (changedf) then begin
    if (rownr>=0) then begin
      GetWindowRecord(wn,PMb);        
      MatRowGet(PMb,rownr,PMbrw);
      if (blank(PMbrw.BankNr)) then begin
        Bankr.Code = PMbrw.BankCode;
        ReadFirstMain(Bankr,1,true);
        PMbrw.BankNr = Bankr.Nr2;
        MatRowPut(PMb,rownr,PMbrw);
        PutWindowRecord(wn,PMb);    
      end;
    end;
  end;
  PMTClassBankCodeEFAfter = true;
  return;
end;

function Boolean PMTClassCodeEFAfter(Integer wn,Integer rownr,Boolean changedf)
begin
  record PMBlock PMb;
  row PMBlock PMbrw;
  
  if (changedf) then begin
    if (rownr>=0) then begin
      GetWindowRecord(wn,PMb);        
      MatRowGet(PMb,rownr,PMbrw);
      PMbrw.Objects = PMbrw.Code;
      MatRowPut(PMb,rownr,PMbrw);
      PutWindowRecord(wn,PMb);    
    end;
  end;
  PMTClassCodeEFAfter = true;
  return;
end;

function Boolean PMTClassAccNrEFAfter(Integer wn,Integer rownr,Boolean changedf)
begin
  record PMBlock PMb;
  row PMBlock PMbrw;
  record PDVc PDr;
  record AccVc Accr;

  if (changedf) then begin
    if (rownr>=0) then begin
      GetWindowRecord(wn,PMb);        
      MatRowGet(PMb,rownr,PMbrw);
      Accr.AccNumber = PMbrw.AccNr;
      if (ReadFirstMain(Accr,1,true)) then begin
        PMbrw.Comment = Accr.Comment;
        MatRowPut(PMb,rownr,PMbrw);
        PutWindowRecord(wn,PMb);    
      end;
    end;
  end;
  PMTClassAccNrEFAfter = true;
  return;
end;

global
function Boolean PMTClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
  Boolean res;

  switch (fieldname) begin
    case "BankCode": res = PMTClassBankCodeEFAfter(wn,rownr,changed!=0);
    case "Code": res = PMTClassCodeEFAfter(wn,rownr,changed!=0);
    case "AccNr": res = PMTClassAccNrEFAfter(wn,rownr,changed!=0);
  end;
  PMTClassAfterEditField = res;
  return;
end;
